{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "deeplabv3_r50-d8_512x1024_4k_dummy_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='ASPPHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        dilations=(1, 12, 24, 36),\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = './work_dirs/deeplabv3_r50-d8_512x1024_4k_dummy_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18985, "data_time": 0.05605, "decode.loss_seg": 2.95079, "decode.acc_seg": 5.26132, "aux.loss_seg": 1.17924, "aux.acc_seg": 5.26382, "loss": 4.13003, "time": 1.33924}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18985, "data_time": 0.02818, "decode.loss_seg": 2.94901, "decode.acc_seg": 5.26358, "aux.loss_seg": 1.17893, "aux.acc_seg": 5.26184, "loss": 4.12793, "time": 0.858}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18985, "data_time": 0.02464, "decode.loss_seg": 2.94832, "decode.acc_seg": 5.26519, "aux.loss_seg": 1.17883, "aux.acc_seg": 5.26303, "loss": 4.12715, "time": 0.88045}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 18985, "data_time": 0.02487, "decode.loss_seg": 2.94781, "decode.acc_seg": 5.26317, "aux.loss_seg": 1.17875, "aux.acc_seg": 5.26376, "loss": 4.12655, "time": 0.75086}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 18985, "data_time": 0.03164, "decode.loss_seg": 2.9474, "decode.acc_seg": 5.26346, "aux.loss_seg": 1.17868, "aux.acc_seg": 5.26358, "loss": 4.12608, "time": 0.822}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 18985, "data_time": 0.02415, "decode.loss_seg": 2.94703, "decode.acc_seg": 5.26267, "aux.loss_seg": 1.17861, "aux.acc_seg": 5.26526, "loss": 4.12565, "time": 0.76683}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 18985, "data_time": 0.02827, "decode.loss_seg": 2.94674, "decode.acc_seg": 5.26457, "aux.loss_seg": 1.17856, "aux.acc_seg": 5.26448, "loss": 4.1253, "time": 0.87186}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 18985, "data_time": 0.04938, "decode.loss_seg": 2.9465, "decode.acc_seg": 5.26184, "aux.loss_seg": 1.17851, "aux.acc_seg": 5.26159, "loss": 4.125, "time": 0.88443}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 18985, "data_time": 0.03798, "decode.loss_seg": 2.94627, "decode.acc_seg": 5.26473, "aux.loss_seg": 1.17846, "aux.acc_seg": 5.26195, "loss": 4.12473, "time": 0.84927}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 18985, "data_time": 0.02201, "decode.loss_seg": 2.94609, "decode.acc_seg": 5.26378, "aux.loss_seg": 1.17842, "aux.acc_seg": 5.26152, "loss": 4.12451, "time": 0.80483}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 18985, "data_time": 0.03223, "decode.loss_seg": 2.94592, "decode.acc_seg": 5.26341, "aux.loss_seg": 1.17838, "aux.acc_seg": 5.26246, "loss": 4.1243, "time": 0.88635}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 18985, "data_time": 0.05655, "decode.loss_seg": 2.94577, "decode.acc_seg": 5.26261, "aux.loss_seg": 1.17835, "aux.acc_seg": 5.26294, "loss": 4.12412, "time": 0.88156}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 18985, "data_time": 0.02211, "decode.loss_seg": 2.94565, "decode.acc_seg": 5.26434, "aux.loss_seg": 1.17832, "aux.acc_seg": 5.26215, "loss": 4.12396, "time": 0.80629}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 18985, "data_time": 0.01921, "decode.loss_seg": 2.94553, "decode.acc_seg": 5.26451, "aux.loss_seg": 1.17829, "aux.acc_seg": 5.26081, "loss": 4.12381, "time": 0.87882}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 18985, "data_time": 0.02336, "decode.loss_seg": 2.94543, "decode.acc_seg": 5.26091, "aux.loss_seg": 1.17826, "aux.acc_seg": 5.26294, "loss": 4.12369, "time": 0.85229}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 18985, "data_time": 0.02047, "decode.loss_seg": 2.94534, "decode.acc_seg": 5.26314, "aux.loss_seg": 1.17824, "aux.acc_seg": 5.26305, "loss": 4.12358, "time": 0.86355}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 18985, "data_time": 0.02288, "decode.loss_seg": 2.94526, "decode.acc_seg": 5.26255, "aux.loss_seg": 1.17821, "aux.acc_seg": 5.26374, "loss": 4.12347, "time": 0.78562}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 18985, "data_time": 0.03482, "decode.loss_seg": 2.9452, "decode.acc_seg": 5.26223, "aux.loss_seg": 1.17819, "aux.acc_seg": 5.26155, "loss": 4.12339, "time": 0.90883}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 18985, "data_time": 0.0497, "decode.loss_seg": 2.94513, "decode.acc_seg": 5.26525, "aux.loss_seg": 1.17817, "aux.acc_seg": 5.2628, "loss": 4.1233, "time": 0.91718}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 18985, "data_time": 0.02277, "decode.loss_seg": 2.94508, "decode.acc_seg": 5.26228, "aux.loss_seg": 1.17815, "aux.acc_seg": 5.26564, "loss": 4.12323, "time": 0.83601}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 18985, "data_time": 0.02509, "decode.loss_seg": 2.94502, "decode.acc_seg": 5.2636, "aux.loss_seg": 1.17814, "aux.acc_seg": 5.26291, "loss": 4.12316, "time": 0.81122}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 18985, "data_time": 0.01822, "decode.loss_seg": 2.94498, "decode.acc_seg": 5.26226, "aux.loss_seg": 1.17812, "aux.acc_seg": 5.26284, "loss": 4.12309, "time": 0.81706}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 18985, "data_time": 0.04864, "decode.loss_seg": 2.94493, "decode.acc_seg": 5.26247, "aux.loss_seg": 1.1781, "aux.acc_seg": 5.26513, "loss": 4.12304, "time": 0.89084}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 18985, "data_time": 0.0219, "decode.loss_seg": 2.9449, "decode.acc_seg": 5.26193, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.26186, "loss": 4.12299, "time": 0.82521}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 18985, "data_time": 0.03333, "decode.loss_seg": 2.94487, "decode.acc_seg": 5.26246, "aux.loss_seg": 1.17808, "aux.acc_seg": 5.26227, "loss": 4.12294, "time": 0.8574}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 18985, "data_time": 0.02477, "decode.loss_seg": 2.94483, "decode.acc_seg": 5.26259, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26401, "loss": 4.12289, "time": 0.93362}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 18985, "data_time": 0.06069, "decode.loss_seg": 2.9448, "decode.acc_seg": 5.26301, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.2632, "loss": 4.12286, "time": 0.93694}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 18985, "data_time": 0.02337, "decode.loss_seg": 2.94478, "decode.acc_seg": 5.26324, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26287, "loss": 4.12282, "time": 0.85525}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 18985, "data_time": 0.0285, "decode.loss_seg": 2.94476, "decode.acc_seg": 5.26293, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.26347, "loss": 4.12279, "time": 0.88693}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 18985, "data_time": 0.03406, "decode.loss_seg": 2.94473, "decode.acc_seg": 5.26565, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26186, "loss": 4.12276, "time": 0.92538}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 18985, "data_time": 0.02323, "decode.loss_seg": 2.94471, "decode.acc_seg": 5.26237, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26137, "loss": 4.12273, "time": 0.83119}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 18985, "data_time": 0.02462, "decode.loss_seg": 2.9447, "decode.acc_seg": 5.26461, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26291, "loss": 4.1227, "time": 0.82737}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 18985, "data_time": 0.03398, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26333, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26279, "loss": 4.12268, "time": 0.87012}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 18985, "data_time": 0.02879, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26185, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26066, "loss": 4.12266, "time": 0.81007}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 18985, "data_time": 0.02807, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.2613, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26392, "loss": 4.12264, "time": 0.85728}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 18985, "data_time": 0.0229, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26396, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26208, "loss": 4.12261, "time": 0.86599}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 18985, "data_time": 0.03577, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26357, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26227, "loss": 4.1226, "time": 0.91166}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 18985, "data_time": 0.02402, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26099, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26516, "loss": 4.12258, "time": 0.80498}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 18985, "data_time": 0.01966, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.2628, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26264, "loss": 4.12257, "time": 0.77623}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 18985, "aAcc": 0.0526, "mIoU": 0.0246, "mAcc": 0.0526, "IoU.road": 0.0269, "IoU.sidewalk": 0.0236, "IoU.building": 0.0425, "IoU.wall": 0.0206, "IoU.fence": 0.0273, "IoU.pole": 0.0239, "IoU.traffic light": 0.0364, "IoU.traffic sign": 0.0132, "IoU.vegetation": 0.0316, "IoU.terrain": 0.0199, "IoU.sky": 0.014, "IoU.person": 0.0202, "IoU.rider": 0.0127, "IoU.car": 0.0236, "IoU.truck": 0.0197, "IoU.bus": 0.0257, "IoU.train": 0.0309, "IoU.motorcycle": 0.0214, "IoU.bicycle": 0.0324, "Acc.road": 0.0526, "Acc.sidewalk": 0.041, "Acc.building": 0.1815, "Acc.wall": 0.0327, "Acc.fence": 0.0537, "Acc.pole": 0.042, "Acc.traffic light": 0.1054, "Acc.traffic sign": 0.0174, "Acc.vegetation": 0.0731, "Acc.terrain": 0.031, "Acc.sky": 0.0187, "Acc.person": 0.0318, "Acc.rider": 0.0165, "Acc.car": 0.0409, "Acc.truck": 0.0305, "Acc.bus": 0.0477, "Acc.train": 0.0697, "Acc.motorcycle": 0.035, "Acc.bicycle": 0.0781, "data_time": 0.03337, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26386, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26102, "loss": 4.12255, "time": 0.93733}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 18985, "data_time": 2.23507, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26209, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26456, "loss": 4.12254, "time": 3.01198}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 18985, "data_time": 0.02858, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26417, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26304, "loss": 4.12252, "time": 0.88898}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 18985, "data_time": 0.02562, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26451, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26169, "loss": 4.12251, "time": 0.84715}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 18985, "data_time": 0.01668, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26432, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26413, "loss": 4.1225, "time": 0.82125}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 18985, "data_time": 0.02818, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26364, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.262, "loss": 4.1225, "time": 0.80226}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 18985, "data_time": 0.02069, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26552, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.2653, "loss": 4.12248, "time": 0.87508}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 18985, "data_time": 0.03443, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26217, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26336, "loss": 4.12248, "time": 0.81547}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 18985, "data_time": 0.03483, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26525, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26489, "loss": 4.12247, "time": 0.79599}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 18985, "data_time": 0.02466, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.2638, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26321, "loss": 4.12246, "time": 0.77844}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 18985, "data_time": 0.04064, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26404, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26354, "loss": 4.12245, "time": 0.84456}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 18985, "data_time": 0.02175, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26533, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26326, "loss": 4.12244, "time": 0.85638}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 18985, "data_time": 0.01845, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26312, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26259, "loss": 4.12244, "time": 0.85423}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 18985, "data_time": 0.02816, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26359, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26473, "loss": 4.12244, "time": 0.87833}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 18985, "data_time": 0.04377, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26297, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26227, "loss": 4.12243, "time": 0.86121}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 18985, "data_time": 0.01944, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26452, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26383, "loss": 4.12243, "time": 0.81317}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 18985, "data_time": 0.02544, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2634, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.2631, "loss": 4.12242, "time": 0.81274}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 18985, "data_time": 0.02983, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26343, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26377, "loss": 4.12242, "time": 0.856}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 18985, "data_time": 0.03925, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2625, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26407, "loss": 4.12241, "time": 0.88961}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 18985, "data_time": 0.02944, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26321, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26465, "loss": 4.12241, "time": 0.85784}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 18985, "data_time": 0.03618, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26282, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26274, "loss": 4.1224, "time": 0.81899}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 18985, "data_time": 0.02813, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26419, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26321, "loss": 4.1224, "time": 0.79479}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 18985, "data_time": 0.03542, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26426, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26025, "loss": 4.1224, "time": 0.86005}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 18985, "data_time": 0.02012, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26344, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26363, "loss": 4.12239, "time": 0.78854}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 18985, "data_time": 0.02402, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26401, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26186, "loss": 4.12239, "time": 0.79684}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 18985, "data_time": 0.03829, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26452, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26445, "loss": 4.12239, "time": 0.91665}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 18985, "data_time": 0.02212, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.2633, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26347, "loss": 4.12239, "time": 0.86191}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 18985, "data_time": 0.05612, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26429, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26297, "loss": 4.12239, "time": 0.91425}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 18985, "data_time": 0.02048, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26338, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26209, "loss": 4.12239, "time": 0.85825}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 18985, "data_time": 0.02312, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26388, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2634, "loss": 4.12238, "time": 0.83549}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 18985, "data_time": 0.04812, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26316, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26429, "loss": 4.12238, "time": 0.89509}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 18985, "data_time": 0.05443, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26341, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26107, "loss": 4.12238, "time": 0.87645}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 18985, "data_time": 0.02835, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26453, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26407, "loss": 4.12238, "time": 0.87388}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 18985, "data_time": 0.03651, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26433, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26295, "loss": 4.12237, "time": 0.90829}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 18985, "data_time": 0.02901, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26387, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26292, "loss": 4.12238, "time": 0.87234}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 18985, "data_time": 0.066, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.2634, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26388, "loss": 4.12237, "time": 0.91151}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 18985, "data_time": 0.02881, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26232, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26278, "loss": 4.12237, "time": 0.82996}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 18985, "data_time": 0.03554, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26495, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26394, "loss": 4.12237, "time": 0.78786}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 18985, "data_time": 0.05166, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26329, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2654, "loss": 4.12237, "time": 0.9679}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 18985, "data_time": 0.04099, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26435, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26125, "loss": 4.12237, "time": 0.87825}
{"mode": "train", "epoch": 22, "iter": 63, "lr": 0.00011, "memory": 18985, "aAcc": 0.0526, "mIoU": 0.0246, "mAcc": 0.0526, "IoU.road": 0.0289, "IoU.sidewalk": 0.0283, "IoU.building": 0.0374, "IoU.wall": 0.0208, "IoU.fence": 0.027, "IoU.pole": 0.0249, "IoU.traffic light": 0.0367, "IoU.traffic sign": 0.0178, "IoU.vegetation": 0.0376, "IoU.terrain": 0.0165, "IoU.sky": 0.0086, "IoU.person": 0.0198, "IoU.rider": 0.0102, "IoU.car": 0.0184, "IoU.truck": 0.0232, "IoU.bus": 0.0283, "IoU.train": 0.0311, "IoU.motorcycle": 0.0182, "IoU.bicycle": 0.0333, "Acc.road": 0.0604, "Acc.sidewalk": 0.0575, "Acc.building": 0.1144, "Acc.wall": 0.0332, "Acc.fence": 0.0526, "Acc.pole": 0.0451, "Acc.traffic light": 0.1088, "Acc.traffic sign": 0.0263, "Acc.vegetation": 0.1169, "Acc.terrain": 0.0236, "Acc.sky": 0.0102, "Acc.person": 0.0307, "Acc.rider": 0.0124, "Acc.car": 0.0276, "Acc.truck": 0.0399, "Acc.bus": 0.0579, "Acc.train": 0.0707, "Acc.motorcycle": 0.0272, "Acc.bicycle": 0.0834, "data_time": 0.03413, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26295, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26281, "loss": 4.12237, "time": 0.92848}
