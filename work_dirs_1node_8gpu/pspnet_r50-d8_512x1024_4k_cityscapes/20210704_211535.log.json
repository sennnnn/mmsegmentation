{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "pspnet_r50-d8_512x1024_4k_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='PSPHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        pool_scales=(1, 2, 3, 6),\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = './work_dirs/pspnet_r50-d8_512x1024_4k_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18766, "data_time": 0.03646, "decode.loss_seg": 2.95088, "decode.acc_seg": 5.262, "aux.loss_seg": 1.17918, "aux.acc_seg": 5.26273, "loss": 4.13006, "time": 1.01647}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18766, "data_time": 0.01733, "decode.loss_seg": 2.94918, "decode.acc_seg": 5.26397, "aux.loss_seg": 1.1789, "aux.acc_seg": 5.26282, "loss": 4.12809, "time": 0.57297}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18766, "data_time": 0.01508, "decode.loss_seg": 2.94842, "decode.acc_seg": 5.26361, "aux.loss_seg": 1.17881, "aux.acc_seg": 5.26069, "loss": 4.12723, "time": 0.60278}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 18766, "data_time": 0.0313, "decode.loss_seg": 2.94785, "decode.acc_seg": 5.26434, "aux.loss_seg": 1.17873, "aux.acc_seg": 5.26248, "loss": 4.12659, "time": 0.6059}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 18766, "data_time": 0.0281, "decode.loss_seg": 2.94743, "decode.acc_seg": 5.26362, "aux.loss_seg": 1.17867, "aux.acc_seg": 5.26238, "loss": 4.12609, "time": 0.61261}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 18766, "data_time": 0.01896, "decode.loss_seg": 2.94706, "decode.acc_seg": 5.26177, "aux.loss_seg": 1.1786, "aux.acc_seg": 5.26196, "loss": 4.12566, "time": 0.56795}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 18766, "data_time": 0.02377, "decode.loss_seg": 2.94672, "decode.acc_seg": 5.26271, "aux.loss_seg": 1.17855, "aux.acc_seg": 5.26324, "loss": 4.12527, "time": 0.58973}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 18766, "data_time": 0.02527, "decode.loss_seg": 2.94646, "decode.acc_seg": 5.2631, "aux.loss_seg": 1.1785, "aux.acc_seg": 5.2634, "loss": 4.12496, "time": 0.60098}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 18766, "data_time": 0.03714, "decode.loss_seg": 2.94623, "decode.acc_seg": 5.26446, "aux.loss_seg": 1.17845, "aux.acc_seg": 5.26258, "loss": 4.12469, "time": 0.62317}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 18766, "data_time": 0.01822, "decode.loss_seg": 2.94604, "decode.acc_seg": 5.26248, "aux.loss_seg": 1.17841, "aux.acc_seg": 5.2627, "loss": 4.12445, "time": 0.57167}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 18766, "data_time": 0.0204, "decode.loss_seg": 2.94587, "decode.acc_seg": 5.26419, "aux.loss_seg": 1.17837, "aux.acc_seg": 5.26192, "loss": 4.12424, "time": 0.6649}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 18766, "data_time": 0.033, "decode.loss_seg": 2.94571, "decode.acc_seg": 5.26383, "aux.loss_seg": 1.17834, "aux.acc_seg": 5.26368, "loss": 4.12405, "time": 0.66514}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 18766, "data_time": 0.02494, "decode.loss_seg": 2.94559, "decode.acc_seg": 5.26342, "aux.loss_seg": 1.17831, "aux.acc_seg": 5.26448, "loss": 4.1239, "time": 0.68819}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 18766, "data_time": 0.02993, "decode.loss_seg": 2.94547, "decode.acc_seg": 5.26474, "aux.loss_seg": 1.17828, "aux.acc_seg": 5.26245, "loss": 4.12375, "time": 0.63421}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 18766, "data_time": 0.0368, "decode.loss_seg": 2.94538, "decode.acc_seg": 5.26414, "aux.loss_seg": 1.17825, "aux.acc_seg": 5.26253, "loss": 4.12363, "time": 0.70271}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 18766, "data_time": 0.02945, "decode.loss_seg": 2.94529, "decode.acc_seg": 5.26388, "aux.loss_seg": 1.17823, "aux.acc_seg": 5.26299, "loss": 4.12351, "time": 0.69351}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 18766, "data_time": 0.02194, "decode.loss_seg": 2.9452, "decode.acc_seg": 5.26214, "aux.loss_seg": 1.1782, "aux.acc_seg": 5.26501, "loss": 4.1234, "time": 0.64004}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 18766, "data_time": 0.02706, "decode.loss_seg": 2.94512, "decode.acc_seg": 5.26469, "aux.loss_seg": 1.17818, "aux.acc_seg": 5.26307, "loss": 4.1233, "time": 0.70688}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 18766, "data_time": 0.02712, "decode.loss_seg": 2.94506, "decode.acc_seg": 5.26274, "aux.loss_seg": 1.17816, "aux.acc_seg": 5.26158, "loss": 4.12322, "time": 0.67294}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 18766, "data_time": 0.02609, "decode.loss_seg": 2.945, "decode.acc_seg": 5.26383, "aux.loss_seg": 1.17814, "aux.acc_seg": 5.26447, "loss": 4.12314, "time": 0.60204}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 18766, "data_time": 0.01778, "decode.loss_seg": 2.94495, "decode.acc_seg": 5.26473, "aux.loss_seg": 1.17812, "aux.acc_seg": 5.26265, "loss": 4.12307, "time": 0.63386}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 18766, "data_time": 0.03646, "decode.loss_seg": 2.9449, "decode.acc_seg": 5.26411, "aux.loss_seg": 1.17811, "aux.acc_seg": 5.26234, "loss": 4.123, "time": 0.71017}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 18766, "data_time": 0.02745, "decode.loss_seg": 2.94484, "decode.acc_seg": 5.26207, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.2635, "loss": 4.12293, "time": 0.63291}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 18766, "data_time": 0.0203, "decode.loss_seg": 2.94481, "decode.acc_seg": 5.26299, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26266, "loss": 4.12288, "time": 0.57493}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 18766, "data_time": 0.03432, "decode.loss_seg": 2.94477, "decode.acc_seg": 5.26228, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26345, "loss": 4.12283, "time": 0.63229}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 18766, "data_time": 0.03915, "decode.loss_seg": 2.94474, "decode.acc_seg": 5.26351, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26458, "loss": 4.12279, "time": 0.70091}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 18766, "data_time": 0.02632, "decode.loss_seg": 2.94471, "decode.acc_seg": 5.26231, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26174, "loss": 4.12275, "time": 0.5451}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 18766, "data_time": 0.04098, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.26314, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.26324, "loss": 4.12272, "time": 0.70492}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 18766, "data_time": 0.03123, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26088, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26371, "loss": 4.12269, "time": 0.70783}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 18766, "data_time": 0.03129, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.26248, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26375, "loss": 4.12265, "time": 0.63143}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 18766, "data_time": 0.02554, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.2635, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26383, "loss": 4.12263, "time": 0.62152}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 18766, "data_time": 0.02375, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26419, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26436, "loss": 4.12262, "time": 0.66425}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 18766, "data_time": 0.03155, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26321, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26362, "loss": 4.12259, "time": 0.65602}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 18766, "data_time": 0.03763, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.2619, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26239, "loss": 4.12258, "time": 0.60456}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 18766, "data_time": 0.01894, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26236, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26368, "loss": 4.12256, "time": 0.62754}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 18766, "data_time": 0.02562, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.2649, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26249, "loss": 4.12255, "time": 0.69304}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 18766, "data_time": 0.03624, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26366, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26251, "loss": 4.12253, "time": 0.70869}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 18766, "data_time": 0.02645, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.2636, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26272, "loss": 4.12252, "time": 0.60415}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 18766, "data_time": 0.02312, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26353, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26325, "loss": 4.12252, "time": 0.60235}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 18766, "aAcc": 0.0526, "mIoU": 0.0213, "mAcc": 0.0526, "IoU.road": 0.018, "IoU.sidewalk": 0.0121, "IoU.building": 0.0237, "IoU.wall": 0.0361, "IoU.fence": 0.0437, "IoU.pole": 0.0251, "IoU.traffic light": 0.0211, "IoU.traffic sign": 0.0049, "IoU.vegetation": 0.0153, "IoU.terrain": 0.022, "IoU.sky": 0.0167, "IoU.person": 0.0115, "IoU.rider": 0.0254, "IoU.car": 0.0065, "IoU.truck": 0.0449, "IoU.bus": 0.0162, "IoU.train": 0.0147, "IoU.motorcycle": 0.0307, "IoU.bicycle": 0.017, "Acc.road": 0.0267, "Acc.sidewalk": 0.0154, "Acc.building": 0.0413, "Acc.wall": 0.1029, "Acc.fence": 0.2045, "Acc.pole": 0.0458, "Acc.traffic light": 0.034, "Acc.traffic sign": 0.0054, "Acc.vegetation": 0.021, "Acc.terrain": 0.0364, "Acc.sky": 0.0238, "Acc.person": 0.0144, "Acc.rider": 0.0467, "Acc.car": 0.0074, "Acc.truck": 0.2373, "Acc.bus": 0.023, "Acc.train": 0.02, "Acc.motorcycle": 0.0688, "Acc.bicycle": 0.0246, "data_time": 0.01846, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26299, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26353, "loss": 4.1225, "time": 0.59961}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 18766, "data_time": 2.16854, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26349, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26337, "loss": 4.12249, "time": 2.78395}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 18766, "data_time": 0.02005, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.2632, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.2624, "loss": 4.12248, "time": 0.61718}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 18766, "data_time": 0.01475, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.2634, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26401, "loss": 4.12247, "time": 0.58893}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 18766, "data_time": 0.01382, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26323, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26467, "loss": 4.12247, "time": 0.57575}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 18766, "data_time": 0.02296, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26273, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26338, "loss": 4.12246, "time": 0.58259}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 18766, "data_time": 0.02328, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26289, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26292, "loss": 4.12245, "time": 0.70185}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 18766, "data_time": 0.02292, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26405, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26248, "loss": 4.12244, "time": 0.6633}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 18766, "data_time": 0.01914, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26265, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26215, "loss": 4.12244, "time": 0.64677}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 18766, "data_time": 0.03002, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26562, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.264, "loss": 4.12243, "time": 0.62637}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 18766, "data_time": 0.03148, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26194, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26351, "loss": 4.12243, "time": 0.74566}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 18766, "data_time": 0.01976, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26418, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26289, "loss": 4.12242, "time": 0.56815}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 18766, "data_time": 0.01608, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26519, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26165, "loss": 4.12242, "time": 0.66694}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 18766, "data_time": 0.02649, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2644, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26217, "loss": 4.12242, "time": 0.61419}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 18766, "data_time": 0.02585, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26345, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26231, "loss": 4.12241, "time": 0.63896}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 18766, "data_time": 0.01819, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26465, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2605, "loss": 4.12241, "time": 0.57241}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 18766, "data_time": 0.06239, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26359, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26246, "loss": 4.12241, "time": 0.69843}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 18766, "data_time": 0.03511, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26509, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26354, "loss": 4.1224, "time": 0.69041}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 18766, "data_time": 0.01754, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26423, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26295, "loss": 4.1224, "time": 0.56174}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 18766, "data_time": 0.02772, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26298, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26303, "loss": 4.1224, "time": 0.64016}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 18766, "data_time": 0.04577, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26263, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2626, "loss": 4.1224, "time": 0.63832}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 18766, "data_time": 0.02155, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.2621, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26324, "loss": 4.12239, "time": 0.61047}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 18766, "data_time": 0.02707, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26339, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26232, "loss": 4.12239, "time": 0.693}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 18766, "data_time": 0.01897, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26194, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26333, "loss": 4.12239, "time": 0.62584}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 18766, "data_time": 0.03428, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26189, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26237, "loss": 4.12238, "time": 0.69562}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 18766, "data_time": 0.03338, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26234, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26307, "loss": 4.12238, "time": 0.70389}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 18766, "data_time": 0.01565, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26296, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26296, "loss": 4.12238, "time": 0.55008}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 18766, "data_time": 0.05088, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26354, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26121, "loss": 4.12238, "time": 0.68819}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 18766, "data_time": 0.01904, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26385, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26283, "loss": 4.12238, "time": 0.60178}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 18766, "data_time": 0.01688, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26229, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2635, "loss": 4.12238, "time": 0.6557}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 18766, "data_time": 0.01727, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26333, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26363, "loss": 4.12237, "time": 0.65456}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 18766, "data_time": 0.08305, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26462, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26413, "loss": 4.12237, "time": 0.64602}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 18766, "data_time": 0.02904, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26305, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26338, "loss": 4.12237, "time": 0.70588}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 18766, "data_time": 0.01773, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26301, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26378, "loss": 4.12237, "time": 0.56837}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 18766, "data_time": 0.02292, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26335, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26448, "loss": 4.12237, "time": 0.69853}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 18766, "data_time": 0.03277, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26328, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26486, "loss": 4.12237, "time": 0.6366}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 18766, "data_time": 0.02101, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26296, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26226, "loss": 4.12237, "time": 0.60736}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 18766, "data_time": 0.04442, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26186, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26397, "loss": 4.12237, "time": 0.65346}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 18766, "data_time": 0.01798, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26309, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26373, "loss": 4.12237, "time": 0.57261}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 18766, "data_time": 0.02257, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26368, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26487, "loss": 4.12237, "time": 0.62398}
{"mode": "train", "epoch": 22, "iter": 63, "lr": 0.00011, "memory": 18766, "aAcc": 0.0526, "mIoU": 0.0223, "mAcc": 0.0526, "IoU.road": 0.0196, "IoU.sidewalk": 0.021, "IoU.building": 0.0247, "IoU.wall": 0.0388, "IoU.fence": 0.043, "IoU.pole": 0.0215, "IoU.traffic light": 0.021, "IoU.traffic sign": 0.0046, "IoU.vegetation": 0.0225, "IoU.terrain": 0.0253, "IoU.sky": 0.0179, "IoU.person": 0.0181, "IoU.rider": 0.0258, "IoU.car": 0.0045, "IoU.truck": 0.0426, "IoU.bus": 0.0154, "IoU.train": 0.0169, "IoU.motorcycle": 0.0291, "IoU.bicycle": 0.0121, "Acc.road": 0.0303, "Acc.sidewalk": 0.0336, "Acc.building": 0.0444, "Acc.wall": 0.1284, "Acc.fence": 0.19, "Acc.pole": 0.035, "Acc.traffic light": 0.0339, "Acc.traffic sign": 0.005, "Acc.vegetation": 0.0379, "Acc.terrain": 0.0465, "Acc.sky": 0.0264, "Acc.person": 0.0268, "Acc.rider": 0.0484, "Acc.car": 0.0049, "Acc.truck": 0.1852, "Acc.bus": 0.0213, "Acc.train": 0.0243, "Acc.motorcycle": 0.0611, "Acc.bicycle": 0.0155, "data_time": 0.02636, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26391, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26171, "loss": 4.12237, "time": 0.65783}
