{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='DepthwiseSeparableASPPHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        dilations=(1, 12, 24, 36),\n        c1_in_channels=256,\n        c1_channels=48,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = './work_dirs/deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18770, "data_time": 0.03017, "decode.loss_seg": 2.95087, "decode.acc_seg": 5.26249, "aux.loss_seg": 1.17916, "aux.acc_seg": 5.26129, "loss": 4.13003, "time": 0.95964}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18770, "data_time": 0.01607, "decode.loss_seg": 2.94909, "decode.acc_seg": 5.26196, "aux.loss_seg": 1.17893, "aux.acc_seg": 5.26262, "loss": 4.12801, "time": 0.55918}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18770, "data_time": 0.01621, "decode.loss_seg": 2.94816, "decode.acc_seg": 5.26371, "aux.loss_seg": 1.17883, "aux.acc_seg": 5.26395, "loss": 4.127, "time": 0.61182}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 18770, "data_time": 0.02148, "decode.loss_seg": 2.94755, "decode.acc_seg": 5.26125, "aux.loss_seg": 1.17875, "aux.acc_seg": 5.26234, "loss": 4.1263, "time": 0.56372}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 18770, "data_time": 0.01434, "decode.loss_seg": 2.94708, "decode.acc_seg": 5.26261, "aux.loss_seg": 1.17868, "aux.acc_seg": 5.26576, "loss": 4.12576, "time": 0.5746}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 18770, "data_time": 0.01456, "decode.loss_seg": 2.94672, "decode.acc_seg": 5.26345, "aux.loss_seg": 1.17862, "aux.acc_seg": 5.26096, "loss": 4.12534, "time": 0.56459}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 18770, "data_time": 0.01391, "decode.loss_seg": 2.94643, "decode.acc_seg": 5.2629, "aux.loss_seg": 1.17856, "aux.acc_seg": 5.26262, "loss": 4.125, "time": 0.5585}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 18770, "data_time": 0.01865, "decode.loss_seg": 2.94619, "decode.acc_seg": 5.26399, "aux.loss_seg": 1.17852, "aux.acc_seg": 5.26224, "loss": 4.12471, "time": 0.66949}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 18770, "data_time": 0.01523, "decode.loss_seg": 2.946, "decode.acc_seg": 5.26287, "aux.loss_seg": 1.17847, "aux.acc_seg": 5.26354, "loss": 4.12447, "time": 0.56862}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 18770, "data_time": 0.01429, "decode.loss_seg": 2.94584, "decode.acc_seg": 5.26348, "aux.loss_seg": 1.17843, "aux.acc_seg": 5.26073, "loss": 4.12427, "time": 0.55934}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 18770, "data_time": 0.01537, "decode.loss_seg": 2.9457, "decode.acc_seg": 5.26476, "aux.loss_seg": 1.17839, "aux.acc_seg": 5.26457, "loss": 4.12409, "time": 0.61547}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 18770, "data_time": 0.02223, "decode.loss_seg": 2.94558, "decode.acc_seg": 5.26402, "aux.loss_seg": 1.17836, "aux.acc_seg": 5.26354, "loss": 4.12394, "time": 0.56079}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 18770, "data_time": 0.01426, "decode.loss_seg": 2.94548, "decode.acc_seg": 5.26409, "aux.loss_seg": 1.17832, "aux.acc_seg": 5.26153, "loss": 4.12381, "time": 0.56352}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 18770, "data_time": 0.01579, "decode.loss_seg": 2.9454, "decode.acc_seg": 5.26298, "aux.loss_seg": 1.1783, "aux.acc_seg": 5.26265, "loss": 4.12369, "time": 0.56907}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 18770, "data_time": 0.01941, "decode.loss_seg": 2.94532, "decode.acc_seg": 5.26407, "aux.loss_seg": 1.17827, "aux.acc_seg": 5.26274, "loss": 4.12358, "time": 0.56838}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 18770, "data_time": 0.01514, "decode.loss_seg": 2.94525, "decode.acc_seg": 5.26406, "aux.loss_seg": 1.17824, "aux.acc_seg": 5.26313, "loss": 4.12349, "time": 0.56137}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 18770, "data_time": 0.01521, "decode.loss_seg": 2.94519, "decode.acc_seg": 5.26457, "aux.loss_seg": 1.17822, "aux.acc_seg": 5.26287, "loss": 4.12341, "time": 0.55576}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 18770, "data_time": 0.01604, "decode.loss_seg": 2.94513, "decode.acc_seg": 5.26412, "aux.loss_seg": 1.1782, "aux.acc_seg": 5.2632, "loss": 4.12333, "time": 0.56167}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 18770, "data_time": 0.01856, "decode.loss_seg": 2.94509, "decode.acc_seg": 5.26443, "aux.loss_seg": 1.17818, "aux.acc_seg": 5.26311, "loss": 4.12327, "time": 0.56287}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 18770, "data_time": 0.01415, "decode.loss_seg": 2.94504, "decode.acc_seg": 5.26237, "aux.loss_seg": 1.17816, "aux.acc_seg": 5.26128, "loss": 4.1232, "time": 0.56044}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 18770, "data_time": 0.01466, "decode.loss_seg": 2.945, "decode.acc_seg": 5.26349, "aux.loss_seg": 1.17814, "aux.acc_seg": 5.26449, "loss": 4.12314, "time": 0.55815}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 18770, "data_time": 0.0141, "decode.loss_seg": 2.94497, "decode.acc_seg": 5.26356, "aux.loss_seg": 1.17813, "aux.acc_seg": 5.26152, "loss": 4.12309, "time": 0.55251}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 18770, "data_time": 0.01849, "decode.loss_seg": 2.94494, "decode.acc_seg": 5.26261, "aux.loss_seg": 1.17811, "aux.acc_seg": 5.26427, "loss": 4.12305, "time": 0.55963}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 18770, "data_time": 0.01633, "decode.loss_seg": 2.94491, "decode.acc_seg": 5.26411, "aux.loss_seg": 1.1781, "aux.acc_seg": 5.26292, "loss": 4.12301, "time": 0.6107}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 18770, "data_time": 0.01543, "decode.loss_seg": 2.94488, "decode.acc_seg": 5.26479, "aux.loss_seg": 1.17808, "aux.acc_seg": 5.26388, "loss": 4.12297, "time": 0.56056}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 18770, "data_time": 0.01616, "decode.loss_seg": 2.94485, "decode.acc_seg": 5.26451, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26498, "loss": 4.12292, "time": 0.56314}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 18770, "data_time": 0.02078, "decode.loss_seg": 2.94484, "decode.acc_seg": 5.26458, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26277, "loss": 4.1229, "time": 0.57061}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 18770, "data_time": 0.01449, "decode.loss_seg": 2.94481, "decode.acc_seg": 5.26219, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26058, "loss": 4.12286, "time": 0.56201}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 18770, "data_time": 0.01478, "decode.loss_seg": 2.94479, "decode.acc_seg": 5.26412, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26342, "loss": 4.12283, "time": 0.55838}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 18770, "data_time": 0.01746, "decode.loss_seg": 2.94477, "decode.acc_seg": 5.26403, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.26182, "loss": 4.1228, "time": 0.56402}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 18770, "data_time": 0.01401, "decode.loss_seg": 2.94476, "decode.acc_seg": 5.26407, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26357, "loss": 4.12278, "time": 0.55723}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 18770, "data_time": 0.01379, "decode.loss_seg": 2.94474, "decode.acc_seg": 5.26333, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26171, "loss": 4.12276, "time": 0.55869}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 18770, "data_time": 0.01843, "decode.loss_seg": 2.94473, "decode.acc_seg": 5.26404, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26216, "loss": 4.12273, "time": 0.5578}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 18770, "data_time": 0.0196, "decode.loss_seg": 2.94472, "decode.acc_seg": 5.26484, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26515, "loss": 4.12271, "time": 0.5593}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 18770, "data_time": 0.01201, "decode.loss_seg": 2.94471, "decode.acc_seg": 5.26376, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26432, "loss": 4.1227, "time": 0.56507}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 18770, "data_time": 0.01406, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.26335, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26314, "loss": 4.12267, "time": 0.55602}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 18770, "data_time": 0.01451, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26247, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.25981, "loss": 4.12266, "time": 0.55911}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 18770, "data_time": 0.01718, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26318, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26093, "loss": 4.12265, "time": 0.56713}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 18770, "data_time": 0.01559, "decode.loss_seg": 2.94466, "decode.acc_seg": 5.26232, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.2629, "loss": 4.12263, "time": 0.56385}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 18770, "aAcc": 0.0526, "mIoU": 0.0262, "mAcc": 0.0526, "IoU.road": 0.0236, "IoU.sidewalk": 0.0236, "IoU.building": 0.0319, "IoU.wall": 0.0331, "IoU.fence": 0.0267, "IoU.pole": 0.0283, "IoU.traffic light": 0.029, "IoU.traffic sign": 0.0309, "IoU.vegetation": 0.0178, "IoU.terrain": 0.0225, "IoU.sky": 0.0206, "IoU.person": 0.0308, "IoU.rider": 0.0261, "IoU.car": 0.0302, "IoU.truck": 0.0197, "IoU.bus": 0.0184, "IoU.train": 0.0282, "IoU.motorcycle": 0.0333, "IoU.bicycle": 0.0238, "Acc.road": 0.0413, "Acc.sidewalk": 0.0411, "Acc.building": 0.0745, "Acc.wall": 0.0817, "Acc.fence": 0.0515, "Acc.pole": 0.0577, "Acc.traffic light": 0.0606, "Acc.traffic sign": 0.0699, "Acc.vegetation": 0.0263, "Acc.terrain": 0.0378, "Acc.sky": 0.0327, "Acc.person": 0.0692, "Acc.rider": 0.0491, "Acc.car": 0.0662, "Acc.truck": 0.0304, "Acc.bus": 0.0275, "Acc.train": 0.0574, "Acc.motorcycle": 0.0834, "Acc.bicycle": 0.0415, "data_time": 0.01452, "decode.loss_seg": 2.94466, "decode.acc_seg": 5.26509, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26237, "loss": 4.12262, "time": 0.62609}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 18770, "data_time": 2.16594, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.2631, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26206, "loss": 4.1226, "time": 2.70963}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 18770, "data_time": 0.01527, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26645, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26354, "loss": 4.12259, "time": 0.56092}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 18770, "data_time": 0.01508, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26172, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26396, "loss": 4.12258, "time": 0.5598}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 18770, "data_time": 0.01661, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26322, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26409, "loss": 4.12257, "time": 0.57733}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 18770, "data_time": 0.02157, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26389, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26437, "loss": 4.12256, "time": 0.59721}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 18770, "data_time": 0.01417, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26346, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.2638, "loss": 4.12255, "time": 0.58134}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 18770, "data_time": 0.01466, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26199, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26354, "loss": 4.12254, "time": 0.5832}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 18770, "data_time": 0.01506, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26213, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26001, "loss": 4.12253, "time": 0.57114}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 18770, "data_time": 0.01844, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26291, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26478, "loss": 4.12252, "time": 0.57808}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 18770, "data_time": 0.01378, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26405, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26414, "loss": 4.12252, "time": 0.58955}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 18770, "data_time": 0.01502, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.2642, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26325, "loss": 4.12251, "time": 0.56378}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 18770, "data_time": 0.017, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26457, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26121, "loss": 4.1225, "time": 0.56624}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 18770, "data_time": 0.02277, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26296, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26318, "loss": 4.1225, "time": 0.57569}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 18770, "data_time": 0.01435, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26434, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26385, "loss": 4.12249, "time": 0.59176}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 18770, "data_time": 0.01294, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26417, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26115, "loss": 4.12248, "time": 0.56729}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 18770, "data_time": 0.01867, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.263, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26303, "loss": 4.12248, "time": 0.57776}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 18770, "data_time": 0.01559, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.2633, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26361, "loss": 4.12247, "time": 0.61669}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 18770, "data_time": 0.01686, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26435, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26202, "loss": 4.12247, "time": 0.5712}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 18770, "data_time": 0.01566, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26322, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26325, "loss": 4.12247, "time": 0.5755}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 18770, "data_time": 0.02165, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26252, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26388, "loss": 4.12246, "time": 0.56672}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 18770, "data_time": 0.01533, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26521, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26157, "loss": 4.12246, "time": 0.5743}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 18770, "data_time": 0.01552, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26315, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26424, "loss": 4.12245, "time": 0.55899}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 18770, "data_time": 0.01405, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26152, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26168, "loss": 4.12245, "time": 0.60393}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 18770, "data_time": 0.02054, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26425, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26526, "loss": 4.12245, "time": 0.58285}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 18770, "data_time": 0.0123, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26321, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26318, "loss": 4.12244, "time": 0.57864}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 18770, "data_time": 0.01487, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26341, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26262, "loss": 4.12244, "time": 0.61147}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 18770, "data_time": 0.02053, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26367, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26309, "loss": 4.12244, "time": 0.57378}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 18770, "data_time": 0.01401, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26253, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26464, "loss": 4.12243, "time": 0.59537}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 18770, "data_time": 0.01413, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26199, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26286, "loss": 4.12243, "time": 0.65117}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 18770, "data_time": 0.01505, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26354, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26534, "loss": 4.12243, "time": 0.60059}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 18770, "data_time": 0.02034, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26262, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26307, "loss": 4.12243, "time": 0.56424}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 18770, "data_time": 0.01463, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26298, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26312, "loss": 4.12243, "time": 0.55593}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 18770, "data_time": 0.01522, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26443, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26465, "loss": 4.12242, "time": 0.56626}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 18770, "data_time": 0.01391, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26524, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26474, "loss": 4.12242, "time": 0.55726}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 18770, "data_time": 0.01921, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26194, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26424, "loss": 4.12243, "time": 0.56923}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 18770, "data_time": 0.01419, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26252, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26384, "loss": 4.12242, "time": 0.58838}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 18770, "data_time": 0.01513, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26295, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26509, "loss": 4.12242, "time": 0.56076}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 18770, "data_time": 0.01666, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.25989, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26188, "loss": 4.12242, "time": 0.5689}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 18770, "data_time": 0.02101, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.2623, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26409, "loss": 4.12242, "time": 0.56934}
{"mode": "train", "epoch": 22, "iter": 63, "lr": 0.00011, "memory": 18770, "aAcc": 0.0526, "mIoU": 0.0266, "mAcc": 0.0526, "IoU.road": 0.0226, "IoU.sidewalk": 0.0235, "IoU.building": 0.029, "IoU.wall": 0.0317, "IoU.fence": 0.0275, "IoU.pole": 0.0297, "IoU.traffic light": 0.0286, "IoU.traffic sign": 0.0282, "IoU.vegetation": 0.0231, "IoU.terrain": 0.0253, "IoU.sky": 0.0249, "IoU.person": 0.032, "IoU.rider": 0.0248, "IoU.car": 0.0286, "IoU.truck": 0.0199, "IoU.bus": 0.0234, "IoU.train": 0.0275, "IoU.motorcycle": 0.0314, "IoU.bicycle": 0.0244, "Acc.road": 0.0383, "Acc.sidewalk": 0.0406, "Acc.building": 0.0604, "Acc.wall": 0.0735, "Acc.fence": 0.0544, "Acc.pole": 0.0639, "Acc.traffic light": 0.059, "Acc.traffic sign": 0.0574, "Acc.vegetation": 0.0396, "Acc.terrain": 0.0464, "Acc.sky": 0.0452, "Acc.person": 0.0758, "Acc.rider": 0.045, "Acc.car": 0.0588, "Acc.truck": 0.031, "Acc.bus": 0.0404, "Acc.train": 0.0545, "Acc.motorcycle": 0.0721, "Acc.bicycle": 0.0436, "data_time": 0.01581, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26374, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26093, "loss": 4.12242, "time": 0.63366}
