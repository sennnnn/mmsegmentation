{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "fcn_r50-d8_512x1024_4k_dummy_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='FCNHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        num_convs=2,\n        concat_input=True,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = './work_dirs/fcn_r50-d8_512x1024_4k_dummy_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18774, "data_time": 0.02762, "decode.loss_seg": 2.95044, "decode.acc_seg": 5.2635, "aux.loss_seg": 1.17922, "aux.acc_seg": 5.26206, "loss": 4.12966, "time": 0.84715}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18774, "data_time": 0.01358, "decode.loss_seg": 2.94892, "decode.acc_seg": 5.26296, "aux.loss_seg": 1.17891, "aux.acc_seg": 5.26211, "loss": 4.12783, "time": 0.45921}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18774, "data_time": 0.01555, "decode.loss_seg": 2.94825, "decode.acc_seg": 5.26386, "aux.loss_seg": 1.17882, "aux.acc_seg": 5.26391, "loss": 4.12707, "time": 0.4626}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 18774, "data_time": 0.01785, "decode.loss_seg": 2.94771, "decode.acc_seg": 5.26492, "aux.loss_seg": 1.17873, "aux.acc_seg": 5.26058, "loss": 4.12644, "time": 0.46272}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 18774, "data_time": 0.01585, "decode.loss_seg": 2.94729, "decode.acc_seg": 5.26376, "aux.loss_seg": 1.17866, "aux.acc_seg": 5.2641, "loss": 4.12595, "time": 0.46864}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 18774, "data_time": 0.01451, "decode.loss_seg": 2.94692, "decode.acc_seg": 5.26161, "aux.loss_seg": 1.17859, "aux.acc_seg": 5.2636, "loss": 4.12552, "time": 0.46323}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 18774, "data_time": 0.01371, "decode.loss_seg": 2.94662, "decode.acc_seg": 5.26258, "aux.loss_seg": 1.17854, "aux.acc_seg": 5.26339, "loss": 4.12516, "time": 0.46561}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 18774, "data_time": 0.0209, "decode.loss_seg": 2.94635, "decode.acc_seg": 5.26391, "aux.loss_seg": 1.17848, "aux.acc_seg": 5.26203, "loss": 4.12483, "time": 0.46434}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 18774, "data_time": 0.01474, "decode.loss_seg": 2.94612, "decode.acc_seg": 5.26117, "aux.loss_seg": 1.17844, "aux.acc_seg": 5.263, "loss": 4.12456, "time": 0.45889}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 18774, "data_time": 0.01443, "decode.loss_seg": 2.94591, "decode.acc_seg": 5.26352, "aux.loss_seg": 1.17839, "aux.acc_seg": 5.26625, "loss": 4.1243, "time": 0.46166}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 18774, "data_time": 0.01449, "decode.loss_seg": 2.94572, "decode.acc_seg": 5.26439, "aux.loss_seg": 1.17835, "aux.acc_seg": 5.26427, "loss": 4.12406, "time": 0.46928}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 18774, "data_time": 0.01842, "decode.loss_seg": 2.94554, "decode.acc_seg": 5.26489, "aux.loss_seg": 1.17831, "aux.acc_seg": 5.26184, "loss": 4.12385, "time": 0.46459}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 18774, "data_time": 0.01366, "decode.loss_seg": 2.94535, "decode.acc_seg": 5.26289, "aux.loss_seg": 1.17827, "aux.acc_seg": 5.26134, "loss": 4.12362, "time": 0.46681}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 18774, "data_time": 0.01411, "decode.loss_seg": 2.9452, "decode.acc_seg": 5.26334, "aux.loss_seg": 1.17824, "aux.acc_seg": 5.26269, "loss": 4.12344, "time": 0.464}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 18774, "data_time": 0.02037, "decode.loss_seg": 2.94508, "decode.acc_seg": 5.26357, "aux.loss_seg": 1.17821, "aux.acc_seg": 5.26401, "loss": 4.12328, "time": 0.45813}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 18774, "data_time": 0.01471, "decode.loss_seg": 2.94499, "decode.acc_seg": 5.26237, "aux.loss_seg": 1.17818, "aux.acc_seg": 5.26252, "loss": 4.12316, "time": 0.46855}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 18774, "data_time": 0.01538, "decode.loss_seg": 2.94491, "decode.acc_seg": 5.26257, "aux.loss_seg": 1.17815, "aux.acc_seg": 5.26178, "loss": 4.12306, "time": 0.47674}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 18774, "data_time": 0.01491, "decode.loss_seg": 2.94486, "decode.acc_seg": 5.26421, "aux.loss_seg": 1.17813, "aux.acc_seg": 5.26388, "loss": 4.12299, "time": 0.45802}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 18774, "data_time": 0.0202, "decode.loss_seg": 2.94481, "decode.acc_seg": 5.2607, "aux.loss_seg": 1.17811, "aux.acc_seg": 5.26289, "loss": 4.12292, "time": 0.45452}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 18774, "data_time": 0.01422, "decode.loss_seg": 2.94477, "decode.acc_seg": 5.26406, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.26276, "loss": 4.12287, "time": 0.45451}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 18774, "data_time": 0.01533, "decode.loss_seg": 2.94476, "decode.acc_seg": 5.26161, "aux.loss_seg": 1.17808, "aux.acc_seg": 5.26478, "loss": 4.12284, "time": 0.46168}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 18774, "data_time": 0.01492, "decode.loss_seg": 2.94473, "decode.acc_seg": 5.26265, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26432, "loss": 4.12279, "time": 0.45821}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 18774, "data_time": 0.02028, "decode.loss_seg": 2.94471, "decode.acc_seg": 5.26208, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26245, "loss": 4.12277, "time": 0.48118}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 18774, "data_time": 0.01413, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.26431, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26413, "loss": 4.12273, "time": 0.46004}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 18774, "data_time": 0.01508, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26439, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.26303, "loss": 4.1227, "time": 0.47607}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 18774, "data_time": 0.01542, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26437, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26224, "loss": 4.12269, "time": 0.5121}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 18774, "data_time": 0.0248, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.26369, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26306, "loss": 4.12266, "time": 0.47395}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 18774, "data_time": 0.01437, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26264, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26257, "loss": 4.12264, "time": 0.47273}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 18774, "data_time": 0.01474, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26176, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26385, "loss": 4.12262, "time": 0.48565}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 18774, "data_time": 0.02303, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26056, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26538, "loss": 4.1226, "time": 0.46702}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 18774, "data_time": 0.01308, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26324, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.2647, "loss": 4.12259, "time": 0.45135}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 18774, "data_time": 0.01513, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26349, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26421, "loss": 4.12257, "time": 0.46904}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 18774, "data_time": 0.01619, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26399, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26376, "loss": 4.12256, "time": 0.46196}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 18774, "data_time": 0.01912, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26299, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26473, "loss": 4.12255, "time": 0.4592}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 18774, "data_time": 0.01604, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26455, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.2634, "loss": 4.12254, "time": 0.46827}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 18774, "data_time": 0.01436, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26328, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26477, "loss": 4.12253, "time": 0.45565}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 18774, "data_time": 0.01709, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26478, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26143, "loss": 4.12252, "time": 0.45898}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 18774, "data_time": 0.01776, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26402, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.25999, "loss": 4.12252, "time": 0.46022}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 18774, "data_time": 0.0162, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26406, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26317, "loss": 4.12251, "time": 0.45842}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 18774, "aAcc": 0.0526, "mIoU": 0.0257, "mAcc": 0.0526, "IoU.road": 0.0184, "IoU.sidewalk": 0.0383, "IoU.building": 0.0303, "IoU.wall": 0.0241, "IoU.fence": 0.0307, "IoU.pole": 0.0178, "IoU.traffic light": 0.0253, "IoU.traffic sign": 0.023, "IoU.vegetation": 0.0246, "IoU.terrain": 0.0225, "IoU.sky": 0.0333, "IoU.person": 0.0317, "IoU.rider": 0.0195, "IoU.car": 0.0304, "IoU.truck": 0.0175, "IoU.bus": 0.0149, "IoU.train": 0.0278, "IoU.motorcycle": 0.0315, "IoU.bicycle": 0.026, "Acc.road": 0.0276, "Acc.sidewalk": 0.1237, "Acc.building": 0.0666, "Acc.wall": 0.0425, "Acc.fence": 0.0688, "Acc.pole": 0.0262, "Acc.traffic light": 0.0465, "Acc.traffic sign": 0.0391, "Acc.vegetation": 0.0441, "Acc.terrain": 0.0379, "Acc.sky": 0.0834, "Acc.person": 0.0739, "Acc.rider": 0.0299, "Acc.car": 0.067, "Acc.truck": 0.0256, "Acc.bus": 0.0204, "Acc.train": 0.0556, "Acc.motorcycle": 0.0723, "Acc.bicycle": 0.049, "data_time": 0.0164, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.2637, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26174, "loss": 4.12249, "time": 0.47892}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 18774, "data_time": 1.97603, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26223, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.264, "loss": 4.12249, "time": 2.43326}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 18774, "data_time": 0.01284, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26493, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.2627, "loss": 4.12248, "time": 0.45706}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 18774, "data_time": 0.01579, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26429, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26313, "loss": 4.12247, "time": 0.46266}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 18774, "data_time": 0.01641, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26372, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26227, "loss": 4.12247, "time": 0.45844}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 18774, "data_time": 0.02045, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26357, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26336, "loss": 4.12246, "time": 0.47998}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 18774, "data_time": 0.01603, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26436, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26432, "loss": 4.12245, "time": 0.47615}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 18774, "data_time": 0.01528, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26251, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26411, "loss": 4.12245, "time": 0.47452}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 18774, "data_time": 0.01522, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26328, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26461, "loss": 4.12245, "time": 0.48298}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 18774, "data_time": 0.02084, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.2624, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26294, "loss": 4.12244, "time": 0.46065}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 18774, "data_time": 0.01744, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26243, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26483, "loss": 4.12244, "time": 0.46775}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 18774, "data_time": 0.0157, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26368, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26281, "loss": 4.12243, "time": 0.48827}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 18774, "data_time": 0.01446, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26315, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26278, "loss": 4.12243, "time": 0.46989}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 18774, "data_time": 0.01946, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26384, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2631, "loss": 4.12242, "time": 0.45996}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 18774, "data_time": 0.01512, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26297, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26076, "loss": 4.12242, "time": 0.46034}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 18774, "data_time": 0.01504, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26167, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26214, "loss": 4.12242, "time": 0.45733}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 18774, "data_time": 0.01856, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26376, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2627, "loss": 4.12242, "time": 0.46277}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 18774, "data_time": 0.0188, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26371, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26284, "loss": 4.12241, "time": 0.47484}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 18774, "data_time": 0.01494, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26155, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26335, "loss": 4.12241, "time": 0.46428}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 18774, "data_time": 0.0159, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26285, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2622, "loss": 4.12241, "time": 0.46429}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 18774, "data_time": 0.02074, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26222, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26154, "loss": 4.1224, "time": 0.47008}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 18774, "data_time": 0.01536, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26239, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26134, "loss": 4.1224, "time": 0.46065}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 18774, "data_time": 0.0172, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26611, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26367, "loss": 4.12239, "time": 0.45449}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 18774, "data_time": 0.01395, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26453, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26298, "loss": 4.1224, "time": 0.46209}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 18774, "data_time": 0.01933, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26147, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26309, "loss": 4.12239, "time": 0.46026}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 18774, "data_time": 0.01601, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26534, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26096, "loss": 4.1224, "time": 0.46016}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 18774, "data_time": 0.0157, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26455, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26405, "loss": 4.12239, "time": 0.46122}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 18774, "data_time": 0.02072, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.25962, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26312, "loss": 4.12239, "time": 0.47858}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 18774, "data_time": 0.01437, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26259, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2649, "loss": 4.12239, "time": 0.46463}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 18774, "data_time": 0.01625, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26475, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26234, "loss": 4.12239, "time": 0.46548}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 18774, "data_time": 0.01649, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26409, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.2632, "loss": 4.12239, "time": 0.48328}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 18774, "data_time": 0.02335, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26126, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.2633, "loss": 4.12239, "time": 0.48764}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 18774, "data_time": 0.0152, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26299, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.2637, "loss": 4.12238, "time": 0.46152}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 18774, "data_time": 0.01356, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26343, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26301, "loss": 4.12238, "time": 0.4623}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 18774, "data_time": 0.01505, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26448, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26417, "loss": 4.12238, "time": 0.46162}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 18774, "data_time": 0.0198, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26259, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26351, "loss": 4.12238, "time": 0.47195}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 18774, "data_time": 0.01644, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26175, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26455, "loss": 4.12238, "time": 0.46305}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 18774, "data_time": 0.01658, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26431, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26338, "loss": 4.12238, "time": 0.48107}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 18774, "data_time": 0.01489, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26254, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.2626, "loss": 4.12238, "time": 0.46181}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 18774, "data_time": 0.02104, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26372, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26242, "loss": 4.12238, "time": 0.46213}
{"mode": "train", "epoch": 22, "iter": 63, "lr": 0.00011, "memory": 18774, "aAcc": 0.0526, "mIoU": 0.0258, "mAcc": 0.0526, "IoU.road": 0.0202, "IoU.sidewalk": 0.0365, "IoU.building": 0.033, "IoU.wall": 0.0222, "IoU.fence": 0.0316, "IoU.pole": 0.0199, "IoU.traffic light": 0.027, "IoU.traffic sign": 0.0241, "IoU.vegetation": 0.023, "IoU.terrain": 0.0214, "IoU.sky": 0.0341, "IoU.person": 0.0283, "IoU.rider": 0.018, "IoU.car": 0.0294, "IoU.truck": 0.0187, "IoU.bus": 0.0154, "IoU.train": 0.0282, "IoU.motorcycle": 0.0334, "IoU.bicycle": 0.0249, "Acc.road": 0.0317, "Acc.sidewalk": 0.1062, "Acc.building": 0.0814, "Acc.wall": 0.037, "Acc.fence": 0.0732, "Acc.pole": 0.0311, "Acc.traffic light": 0.0524, "Acc.traffic sign": 0.0427, "Acc.vegetation": 0.0391, "Acc.terrain": 0.0348, "Acc.sky": 0.0884, "Acc.person": 0.0578, "Acc.rider": 0.0265, "Acc.car": 0.0624, "Acc.truck": 0.0282, "Acc.bus": 0.0213, "Acc.train": 0.0573, "Acc.motorcycle": 0.0836, "Acc.bicycle": 0.0452, "data_time": 0.01942, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26214, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26103, "loss": 4.12238, "time": 0.47818}
