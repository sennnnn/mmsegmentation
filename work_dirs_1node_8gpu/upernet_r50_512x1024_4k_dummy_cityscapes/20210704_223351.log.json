{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3,4,5,6,7: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "upernet_r50_512x1024_4k_dummy_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 1, 1),\n        strides=(1, 2, 2, 2),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='UPerHead',\n        in_channels=[256, 512, 1024, 2048],\n        in_index=[0, 1, 2, 3],\n        pool_scales=(1, 2, 3, 6),\n        channels=512,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = './work_dirs/upernet_r50_512x1024_4k_dummy_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 19973, "data_time": 0.03127, "decode.loss_seg": 2.95205, "decode.acc_seg": 5.26234, "aux.loss_seg": 1.17902, "aux.acc_seg": 5.26464, "loss": 4.13107, "time": 0.97397}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 19973, "data_time": 0.01504, "decode.loss_seg": 2.95007, "decode.acc_seg": 5.26438, "aux.loss_seg": 1.17881, "aux.acc_seg": 5.26295, "loss": 4.12888, "time": 0.47297}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 19973, "data_time": 0.01397, "decode.loss_seg": 2.94895, "decode.acc_seg": 5.26342, "aux.loss_seg": 1.17871, "aux.acc_seg": 5.26211, "loss": 4.12766, "time": 0.46468}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 19973, "data_time": 0.02332, "decode.loss_seg": 2.94813, "decode.acc_seg": 5.26226, "aux.loss_seg": 1.17864, "aux.acc_seg": 5.26263, "loss": 4.12677, "time": 0.50038}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 19973, "data_time": 0.01331, "decode.loss_seg": 2.94749, "decode.acc_seg": 5.26383, "aux.loss_seg": 1.17857, "aux.acc_seg": 5.26359, "loss": 4.12606, "time": 0.45804}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 19973, "data_time": 0.0148, "decode.loss_seg": 2.94697, "decode.acc_seg": 5.2641, "aux.loss_seg": 1.1785, "aux.acc_seg": 5.26264, "loss": 4.12547, "time": 0.50347}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 19973, "data_time": 0.01395, "decode.loss_seg": 2.94657, "decode.acc_seg": 5.26275, "aux.loss_seg": 1.17844, "aux.acc_seg": 5.26464, "loss": 4.12501, "time": 0.47842}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 19973, "data_time": 0.02196, "decode.loss_seg": 2.94619, "decode.acc_seg": 5.26058, "aux.loss_seg": 1.17839, "aux.acc_seg": 5.26174, "loss": 4.12458, "time": 0.45388}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 19973, "data_time": 0.01914, "decode.loss_seg": 2.94589, "decode.acc_seg": 5.26312, "aux.loss_seg": 1.17834, "aux.acc_seg": 5.26316, "loss": 4.12423, "time": 0.45364}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 19973, "data_time": 0.01422, "decode.loss_seg": 2.94566, "decode.acc_seg": 5.26195, "aux.loss_seg": 1.1783, "aux.acc_seg": 5.26316, "loss": 4.12396, "time": 0.45586}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 19973, "data_time": 0.01473, "decode.loss_seg": 2.94548, "decode.acc_seg": 5.26096, "aux.loss_seg": 1.17826, "aux.acc_seg": 5.26519, "loss": 4.12374, "time": 0.45642}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 19973, "data_time": 0.01723, "decode.loss_seg": 2.94534, "decode.acc_seg": 5.26305, "aux.loss_seg": 1.17823, "aux.acc_seg": 5.26186, "loss": 4.12356, "time": 0.45514}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 19973, "data_time": 0.01371, "decode.loss_seg": 2.94524, "decode.acc_seg": 5.26346, "aux.loss_seg": 1.1782, "aux.acc_seg": 5.26188, "loss": 4.12344, "time": 0.50125}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 19973, "data_time": 0.01628, "decode.loss_seg": 2.94514, "decode.acc_seg": 5.26435, "aux.loss_seg": 1.17817, "aux.acc_seg": 5.26484, "loss": 4.12331, "time": 0.45367}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 19973, "data_time": 0.02, "decode.loss_seg": 2.94508, "decode.acc_seg": 5.2622, "aux.loss_seg": 1.17816, "aux.acc_seg": 5.26433, "loss": 4.12324, "time": 0.45771}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 19973, "data_time": 0.01383, "decode.loss_seg": 2.94501, "decode.acc_seg": 5.26217, "aux.loss_seg": 1.17813, "aux.acc_seg": 5.26381, "loss": 4.12314, "time": 0.46251}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 19973, "data_time": 0.0146, "decode.loss_seg": 2.94497, "decode.acc_seg": 5.26331, "aux.loss_seg": 1.17812, "aux.acc_seg": 5.26355, "loss": 4.12309, "time": 0.45031}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 19973, "data_time": 0.01381, "decode.loss_seg": 2.94492, "decode.acc_seg": 5.26402, "aux.loss_seg": 1.1781, "aux.acc_seg": 5.26186, "loss": 4.12303, "time": 0.44787}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 19973, "data_time": 0.01766, "decode.loss_seg": 2.94488, "decode.acc_seg": 5.26285, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.26462, "loss": 4.12297, "time": 0.4571}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 19973, "data_time": 0.01524, "decode.loss_seg": 2.94485, "decode.acc_seg": 5.26285, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26396, "loss": 4.12292, "time": 0.44936}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 19973, "data_time": 0.01366, "decode.loss_seg": 2.94481, "decode.acc_seg": 5.2623, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26405, "loss": 4.12287, "time": 0.45447}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 19973, "data_time": 0.01535, "decode.loss_seg": 2.94479, "decode.acc_seg": 5.26218, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26482, "loss": 4.12284, "time": 0.45523}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 19973, "data_time": 0.02033, "decode.loss_seg": 2.94477, "decode.acc_seg": 5.26485, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26307, "loss": 4.1228, "time": 0.45507}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 19973, "data_time": 0.01564, "decode.loss_seg": 2.94475, "decode.acc_seg": 5.26373, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.26274, "loss": 4.12278, "time": 0.47262}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 19973, "data_time": 0.01335, "decode.loss_seg": 2.94473, "decode.acc_seg": 5.26441, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26445, "loss": 4.12275, "time": 0.45554}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 19973, "data_time": 0.01413, "decode.loss_seg": 2.9447, "decode.acc_seg": 5.26439, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26399, "loss": 4.12271, "time": 0.44762}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 19973, "data_time": 0.0197, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.2636, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26238, "loss": 4.1227, "time": 0.50992}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 19973, "data_time": 0.01532, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.26249, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26303, "loss": 4.12268, "time": 0.44908}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 19973, "data_time": 0.01678, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26287, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26283, "loss": 4.12266, "time": 0.45484}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 19973, "data_time": 0.01909, "decode.loss_seg": 2.94466, "decode.acc_seg": 5.26397, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26428, "loss": 4.12264, "time": 0.50558}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 19973, "data_time": 0.01497, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.26367, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26327, "loss": 4.12262, "time": 0.50304}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 19973, "data_time": 0.01463, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26328, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.263, "loss": 4.12261, "time": 0.45173}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 19973, "data_time": 0.01276, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26525, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.2624, "loss": 4.12259, "time": 0.45557}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 19973, "data_time": 0.02109, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26257, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26422, "loss": 4.12258, "time": 0.46005}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 19973, "data_time": 0.01612, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26234, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26335, "loss": 4.12257, "time": 0.50309}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 19973, "data_time": 0.01755, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26474, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26328, "loss": 4.12256, "time": 0.4553}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 19973, "data_time": 0.01368, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26352, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26369, "loss": 4.12255, "time": 0.49249}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 19973, "data_time": 0.01939, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26128, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26396, "loss": 4.12253, "time": 0.4522}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 19973, "data_time": 0.01403, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.2642, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26421, "loss": 4.12253, "time": 0.46286}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 19973, "aAcc": 0.0526, "mIoU": 0.0266, "mAcc": 0.0526, "IoU.road": 0.0324, "IoU.sidewalk": 0.0239, "IoU.building": 0.0237, "IoU.wall": 0.0223, "IoU.fence": 0.023, "IoU.pole": 0.0246, "IoU.traffic light": 0.0283, "IoU.traffic sign": 0.0264, "IoU.vegetation": 0.0308, "IoU.terrain": 0.0239, "IoU.sky": 0.0251, "IoU.person": 0.0295, "IoU.rider": 0.0183, "IoU.car": 0.025, "IoU.truck": 0.0313, "IoU.bus": 0.0277, "IoU.train": 0.0259, "IoU.motorcycle": 0.0318, "IoU.bicycle": 0.0305, "Acc.road": 0.0777, "Acc.sidewalk": 0.0419, "Acc.building": 0.0415, "Acc.wall": 0.0373, "Acc.fence": 0.0391, "Acc.pole": 0.0441, "Acc.traffic light": 0.058, "Acc.traffic sign": 0.0501, "Acc.vegetation": 0.0692, "Acc.terrain": 0.0418, "Acc.sky": 0.0457, "Acc.person": 0.0633, "Acc.rider": 0.0274, "Acc.car": 0.0454, "Acc.truck": 0.0717, "Acc.bus": 0.0554, "Acc.train": 0.0484, "Acc.motorcycle": 0.0743, "Acc.bicycle": 0.0678, "data_time": 0.01568, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26362, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26538, "loss": 4.12251, "time": 0.49096}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 19973, "data_time": 2.19761, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26141, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26084, "loss": 4.12251, "time": 2.64418}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 19973, "data_time": 0.01476, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.2636, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26265, "loss": 4.1225, "time": 0.46639}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 19973, "data_time": 0.01479, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26556, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26171, "loss": 4.12249, "time": 0.48112}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 19973, "data_time": 0.0163, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26428, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26348, "loss": 4.12248, "time": 0.55447}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 19973, "data_time": 0.02109, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26319, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26374, "loss": 4.12248, "time": 0.45939}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 19973, "data_time": 0.01434, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26085, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26248, "loss": 4.12247, "time": 0.46647}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 19973, "data_time": 0.01486, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26348, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26253, "loss": 4.12246, "time": 0.45622}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 19973, "data_time": 0.01445, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26385, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26231, "loss": 4.12246, "time": 0.45253}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 19973, "data_time": 0.01822, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26069, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26247, "loss": 4.12246, "time": 0.45298}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 19973, "data_time": 0.01487, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26342, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26347, "loss": 4.12245, "time": 0.45572}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 19973, "data_time": 0.01631, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26264, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26284, "loss": 4.12245, "time": 0.45414}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 19973, "data_time": 0.01607, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26414, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26357, "loss": 4.12244, "time": 0.45339}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 19973, "data_time": 0.01897, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26358, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26189, "loss": 4.12244, "time": 0.45379}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 19973, "data_time": 0.01692, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26296, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26533, "loss": 4.12243, "time": 0.51263}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 19973, "data_time": 0.01616, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26479, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26406, "loss": 4.12242, "time": 0.46553}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 19973, "data_time": 0.02029, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26365, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26438, "loss": 4.12243, "time": 0.45829}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 19973, "data_time": 0.01602, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26314, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26416, "loss": 4.12242, "time": 0.44463}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 19973, "data_time": 0.01434, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26165, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26208, "loss": 4.12242, "time": 0.44636}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 19973, "data_time": 0.01532, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26587, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26339, "loss": 4.12241, "time": 0.45233}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 19973, "data_time": 0.02049, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26373, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26185, "loss": 4.12241, "time": 0.46019}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 19973, "data_time": 0.0141, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2641, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2644, "loss": 4.12241, "time": 0.44757}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 19973, "data_time": 0.0175, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26175, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26377, "loss": 4.12241, "time": 0.45272}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 19973, "data_time": 0.01704, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26374, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26387, "loss": 4.12241, "time": 0.44687}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 19973, "data_time": 0.02092, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26278, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26421, "loss": 4.1224, "time": 0.44555}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 19973, "data_time": 0.01622, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26128, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26303, "loss": 4.1224, "time": 0.44628}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 19973, "data_time": 0.01562, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26173, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26399, "loss": 4.1224, "time": 0.4514}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 19973, "data_time": 0.01903, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26337, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26386, "loss": 4.1224, "time": 0.45626}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 19973, "data_time": 0.01655, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26372, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26381, "loss": 4.12239, "time": 0.50092}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 19973, "data_time": 0.01562, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26328, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26497, "loss": 4.12239, "time": 0.45308}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 19973, "data_time": 0.01414, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26291, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26187, "loss": 4.12239, "time": 0.44817}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 19973, "data_time": 0.01896, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26395, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26204, "loss": 4.12239, "time": 0.45575}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 19973, "data_time": 0.01615, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.2649, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26297, "loss": 4.12239, "time": 0.44907}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 19973, "data_time": 0.01374, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26213, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26371, "loss": 4.12239, "time": 0.45379}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 19973, "data_time": 0.01715, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26463, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26457, "loss": 4.12239, "time": 0.46943}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 19973, "data_time": 0.01846, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26194, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26355, "loss": 4.12238, "time": 0.46732}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 19973, "data_time": 0.01439, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26415, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26231, "loss": 4.12239, "time": 0.45382}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 19973, "data_time": 0.016, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26349, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26193, "loss": 4.12239, "time": 0.45309}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 19973, "data_time": 0.01659, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.262, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26307, "loss": 4.12239, "time": 0.45784}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 19973, "data_time": 0.01759, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26256, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26191, "loss": 4.12239, "time": 0.45149}
{"mode": "train", "epoch": 22, "iter": 63, "lr": 0.00011, "memory": 19973, "aAcc": 0.0526, "mIoU": 0.0266, "mAcc": 0.0526, "IoU.road": 0.0328, "IoU.sidewalk": 0.0274, "IoU.building": 0.0228, "IoU.wall": 0.024, "IoU.fence": 0.0246, "IoU.pole": 0.0249, "IoU.traffic light": 0.0256, "IoU.traffic sign": 0.0281, "IoU.vegetation": 0.0265, "IoU.terrain": 0.0226, "IoU.sky": 0.0247, "IoU.person": 0.0268, "IoU.rider": 0.0227, "IoU.car": 0.0242, "IoU.truck": 0.0293, "IoU.bus": 0.0273, "IoU.train": 0.0252, "IoU.motorcycle": 0.0351, "IoU.bicycle": 0.0306, "Acc.road": 0.0803, "Acc.sidewalk": 0.0543, "Acc.building": 0.0388, "Acc.wall": 0.0422, "Acc.fence": 0.044, "Acc.pole": 0.0452, "Acc.traffic light": 0.0476, "Acc.traffic sign": 0.0569, "Acc.vegetation": 0.0507, "Acc.terrain": 0.0383, "Acc.sky": 0.0443, "Acc.person": 0.0518, "Acc.rider": 0.0384, "Acc.car": 0.0427, "Acc.truck": 0.0619, "Acc.bus": 0.0536, "Acc.train": 0.046, "Acc.motorcycle": 0.0952, "Acc.bicycle": 0.0683, "data_time": 0.01603, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26296, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26283, "loss": 4.12238, "time": 0.5231}
