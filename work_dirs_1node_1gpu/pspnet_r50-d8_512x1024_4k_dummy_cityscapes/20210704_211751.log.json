{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "pspnet_r50-d8_512x1024_4k_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='PSPHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        pool_scales=(1, 2, 3, 6),\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = 'work_dirs_1node_1gpu/pspnet_r50-d8_512x1024_4k_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18765, "data_time": 0.05365, "decode.loss_seg": 2.95046, "decode.acc_seg": 5.26016, "aux.loss_seg": 1.17918, "aux.acc_seg": 5.25902, "loss": 4.12964, "time": 0.76512}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18765, "data_time": 0.02008, "decode.loss_seg": 2.94907, "decode.acc_seg": 5.26678, "aux.loss_seg": 1.17889, "aux.acc_seg": 5.26104, "loss": 4.12796, "time": 0.49162}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18765, "data_time": 0.02328, "decode.loss_seg": 2.94837, "decode.acc_seg": 5.26236, "aux.loss_seg": 1.1788, "aux.acc_seg": 5.26223, "loss": 4.12717, "time": 0.49078}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00956, "memory": 18765, "data_time": 0.01763, "decode.loss_seg": 2.94783, "decode.acc_seg": 5.25948, "aux.loss_seg": 1.17873, "aux.acc_seg": 5.26077, "loss": 4.12656, "time": 0.4791}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00944, "memory": 18765, "data_time": 0.0173, "decode.loss_seg": 2.9474, "decode.acc_seg": 5.26097, "aux.loss_seg": 1.17865, "aux.acc_seg": 5.25896, "loss": 4.12605, "time": 0.47809}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00933, "memory": 18765, "data_time": 0.02277, "decode.loss_seg": 2.94706, "decode.acc_seg": 5.26135, "aux.loss_seg": 1.17859, "aux.acc_seg": 5.26336, "loss": 4.12565, "time": 0.49386}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00922, "memory": 18765, "data_time": 0.01263, "decode.loss_seg": 2.94672, "decode.acc_seg": 5.26645, "aux.loss_seg": 1.17855, "aux.acc_seg": 5.26065, "loss": 4.12527, "time": 0.46506}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00911, "memory": 18765, "data_time": 0.01413, "decode.loss_seg": 2.94649, "decode.acc_seg": 5.26019, "aux.loss_seg": 1.17849, "aux.acc_seg": 5.26247, "loss": 4.12498, "time": 0.482}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00899, "memory": 18765, "data_time": 0.01766, "decode.loss_seg": 2.94622, "decode.acc_seg": 5.26641, "aux.loss_seg": 1.17845, "aux.acc_seg": 5.26106, "loss": 4.12468, "time": 0.47983}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00888, "memory": 18765, "data_time": 0.02135, "decode.loss_seg": 2.94605, "decode.acc_seg": 5.26133, "aux.loss_seg": 1.17841, "aux.acc_seg": 5.26617, "loss": 4.12446, "time": 0.48483}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00877, "memory": 18765, "data_time": 0.01513, "decode.loss_seg": 2.94588, "decode.acc_seg": 5.25669, "aux.loss_seg": 1.17838, "aux.acc_seg": 5.2646, "loss": 4.12426, "time": 0.47489}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00866, "memory": 18765, "data_time": 0.01505, "decode.loss_seg": 2.94572, "decode.acc_seg": 5.26113, "aux.loss_seg": 1.17834, "aux.acc_seg": 5.2646, "loss": 4.12406, "time": 0.47091}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.00854, "memory": 18765, "data_time": 0.01319, "decode.loss_seg": 2.94561, "decode.acc_seg": 5.26668, "aux.loss_seg": 1.17832, "aux.acc_seg": 5.25729, "loss": 4.12392, "time": 0.4714}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00843, "memory": 18765, "data_time": 0.01749, "decode.loss_seg": 2.94548, "decode.acc_seg": 5.2688, "aux.loss_seg": 1.17827, "aux.acc_seg": 5.26402, "loss": 4.12375, "time": 0.48725}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.00831, "memory": 18765, "data_time": 0.01882, "decode.loss_seg": 2.94538, "decode.acc_seg": 5.26439, "aux.loss_seg": 1.17825, "aux.acc_seg": 5.26266, "loss": 4.12364, "time": 0.48118}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.0082, "memory": 18765, "data_time": 0.0161, "decode.loss_seg": 2.94531, "decode.acc_seg": 5.26942, "aux.loss_seg": 1.17823, "aux.acc_seg": 5.26141, "loss": 4.12353, "time": 0.47385}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.00809, "memory": 18765, "data_time": 0.01835, "decode.loss_seg": 2.94522, "decode.acc_seg": 5.26487, "aux.loss_seg": 1.1782, "aux.acc_seg": 5.26338, "loss": 4.12342, "time": 0.47962}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00797, "memory": 18765, "data_time": 0.02155, "decode.loss_seg": 2.94517, "decode.acc_seg": 5.26202, "aux.loss_seg": 1.17819, "aux.acc_seg": 5.26492, "loss": 4.12335, "time": 0.48661}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00786, "memory": 18765, "data_time": 0.0166, "decode.loss_seg": 2.9451, "decode.acc_seg": 5.26975, "aux.loss_seg": 1.17817, "aux.acc_seg": 5.26773, "loss": 4.12326, "time": 0.47511}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00774, "memory": 18765, "data_time": 0.01974, "decode.loss_seg": 2.94505, "decode.acc_seg": 5.26609, "aux.loss_seg": 1.17815, "aux.acc_seg": 5.26526, "loss": 4.1232, "time": 0.48899}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00763, "memory": 18765, "data_time": 0.02427, "decode.loss_seg": 2.945, "decode.acc_seg": 5.25461, "aux.loss_seg": 1.17813, "aux.acc_seg": 5.2663, "loss": 4.12313, "time": 0.50246}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00751, "memory": 18765, "data_time": 0.01938, "decode.loss_seg": 2.94495, "decode.acc_seg": 5.26114, "aux.loss_seg": 1.17812, "aux.acc_seg": 5.25891, "loss": 4.12307, "time": 0.48682}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.0074, "memory": 18765, "data_time": 0.01685, "decode.loss_seg": 2.94491, "decode.acc_seg": 5.26242, "aux.loss_seg": 1.1781, "aux.acc_seg": 5.26005, "loss": 4.12301, "time": 0.46983}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00728, "memory": 18765, "data_time": 0.01265, "decode.loss_seg": 2.94487, "decode.acc_seg": 5.26484, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.26077, "loss": 4.12296, "time": 0.47403}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00717, "memory": 18765, "data_time": 0.02837, "decode.loss_seg": 2.94485, "decode.acc_seg": 5.26192, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26238, "loss": 4.12293, "time": 0.50562}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00705, "memory": 18765, "data_time": 0.02271, "decode.loss_seg": 2.94482, "decode.acc_seg": 5.26557, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26695, "loss": 4.12288, "time": 0.48577}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.00694, "memory": 18765, "data_time": 0.01753, "decode.loss_seg": 2.94479, "decode.acc_seg": 5.26784, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26336, "loss": 4.12285, "time": 0.47381}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00682, "memory": 18765, "data_time": 0.01486, "decode.loss_seg": 2.94477, "decode.acc_seg": 5.26515, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26197, "loss": 4.12281, "time": 0.46865}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.0067, "memory": 18765, "data_time": 0.01123, "decode.loss_seg": 2.94474, "decode.acc_seg": 5.26648, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.25888, "loss": 4.12278, "time": 0.47183}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.00659, "memory": 18765, "data_time": 0.02192, "decode.loss_seg": 2.94472, "decode.acc_seg": 5.26099, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26269, "loss": 4.12275, "time": 0.48424}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.00647, "memory": 18765, "data_time": 0.0211, "decode.loss_seg": 2.94471, "decode.acc_seg": 5.26639, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26756, "loss": 4.12272, "time": 0.50296}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.00635, "memory": 18765, "data_time": 0.01946, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.26661, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26151, "loss": 4.1227, "time": 0.49123}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.00624, "memory": 18765, "data_time": 0.01438, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26373, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26248, "loss": 4.12268, "time": 0.48731}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.00612, "memory": 18765, "data_time": 0.02158, "decode.loss_seg": 2.94466, "decode.acc_seg": 5.26251, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26591, "loss": 4.12265, "time": 0.54854}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.006, "memory": 18765, "data_time": 0.02466, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.26325, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.25995, "loss": 4.12263, "time": 0.54957}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.00588, "memory": 18765, "data_time": 0.01341, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26267, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26404, "loss": 4.12262, "time": 0.48194}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.00576, "memory": 18765, "data_time": 0.02692, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.266, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26231, "loss": 4.1226, "time": 0.5916}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.00565, "memory": 18765, "data_time": 0.01637, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.27155, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26205, "loss": 4.12258, "time": 0.47446}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.00553, "memory": 18765, "data_time": 0.01297, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26501, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26593, "loss": 4.12257, "time": 0.4728}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.00541, "memory": 18765, "aAcc": 0.0526, "mIoU": 0.0137, "mAcc": 0.0526, "IoU.road": 0.0452, "IoU.sidewalk": 0.0184, "IoU.building": 0.0008, "IoU.wall": 0.0095, "IoU.fence": 0.0046, "IoU.pole": 0.0028, "IoU.traffic light": 0.012, "IoU.traffic sign": 0.0067, "IoU.vegetation": 0.0096, "IoU.terrain": 0.0107, "IoU.sky": 0.0192, "IoU.person": 0.0003, "IoU.rider": 0.0021, "IoU.car": 0.0497, "IoU.truck": 0.0234, "IoU.bus": 0.0031, "IoU.train": 0.0366, "IoU.motorcycle": 0.0006, "IoU.bicycle": 0.0054, "Acc.road": 0.2412, "Acc.sidewalk": 0.0276, "Acc.building": 0.0008, "Acc.wall": 0.0115, "Acc.fence": 0.0051, "Acc.pole": 0.003, "Acc.traffic light": 0.0153, "Acc.traffic sign": 0.0076, "Acc.vegetation": 0.0116, "Acc.terrain": 0.0132, "Acc.sky": 0.0293, "Acc.person": 0.0003, "Acc.rider": 0.0022, "Acc.car": 0.4736, "Acc.truck": 0.0406, "Acc.bus": 0.0033, "Acc.train": 0.1071, "Acc.motorcycle": 0.0006, "Acc.bicycle": 0.0059, "data_time": 0.01602, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.27003, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26681, "loss": 4.12255, "time": 0.51504}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.00529, "memory": 18765, "data_time": 5.71983, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26778, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26602, "loss": 4.12254, "time": 6.18325}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.00517, "memory": 18765, "data_time": 0.02025, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26398, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26553, "loss": 4.12253, "time": 0.48351}
{"mode": "train", "epoch": 2, "iter": 2150, "lr": 0.00505, "memory": 18765, "data_time": 0.02205, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.27402, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.2681, "loss": 4.12252, "time": 0.48319}
{"mode": "train", "epoch": 2, "iter": 2200, "lr": 0.00493, "memory": 18765, "data_time": 0.02016, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26585, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26612, "loss": 4.12251, "time": 0.48457}
{"mode": "train", "epoch": 2, "iter": 2250, "lr": 0.00481, "memory": 18765, "data_time": 0.01596, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26592, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26629, "loss": 4.1225, "time": 0.48364}
{"mode": "train", "epoch": 2, "iter": 2300, "lr": 0.00469, "memory": 18765, "data_time": 0.01817, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26357, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26805, "loss": 4.12249, "time": 0.50763}
{"mode": "train", "epoch": 2, "iter": 2350, "lr": 0.00456, "memory": 18765, "data_time": 0.01365, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26236, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26516, "loss": 4.12249, "time": 0.45201}
{"mode": "train", "epoch": 2, "iter": 2400, "lr": 0.00444, "memory": 18765, "data_time": 0.04414, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26954, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26442, "loss": 4.12248, "time": 0.54886}
{"mode": "train", "epoch": 2, "iter": 2450, "lr": 0.00432, "memory": 18765, "data_time": 0.0278, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26761, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26439, "loss": 4.12247, "time": 0.55088}
{"mode": "train", "epoch": 2, "iter": 2500, "lr": 0.0042, "memory": 18765, "data_time": 0.01548, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26709, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26467, "loss": 4.12246, "time": 0.4708}
{"mode": "train", "epoch": 2, "iter": 2550, "lr": 0.00407, "memory": 18765, "data_time": 0.00851, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26634, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26341, "loss": 4.12246, "time": 0.46249}
{"mode": "train", "epoch": 2, "iter": 2600, "lr": 0.00395, "memory": 18765, "data_time": 0.02057, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26928, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26402, "loss": 4.12245, "time": 0.58002}
{"mode": "train", "epoch": 2, "iter": 2650, "lr": 0.00383, "memory": 18765, "data_time": 0.01083, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26594, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26051, "loss": 4.12245, "time": 0.44808}
{"mode": "train", "epoch": 2, "iter": 2700, "lr": 0.0037, "memory": 18765, "data_time": 0.05055, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26938, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26151, "loss": 4.12244, "time": 0.53233}
{"mode": "train", "epoch": 2, "iter": 2750, "lr": 0.00358, "memory": 18765, "data_time": 0.00994, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26425, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26614, "loss": 4.12243, "time": 0.46223}
{"mode": "train", "epoch": 2, "iter": 2800, "lr": 0.00345, "memory": 18765, "data_time": 0.0306, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26744, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.25932, "loss": 4.12243, "time": 0.56497}
{"mode": "train", "epoch": 2, "iter": 2850, "lr": 0.00333, "memory": 18765, "data_time": 0.0074, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26432, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26517, "loss": 4.12243, "time": 0.44198}
{"mode": "train", "epoch": 2, "iter": 2900, "lr": 0.0032, "memory": 18765, "data_time": 0.0071, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26584, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26276, "loss": 4.12242, "time": 0.44174}
{"mode": "train", "epoch": 2, "iter": 2950, "lr": 0.00307, "memory": 18765, "data_time": 0.00743, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26661, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26341, "loss": 4.12242, "time": 0.44156}
{"mode": "train", "epoch": 3, "iter": 3000, "lr": 0.00295, "memory": 18765, "data_time": 0.01192, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26534, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26477, "loss": 4.12241, "time": 0.44692}
{"mode": "train", "epoch": 3, "iter": 3050, "lr": 0.00282, "memory": 18765, "data_time": 0.00716, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26681, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26226, "loss": 4.12241, "time": 0.44108}
{"mode": "train", "epoch": 3, "iter": 3100, "lr": 0.00269, "memory": 18765, "data_time": 0.00726, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26429, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2633, "loss": 4.12241, "time": 0.44116}
{"mode": "train", "epoch": 3, "iter": 3150, "lr": 0.00256, "memory": 18765, "data_time": 0.00712, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26996, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26715, "loss": 4.1224, "time": 0.441}
{"mode": "train", "epoch": 3, "iter": 3200, "lr": 0.00243, "memory": 18765, "data_time": 0.00719, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26488, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26605, "loss": 4.1224, "time": 0.44111}
{"mode": "train", "epoch": 3, "iter": 3250, "lr": 0.0023, "memory": 18765, "data_time": 0.00717, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26809, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26532, "loss": 4.1224, "time": 0.44146}
{"mode": "train", "epoch": 3, "iter": 3300, "lr": 0.00217, "memory": 18765, "data_time": 0.00708, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26554, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26317, "loss": 4.1224, "time": 0.44068}
{"mode": "train", "epoch": 3, "iter": 3350, "lr": 0.00203, "memory": 18765, "data_time": 0.00811, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26434, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2597, "loss": 4.1224, "time": 0.44387}
{"mode": "train", "epoch": 3, "iter": 3400, "lr": 0.0019, "memory": 18765, "data_time": 0.0072, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26582, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26248, "loss": 4.12239, "time": 0.44123}
{"mode": "train", "epoch": 3, "iter": 3450, "lr": 0.00176, "memory": 18765, "data_time": 0.00761, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26717, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26192, "loss": 4.12239, "time": 0.4425}
{"mode": "train", "epoch": 3, "iter": 3500, "lr": 0.00163, "memory": 18765, "data_time": 0.00722, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.2697, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.265, "loss": 4.12239, "time": 0.44071}
{"mode": "train", "epoch": 3, "iter": 3550, "lr": 0.00149, "memory": 18765, "data_time": 0.00714, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26326, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26404, "loss": 4.12239, "time": 0.44103}
{"mode": "train", "epoch": 3, "iter": 3600, "lr": 0.00135, "memory": 18765, "data_time": 0.00686, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.2611, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26839, "loss": 4.12238, "time": 0.44042}
{"mode": "train", "epoch": 3, "iter": 3650, "lr": 0.00121, "memory": 18765, "data_time": 0.00742, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26356, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26443, "loss": 4.12238, "time": 0.44756}
{"mode": "train", "epoch": 3, "iter": 3700, "lr": 0.00106, "memory": 18765, "data_time": 0.00776, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26867, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2639, "loss": 4.12238, "time": 0.44167}
{"mode": "train", "epoch": 3, "iter": 3750, "lr": 0.00092, "memory": 18765, "data_time": 0.02521, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26979, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.27083, "loss": 4.12238, "time": 0.54487}
{"mode": "train", "epoch": 3, "iter": 3800, "lr": 0.00077, "memory": 18765, "data_time": 0.00745, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26497, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26172, "loss": 4.12238, "time": 0.44018}
{"mode": "train", "epoch": 3, "iter": 3850, "lr": 0.00062, "memory": 18765, "data_time": 0.00741, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26691, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26322, "loss": 4.12238, "time": 0.4399}
{"mode": "train", "epoch": 3, "iter": 3900, "lr": 0.00046, "memory": 18765, "data_time": 0.00768, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26458, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26425, "loss": 4.12238, "time": 0.44014}
{"mode": "train", "epoch": 3, "iter": 3950, "lr": 0.0003, "memory": 18765, "data_time": 0.00761, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26967, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26275, "loss": 4.12238, "time": 0.44045}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00011, "memory": 18765, "aAcc": 0.0527, "mIoU": 0.0101, "mAcc": 0.0527, "IoU.road": 0.0492, "IoU.sidewalk": 0.0278, "IoU.building": 0.0143, "IoU.wall": 0.003, "IoU.fence": 0.0045, "IoU.pole": 0.0031, "IoU.traffic light": 0.003, "IoU.traffic sign": 0.0115, "IoU.vegetation": 0.0042, "IoU.terrain": 0.0051, "IoU.sky": 0.0032, "IoU.person": 0.0018, "IoU.rider": 0.0007, "IoU.car": 0.0494, "IoU.truck": 0.0027, "IoU.bus": 0.0024, "IoU.train": 0.0051, "IoU.motorcycle": 0.0005, "IoU.bicycle": 0.0009, "Acc.road": 0.4268, "Acc.sidewalk": 0.0557, "Acc.building": 0.0192, "Acc.wall": 0.0032, "Acc.fence": 0.0049, "Acc.pole": 0.0033, "Acc.traffic light": 0.0032, "Acc.traffic sign": 0.0145, "Acc.vegetation": 0.0046, "Acc.terrain": 0.0056, "Acc.sky": 0.0034, "Acc.person": 0.0018, "Acc.rider": 0.0007, "Acc.car": 0.4416, "Acc.truck": 0.0028, "Acc.bus": 0.0025, "Acc.train": 0.0056, "Acc.motorcycle": 0.0005, "Acc.bicycle": 0.0009, "data_time": 0.0073, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26599, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26563, "loss": 4.12238, "time": 0.46381}
