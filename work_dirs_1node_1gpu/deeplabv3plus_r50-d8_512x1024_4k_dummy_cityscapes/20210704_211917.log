2021-07-04 21:19:18,135 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]
CUDA available: True
GPU 0: Tesla V100-SXM2-32GB
CUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GCC: gcc (GCC) 5.4.0
PyTorch: 1.8.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON,

TorchVision: 0.9.0
OpenCV: 4.5.1
MMCV: 1.3.8
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.1
MMSegmentation: 0.14.1+9988853
------------------------------------------------------------

2021-07-04 21:19:18,136 - mmseg - INFO - Distributed training: True
2021-07-04 21:19:18,356 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained='open-mmlab://resnet50_v1c',
    backbone=dict(
        type='ResNetV1c',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        dilations=(1, 1, 2, 4),
        strides=(1, 2, 1, 1),
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        style='pytorch',
        contract_dilation=True),
    decode_head=dict(
        type='DepthwiseSeparableASPPHead',
        in_channels=2048,
        in_index=3,
        channels=512,
        dilations=(1, 12, 24, 36),
        c1_in_channels=256,
        c1_channels=48,
        dropout_ratio=0.1,
        num_classes=19,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        in_channels=1024,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=19,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'DummyCityscapes'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 1024)
train_pipeline = [
    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='DummyCityscapes',
        pipeline=[
            dict(
                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='DummyCityscapes',
        pipeline=[
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='DummyCityscapes',
        pipeline=[
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=4000)
checkpoint_config = dict(by_epoch=False, interval=2000)
evaluation = dict(interval=2000, metric='mIoU')
work_dir = 'work_dirs_1node_1gpu/deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes'
gpu_ids = range(0, 1)

2021-07-04 21:19:20,792 - mmseg - INFO - EncoderDecoder(
  (backbone): ResNetV1c(
    (stem): Sequential(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (7): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace=True)
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Pretrained', 'checkpoint': 'open-mmlab://resnet50_v1c'}
  (decode_head): DepthwiseSeparableASPPHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss()
    (conv_seg): Conv2d(512, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (image_pool): Sequential(
      (0): AdaptiveAvgPool2d(output_size=1)
      (1): ConvModule(
        (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (aspp_modules): DepthwiseSeparableASPPModule(
      (0): ConvModule(
        (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (2): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(24, 24), dilation=(24, 24), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (3): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(36, 36), dilation=(36, 36), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    (bottleneck): ConvModule(
      (conv): Conv2d(2560, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (c1_bottleneck): ConvModule(
      (conv): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): SyncBatchNorm(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (sep_bottleneck): Sequential(
      (0): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(560, 560, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=560, bias=False)
          (bn): SyncBatchNorm(560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(560, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (1): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss()
    (conv_seg): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2021-07-04 21:19:27,599 - mmseg - INFO - Start running, host: chengzesen@SH-IDC1-10-198-4-58, work_dir: /mnt/cache/chengzesen/workspace/mmsegmentation/work_dirs_1node_1gpu/deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes
2021-07-04 21:19:27,661 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook
(NORMAL      ) CheckpointHook
(NORMAL      ) DistEvalHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook
(NORMAL      ) IterTimerHook
(NORMAL      ) DistEvalHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook
(NORMAL      ) IterTimerHook
(NORMAL      ) DistEvalHook
 --------------------
after_train_iter:
(ABOVE_NORMAL) OptimizerHook
(NORMAL      ) CheckpointHook
(NORMAL      ) IterTimerHook
(NORMAL      ) DistEvalHook
(VERY_LOW    ) TextLoggerHook
 --------------------
after_train_epoch:
(NORMAL      ) CheckpointHook
(NORMAL      ) DistEvalHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_val_epoch:
(NORMAL      ) IterTimerHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_val_iter:
(NORMAL      ) IterTimerHook
 --------------------
after_val_iter:
(NORMAL      ) IterTimerHook
 --------------------
after_val_epoch:
(VERY_LOW    ) TextLoggerHook
 --------------------
2021-07-04 21:19:27,671 - mmseg - INFO - workflow: [('train', 1)], max: 4000 iters
2021-07-04 21:21:02,277 - mmseg - INFO - Iter [50/4000]	lr: 9.891e-03, eta: 0:46:11, time: 0.702, data_time: 0.037, memory: 18769, decode.loss_seg: 2.9510, decode.acc_seg: 5.2608, aux.loss_seg: 1.1791, aux.acc_seg: 5.2637, loss: 4.1302
2021-07-04 21:21:27,410 - mmseg - INFO - Iter [100/4000]	lr: 9.779e-03, eta: 0:39:08, time: 0.503, data_time: 0.012, memory: 18769, decode.loss_seg: 2.9491, decode.acc_seg: 5.2618, aux.loss_seg: 1.1789, aux.acc_seg: 5.2662, loss: 4.1280
2021-07-04 21:21:51,854 - mmseg - INFO - Iter [150/4000]	lr: 9.667e-03, eta: 0:36:13, time: 0.489, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9482, decode.acc_seg: 5.2553, aux.loss_seg: 1.1788, aux.acc_seg: 5.2643, loss: 4.1270
2021-07-04 21:22:15,988 - mmseg - INFO - Iter [200/4000]	lr: 9.556e-03, eta: 0:34:27, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9476, decode.acc_seg: 5.2659, aux.loss_seg: 1.1787, aux.acc_seg: 5.2617, loss: 4.1263
2021-07-04 21:22:40,154 - mmseg - INFO - Iter [250/4000]	lr: 9.444e-03, eta: 0:33:14, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9471, decode.acc_seg: 5.2659, aux.loss_seg: 1.1787, aux.acc_seg: 5.2651, loss: 4.1258
2021-07-04 21:23:09,059 - mmseg - INFO - Iter [300/4000]	lr: 9.331e-03, eta: 0:33:16, time: 0.578, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9467, decode.acc_seg: 5.2700, aux.loss_seg: 1.1786, aux.acc_seg: 5.2634, loss: 4.1253
2021-07-04 21:23:33,298 - mmseg - INFO - Iter [350/4000]	lr: 9.219e-03, eta: 0:32:20, time: 0.485, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9464, decode.acc_seg: 5.2635, aux.loss_seg: 1.1785, aux.acc_seg: 5.2627, loss: 4.1250
2021-07-04 21:23:57,626 - mmseg - INFO - Iter [400/4000]	lr: 9.107e-03, eta: 0:31:33, time: 0.487, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9462, decode.acc_seg: 5.2613, aux.loss_seg: 1.1785, aux.acc_seg: 5.2608, loss: 4.1247
2021-07-04 21:24:21,950 - mmseg - INFO - Iter [450/4000]	lr: 8.994e-03, eta: 0:30:52, time: 0.486, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9460, decode.acc_seg: 5.2549, aux.loss_seg: 1.1784, aux.acc_seg: 5.2641, loss: 4.1245
2021-07-04 21:24:46,209 - mmseg - INFO - Iter [500/4000]	lr: 8.881e-03, eta: 0:30:13, time: 0.485, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9458, decode.acc_seg: 5.2659, aux.loss_seg: 1.1784, aux.acc_seg: 5.2610, loss: 4.1243
2021-07-04 21:25:10,444 - mmseg - INFO - Iter [550/4000]	lr: 8.768e-03, eta: 0:29:36, time: 0.485, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9457, decode.acc_seg: 5.2609, aux.loss_seg: 1.1784, aux.acc_seg: 5.2637, loss: 4.1241
2021-07-04 21:25:34,618 - mmseg - INFO - Iter [600/4000]	lr: 8.655e-03, eta: 0:29:02, time: 0.483, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9456, decode.acc_seg: 5.2618, aux.loss_seg: 1.1783, aux.acc_seg: 5.2616, loss: 4.1239
2021-07-04 21:25:58,766 - mmseg - INFO - Iter [650/4000]	lr: 8.542e-03, eta: 0:28:28, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9455, decode.acc_seg: 5.2659, aux.loss_seg: 1.1783, aux.acc_seg: 5.2643, loss: 4.1238
2021-07-04 21:26:22,902 - mmseg - INFO - Iter [700/4000]	lr: 8.428e-03, eta: 0:27:56, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9454, decode.acc_seg: 5.2671, aux.loss_seg: 1.1783, aux.acc_seg: 5.2650, loss: 4.1237
2021-07-04 21:26:47,065 - mmseg - INFO - Iter [750/4000]	lr: 8.315e-03, eta: 0:27:26, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9453, decode.acc_seg: 5.2616, aux.loss_seg: 1.1783, aux.acc_seg: 5.2659, loss: 4.1236
2021-07-04 21:27:11,192 - mmseg - INFO - Iter [800/4000]	lr: 8.201e-03, eta: 0:26:56, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9452, decode.acc_seg: 5.2641, aux.loss_seg: 1.1782, aux.acc_seg: 5.2629, loss: 4.1235
2021-07-04 21:27:35,861 - mmseg - INFO - Iter [850/4000]	lr: 8.087e-03, eta: 0:26:28, time: 0.493, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9452, decode.acc_seg: 5.2596, aux.loss_seg: 1.1782, aux.acc_seg: 5.2669, loss: 4.1234
2021-07-04 21:28:00,940 - mmseg - INFO - Iter [900/4000]	lr: 7.973e-03, eta: 0:26:02, time: 0.501, data_time: 0.009, memory: 18769, decode.loss_seg: 2.9451, decode.acc_seg: 5.2644, aux.loss_seg: 1.1782, aux.acc_seg: 5.2618, loss: 4.1233
2021-07-04 21:28:25,155 - mmseg - INFO - Iter [950/4000]	lr: 7.859e-03, eta: 0:25:34, time: 0.485, data_time: 0.011, memory: 18769, decode.loss_seg: 2.9451, decode.acc_seg: 5.2611, aux.loss_seg: 1.1782, aux.acc_seg: 5.2612, loss: 4.1233
2021-07-04 21:28:49,253 - mmseg - INFO - Exp name: deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py
2021-07-04 21:28:49,253 - mmseg - INFO - Iter [1000/4000]	lr: 7.744e-03, eta: 0:25:06, time: 0.482, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9451, decode.acc_seg: 5.2592, aux.loss_seg: 1.1782, aux.acc_seg: 5.2642, loss: 4.1232
2021-07-04 21:29:13,395 - mmseg - INFO - Iter [1050/4000]	lr: 7.629e-03, eta: 0:24:38, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9450, decode.acc_seg: 5.2639, aux.loss_seg: 1.1781, aux.acc_seg: 5.2632, loss: 4.1232
2021-07-04 21:29:37,508 - mmseg - INFO - Iter [1100/4000]	lr: 7.514e-03, eta: 0:24:10, time: 0.482, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9450, decode.acc_seg: 5.2632, aux.loss_seg: 1.1781, aux.acc_seg: 5.2663, loss: 4.1231
2021-07-04 21:30:01,657 - mmseg - INFO - Iter [1150/4000]	lr: 7.399e-03, eta: 0:23:43, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9449, decode.acc_seg: 5.2641, aux.loss_seg: 1.1781, aux.acc_seg: 5.2640, loss: 4.1230
2021-07-04 21:30:25,753 - mmseg - INFO - Iter [1200/4000]	lr: 7.284e-03, eta: 0:23:16, time: 0.482, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9449, decode.acc_seg: 5.2658, aux.loss_seg: 1.1781, aux.acc_seg: 5.2600, loss: 4.1230
2021-07-04 21:30:49,845 - mmseg - INFO - Iter [1250/4000]	lr: 7.168e-03, eta: 0:22:49, time: 0.482, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9449, decode.acc_seg: 5.2600, aux.loss_seg: 1.1781, aux.acc_seg: 5.2610, loss: 4.1230
2021-07-04 21:31:14,023 - mmseg - INFO - Iter [1300/4000]	lr: 7.053e-03, eta: 0:22:23, time: 0.484, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9449, decode.acc_seg: 5.2587, aux.loss_seg: 1.1781, aux.acc_seg: 5.2657, loss: 4.1229
2021-07-04 21:31:38,139 - mmseg - INFO - Iter [1350/4000]	lr: 6.937e-03, eta: 0:21:57, time: 0.482, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9449, decode.acc_seg: 5.2662, aux.loss_seg: 1.1781, aux.acc_seg: 5.2597, loss: 4.1229
2021-07-04 21:32:02,267 - mmseg - INFO - Iter [1400/4000]	lr: 6.821e-03, eta: 0:21:30, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9448, decode.acc_seg: 5.2621, aux.loss_seg: 1.1781, aux.acc_seg: 5.2641, loss: 4.1229
2021-07-04 21:32:26,937 - mmseg - INFO - Iter [1450/4000]	lr: 6.704e-03, eta: 0:21:05, time: 0.493, data_time: 0.009, memory: 18769, decode.loss_seg: 2.9448, decode.acc_seg: 5.2657, aux.loss_seg: 1.1780, aux.acc_seg: 5.2667, loss: 4.1228
2021-07-04 21:32:51,215 - mmseg - INFO - Iter [1500/4000]	lr: 6.588e-03, eta: 0:20:40, time: 0.486, data_time: 0.010, memory: 18769, decode.loss_seg: 2.9448, decode.acc_seg: 5.2671, aux.loss_seg: 1.1780, aux.acc_seg: 5.2660, loss: 4.1228
2021-07-04 21:33:15,355 - mmseg - INFO - Iter [1550/4000]	lr: 6.471e-03, eta: 0:20:14, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9448, decode.acc_seg: 5.2647, aux.loss_seg: 1.1780, aux.acc_seg: 5.2604, loss: 4.1228
2021-07-04 21:33:39,591 - mmseg - INFO - Iter [1600/4000]	lr: 6.354e-03, eta: 0:19:48, time: 0.485, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2640, aux.loss_seg: 1.1780, aux.acc_seg: 5.2607, loss: 4.1228
2021-07-04 21:34:03,772 - mmseg - INFO - Iter [1650/4000]	lr: 6.236e-03, eta: 0:19:23, time: 0.484, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2666, aux.loss_seg: 1.1780, aux.acc_seg: 5.2604, loss: 4.1227
2021-07-04 21:34:27,907 - mmseg - INFO - Iter [1700/4000]	lr: 6.119e-03, eta: 0:18:57, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2646, aux.loss_seg: 1.1780, aux.acc_seg: 5.2630, loss: 4.1227
2021-07-04 21:34:52,055 - mmseg - INFO - Iter [1750/4000]	lr: 6.001e-03, eta: 0:18:31, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2662, aux.loss_seg: 1.1780, aux.acc_seg: 5.2607, loss: 4.1227
2021-07-04 21:35:16,197 - mmseg - INFO - Iter [1800/4000]	lr: 5.883e-03, eta: 0:18:06, time: 0.483, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2690, aux.loss_seg: 1.1780, aux.acc_seg: 5.2613, loss: 4.1227
2021-07-04 21:35:40,325 - mmseg - INFO - Iter [1850/4000]	lr: 5.764e-03, eta: 0:17:41, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2580, aux.loss_seg: 1.1780, aux.acc_seg: 5.2633, loss: 4.1227
2021-07-04 21:36:04,485 - mmseg - INFO - Iter [1900/4000]	lr: 5.646e-03, eta: 0:17:15, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2674, aux.loss_seg: 1.1780, aux.acc_seg: 5.2632, loss: 4.1227
2021-07-04 21:36:28,625 - mmseg - INFO - Iter [1950/4000]	lr: 5.527e-03, eta: 0:16:50, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2650, aux.loss_seg: 1.1780, aux.acc_seg: 5.2658, loss: 4.1226
2021-07-04 21:36:52,783 - mmseg - INFO - Saving checkpoint at 2000 iterations
2021-07-04 21:41:08,037 - mmseg - INFO - per class results:
2021-07-04 21:41:08,054 - mmseg - INFO -
+---------------+------+-------+
|     Class     | IoU  |  Acc  |
+---------------+------+-------+
|      road     | 2.86 |  5.91 |
|    sidewalk   | 2.75 |  5.45 |
|    building   | 4.16 | 16.52 |
|      wall     | 2.34 |  4.07 |
|     fence     | 3.52 |  9.63 |
|      pole     | 1.06 |  1.31 |
| traffic light | 3.38 |  8.61 |
|  traffic sign | 1.52 |  2.08 |
|   vegetation  | 0.62 |  0.7  |
|    terrain    | 2.49 |  4.55 |
|      sky      | 1.92 |  2.95 |
|     person    | 1.52 |  2.1  |
|     rider     | 3.71 | 11.21 |
|      car      | 3.78 | 11.79 |
|     truck     | 2.35 |  4.07 |
|      bus      | 0.61 |  0.69 |
|     train     | 1.19 |  1.51 |
|   motorcycle  | 1.1  |  1.38 |
|    bicycle    | 2.75 |  5.45 |
+---------------+------+-------+
2021-07-04 21:41:08,054 - mmseg - INFO - Summary:
2021-07-04 21:41:08,054 - mmseg - INFO -
+------+------+------+
| aAcc | mIoU | mAcc |
+------+------+------+
| 5.26 | 2.3  | 5.26 |
+------+------+------+
2021-07-04 21:41:08,407 - mmseg - INFO - Exp name: deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py
2021-07-04 21:41:08,407 - mmseg - INFO - Iter [500/4000]	lr: 5.408e-03, eta: 0:16:26, time: 0.502, data_time: 0.008, memory: 18769, aAcc: 0.0526, mIoU: 0.0230, mAcc: 0.0526, IoU.road: 0.0286, IoU.sidewalk: 0.0275, IoU.building: 0.0416, IoU.wall: 0.0234, IoU.fence: 0.0352, IoU.pole: 0.0106, IoU.traffic light: 0.0338, IoU.traffic sign: 0.0152, IoU.vegetation: 0.0062, IoU.terrain: 0.0249, IoU.sky: 0.0192, IoU.person: 0.0152, IoU.rider: 0.0371, IoU.car: 0.0378, IoU.truck: 0.0235, IoU.bus: 0.0061, IoU.train: 0.0119, IoU.motorcycle: 0.0110, IoU.bicycle: 0.0275, Acc.road: 0.0591, Acc.sidewalk: 0.0545, Acc.building: 0.1652, Acc.wall: 0.0407, Acc.fence: 0.0963, Acc.pole: 0.0131, Acc.traffic light: 0.0861, Acc.traffic sign: 0.0208, Acc.vegetation: 0.0070, Acc.terrain: 0.0455, Acc.sky: 0.0295, Acc.person: 0.0210, Acc.rider: 0.1121, Acc.car: 0.1179, Acc.truck: 0.0407, Acc.bus: 0.0069, Acc.train: 0.0151, Acc.motorcycle: 0.0138, Acc.bicycle: 0.0545, decode.loss_seg: 2.9447, decode.acc_seg: 5.2679, aux.loss_seg: 1.1780, aux.acc_seg: 5.2658, loss: 4.1226
2021-07-04 21:41:32,514 - mmseg - INFO - Iter [2050/4000]	lr: 5.288e-03, eta: 0:20:03, time: 5.576, data_time: 5.102, memory: 18769, decode.loss_seg: 2.9447, decode.acc_seg: 5.2591, aux.loss_seg: 1.1780, aux.acc_seg: 5.2595, loss: 4.1226
2021-07-04 21:41:56,648 - mmseg - INFO - Iter [2100/4000]	lr: 5.168e-03, eta: 0:19:26, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2609, aux.loss_seg: 1.1780, aux.acc_seg: 5.2691, loss: 4.1226
2021-07-04 21:42:20,789 - mmseg - INFO - Iter [2150/4000]	lr: 5.048e-03, eta: 0:18:50, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2588, aux.loss_seg: 1.1779, aux.acc_seg: 5.2613, loss: 4.1226
2021-07-04 21:42:44,945 - mmseg - INFO - Iter [2200/4000]	lr: 4.928e-03, eta: 0:18:14, time: 0.483, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2635, aux.loss_seg: 1.1779, aux.acc_seg: 5.2626, loss: 4.1226
2021-07-04 21:43:09,095 - mmseg - INFO - Iter [2250/4000]	lr: 4.807e-03, eta: 0:17:39, time: 0.483, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2582, aux.loss_seg: 1.1779, aux.acc_seg: 5.2676, loss: 4.1226
2021-07-04 21:43:33,276 - mmseg - INFO - Iter [2300/4000]	lr: 4.686e-03, eta: 0:17:04, time: 0.484, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2691, aux.loss_seg: 1.1779, aux.acc_seg: 5.2600, loss: 4.1226
2021-07-04 21:43:57,412 - mmseg - INFO - Iter [2350/4000]	lr: 4.564e-03, eta: 0:16:30, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2660, aux.loss_seg: 1.1779, aux.acc_seg: 5.2630, loss: 4.1225
2021-07-04 21:44:21,565 - mmseg - INFO - Iter [2400/4000]	lr: 4.442e-03, eta: 0:15:56, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2668, aux.loss_seg: 1.1779, aux.acc_seg: 5.2648, loss: 4.1225
2021-07-04 21:44:45,760 - mmseg - INFO - Iter [2450/4000]	lr: 4.320e-03, eta: 0:15:22, time: 0.484, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2625, aux.loss_seg: 1.1779, aux.acc_seg: 5.2654, loss: 4.1225
2021-07-04 21:45:09,901 - mmseg - INFO - Iter [2500/4000]	lr: 4.198e-03, eta: 0:14:49, time: 0.483, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2677, aux.loss_seg: 1.1779, aux.acc_seg: 5.2666, loss: 4.1225
2021-07-04 21:45:34,052 - mmseg - INFO - Iter [2550/4000]	lr: 4.074e-03, eta: 0:14:16, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2664, aux.loss_seg: 1.1779, aux.acc_seg: 5.2661, loss: 4.1225
2021-07-04 21:46:01,738 - mmseg - INFO - Iter [2600/4000]	lr: 3.951e-03, eta: 0:13:46, time: 0.553, data_time: 0.021, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2654, aux.loss_seg: 1.1779, aux.acc_seg: 5.2622, loss: 4.1225
2021-07-04 21:46:33,658 - mmseg - INFO - Iter [2650/4000]	lr: 3.827e-03, eta: 0:13:17, time: 0.632, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2619, aux.loss_seg: 1.1779, aux.acc_seg: 5.2664, loss: 4.1225
2021-07-04 21:47:04,229 - mmseg - INFO - Iter [2700/4000]	lr: 3.703e-03, eta: 0:12:48, time: 0.618, data_time: 0.029, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2630, aux.loss_seg: 1.1779, aux.acc_seg: 5.2668, loss: 4.1225
2021-07-04 21:47:33,702 - mmseg - INFO - Iter [2750/4000]	lr: 3.578e-03, eta: 0:12:19, time: 0.589, data_time: 0.011, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2639, aux.loss_seg: 1.1779, aux.acc_seg: 5.2650, loss: 4.1225
2021-07-04 21:47:58,964 - mmseg - INFO - Iter [2800/4000]	lr: 3.453e-03, eta: 0:11:47, time: 0.505, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2646, aux.loss_seg: 1.1779, aux.acc_seg: 5.2656, loss: 4.1225
2021-07-04 21:48:23,122 - mmseg - INFO - Iter [2850/4000]	lr: 3.327e-03, eta: 0:11:16, time: 0.483, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2643, aux.loss_seg: 1.1779, aux.acc_seg: 5.2602, loss: 4.1225
2021-07-04 21:48:47,400 - mmseg - INFO - Iter [2900/4000]	lr: 3.200e-03, eta: 0:10:44, time: 0.486, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2658, aux.loss_seg: 1.1779, aux.acc_seg: 5.2659, loss: 4.1225
2021-07-04 21:49:11,561 - mmseg - INFO - Iter [2950/4000]	lr: 3.073e-03, eta: 0:10:13, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2724, aux.loss_seg: 1.1779, aux.acc_seg: 5.2613, loss: 4.1225
2021-07-04 21:49:35,806 - mmseg - INFO - Exp name: deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py
2021-07-04 21:49:35,807 - mmseg - INFO - Iter [3000/4000]	lr: 2.946e-03, eta: 0:09:42, time: 0.485, data_time: 0.009, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2610, aux.loss_seg: 1.1779, aux.acc_seg: 5.2662, loss: 4.1225
2021-07-04 21:50:00,233 - mmseg - INFO - Iter [3050/4000]	lr: 2.817e-03, eta: 0:09:12, time: 0.489, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2661, aux.loss_seg: 1.1779, aux.acc_seg: 5.2688, loss: 4.1225
2021-07-04 21:50:24,702 - mmseg - INFO - Iter [3100/4000]	lr: 2.688e-03, eta: 0:08:41, time: 0.489, data_time: 0.008, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2672, aux.loss_seg: 1.1779, aux.acc_seg: 5.2593, loss: 4.1225
2021-07-04 21:50:48,874 - mmseg - INFO - Iter [3150/4000]	lr: 2.559e-03, eta: 0:08:11, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2599, aux.loss_seg: 1.1779, aux.acc_seg: 5.2642, loss: 4.1225
2021-07-04 21:51:13,041 - mmseg - INFO - Iter [3200/4000]	lr: 2.428e-03, eta: 0:07:41, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2680, aux.loss_seg: 1.1779, aux.acc_seg: 5.2713, loss: 4.1224
2021-07-04 21:51:37,204 - mmseg - INFO - Iter [3250/4000]	lr: 2.297e-03, eta: 0:07:11, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2662, aux.loss_seg: 1.1779, aux.acc_seg: 5.2634, loss: 4.1225
2021-07-04 21:52:01,306 - mmseg - INFO - Iter [3300/4000]	lr: 2.165e-03, eta: 0:06:41, time: 0.482, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2662, aux.loss_seg: 1.1779, aux.acc_seg: 5.2566, loss: 4.1224
2021-07-04 21:52:25,428 - mmseg - INFO - Iter [3350/4000]	lr: 2.032e-03, eta: 0:06:12, time: 0.482, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2686, aux.loss_seg: 1.1779, aux.acc_seg: 5.2621, loss: 4.1224
2021-07-04 21:52:49,561 - mmseg - INFO - Iter [3400/4000]	lr: 1.898e-03, eta: 0:05:42, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2734, aux.loss_seg: 1.1779, aux.acc_seg: 5.2683, loss: 4.1224
2021-07-04 21:53:13,709 - mmseg - INFO - Iter [3450/4000]	lr: 1.763e-03, eta: 0:05:13, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2652, aux.loss_seg: 1.1779, aux.acc_seg: 5.2579, loss: 4.1224
2021-07-04 21:53:37,845 - mmseg - INFO - Iter [3500/4000]	lr: 1.626e-03, eta: 0:04:44, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2663, aux.loss_seg: 1.1779, aux.acc_seg: 5.2685, loss: 4.1224
2021-07-04 21:54:01,985 - mmseg - INFO - Iter [3550/4000]	lr: 1.488e-03, eta: 0:04:15, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2687, aux.loss_seg: 1.1779, aux.acc_seg: 5.2667, loss: 4.1224
2021-07-04 21:54:26,110 - mmseg - INFO - Iter [3600/4000]	lr: 1.349e-03, eta: 0:03:46, time: 0.482, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2617, aux.loss_seg: 1.1779, aux.acc_seg: 5.2626, loss: 4.1224
2021-07-04 21:54:50,259 - mmseg - INFO - Iter [3650/4000]	lr: 1.208e-03, eta: 0:03:17, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9446, decode.acc_seg: 5.2595, aux.loss_seg: 1.1779, aux.acc_seg: 5.2676, loss: 4.1224
2021-07-04 21:55:14,386 - mmseg - INFO - Iter [3700/4000]	lr: 1.065e-03, eta: 0:02:49, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2594, aux.loss_seg: 1.1779, aux.acc_seg: 5.2662, loss: 4.1224
2021-07-04 21:55:38,550 - mmseg - INFO - Iter [3750/4000]	lr: 9.194e-04, eta: 0:02:20, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2718, aux.loss_seg: 1.1779, aux.acc_seg: 5.2650, loss: 4.1224
2021-07-04 21:56:02,692 - mmseg - INFO - Iter [3800/4000]	lr: 7.709e-04, eta: 0:01:52, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2598, aux.loss_seg: 1.1779, aux.acc_seg: 5.2661, loss: 4.1224
2021-07-04 21:56:26,817 - mmseg - INFO - Iter [3850/4000]	lr: 6.186e-04, eta: 0:01:24, time: 0.482, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2627, aux.loss_seg: 1.1779, aux.acc_seg: 5.2615, loss: 4.1224
2021-07-04 21:56:50,944 - mmseg - INFO - Iter [3900/4000]	lr: 4.611e-04, eta: 0:00:55, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2661, aux.loss_seg: 1.1779, aux.acc_seg: 5.2657, loss: 4.1224
2021-07-04 21:57:15,091 - mmseg - INFO - Iter [3950/4000]	lr: 2.953e-04, eta: 0:00:27, time: 0.483, data_time: 0.007, memory: 18769, decode.loss_seg: 2.9445, decode.acc_seg: 5.2659, aux.loss_seg: 1.1779, aux.acc_seg: 5.2611, loss: 4.1224
2021-07-04 21:57:39,203 - mmseg - INFO - Saving checkpoint at 4000 iterations
2021-07-04 22:00:01,776 - mmseg - INFO - per class results:
2021-07-04 22:00:01,786 - mmseg - INFO -
+---------------+------+-------+
|     Class     | IoU  |  Acc  |
+---------------+------+-------+
|      road     | 2.12 |  3.44 |
|    sidewalk   | 2.57 |  4.76 |
|    building   | 3.52 |  9.57 |
|      wall     | 1.58 |  2.2  |
|     fence     | 4.04 | 14.78 |
|      pole     | 2.06 |  3.27 |
| traffic light | 3.46 |  9.12 |
|  traffic sign | 2.31 |  3.95 |
|   vegetation  | 0.58 |  0.65 |
|    terrain    | 2.77 |  5.52 |
|      sky      | 1.8  |  2.66 |
|     person    | 1.51 |  2.08 |
|     rider     | 3.89 | 13.05 |
|      car      | 3.49 |  9.4  |
|     truck     | 2.1  |  3.38 |
|      bus      | 0.56 |  0.62 |
|     train     | 1.43 |  1.92 |
|   motorcycle  | 2.2  |  3.65 |
|    bicycle    | 2.9  |  6.08 |
+---------------+------+-------+
2021-07-04 22:00:01,786 - mmseg - INFO - Summary:
2021-07-04 22:00:01,786 - mmseg - INFO -
+------+------+------+
| aAcc | mIoU | mAcc |
+------+------+------+
| 5.27 | 2.36 | 5.27 |
+------+------+------+
2021-07-04 22:00:02,134 - mmseg - INFO - Exp name: deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py
2021-07-04 22:00:02,135 - mmseg - INFO - Iter [500/4000]	lr: 1.057e-04, eta: 0:00:00, time: 0.496, data_time: 0.008, memory: 18769, aAcc: 0.0527, mIoU: 0.0236, mAcc: 0.0527, IoU.road: 0.0212, IoU.sidewalk: 0.0257, IoU.building: 0.0352, IoU.wall: 0.0158, IoU.fence: 0.0404, IoU.pole: 0.0206, IoU.traffic light: 0.0346, IoU.traffic sign: 0.0231, IoU.vegetation: 0.0058, IoU.terrain: 0.0277, IoU.sky: 0.0180, IoU.person: 0.0151, IoU.rider: 0.0389, IoU.car: 0.0349, IoU.truck: 0.0210, IoU.bus: 0.0056, IoU.train: 0.0143, IoU.motorcycle: 0.0220, IoU.bicycle: 0.0290, Acc.road: 0.0344, Acc.sidewalk: 0.0476, Acc.building: 0.0957, Acc.wall: 0.0220, Acc.fence: 0.1478, Acc.pole: 0.0327, Acc.traffic light: 0.0912, Acc.traffic sign: 0.0395, Acc.vegetation: 0.0065, Acc.terrain: 0.0552, Acc.sky: 0.0266, Acc.person: 0.0208, Acc.rider: 0.1305, Acc.car: 0.0940, Acc.truck: 0.0338, Acc.bus: 0.0062, Acc.train: 0.0192, Acc.motorcycle: 0.0365, Acc.bicycle: 0.0608, decode.loss_seg: 2.9445, decode.acc_seg: 5.2696, aux.loss_seg: 1.1779, aux.acc_seg: 5.2643, loss: 4.1224
