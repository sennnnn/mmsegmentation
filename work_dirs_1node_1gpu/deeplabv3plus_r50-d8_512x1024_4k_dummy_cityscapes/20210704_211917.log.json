{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='DepthwiseSeparableASPPHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        dilations=(1, 12, 24, 36),\n        c1_in_channels=256,\n        c1_channels=48,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = 'work_dirs_1node_1gpu/deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18769, "data_time": 0.03715, "decode.loss_seg": 2.95105, "decode.acc_seg": 5.26075, "aux.loss_seg": 1.17912, "aux.acc_seg": 5.26366, "loss": 4.13017, "time": 0.70154}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18769, "data_time": 0.01178, "decode.loss_seg": 2.94911, "decode.acc_seg": 5.26175, "aux.loss_seg": 1.17889, "aux.acc_seg": 5.26623, "loss": 4.12799, "time": 0.50303}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18769, "data_time": 0.00799, "decode.loss_seg": 2.94824, "decode.acc_seg": 5.25528, "aux.loss_seg": 1.17879, "aux.acc_seg": 5.26431, "loss": 4.12703, "time": 0.48887}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00956, "memory": 18769, "data_time": 0.00742, "decode.loss_seg": 2.94757, "decode.acc_seg": 5.26588, "aux.loss_seg": 1.17873, "aux.acc_seg": 5.26169, "loss": 4.1263, "time": 0.48266}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00944, "memory": 18769, "data_time": 0.0074, "decode.loss_seg": 2.9471, "decode.acc_seg": 5.26588, "aux.loss_seg": 1.17866, "aux.acc_seg": 5.26512, "loss": 4.12576, "time": 0.4833}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00933, "memory": 18769, "data_time": 0.00734, "decode.loss_seg": 2.94672, "decode.acc_seg": 5.26997, "aux.loss_seg": 1.1786, "aux.acc_seg": 5.26339, "loss": 4.12532, "time": 0.5781}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00922, "memory": 18769, "data_time": 0.0074, "decode.loss_seg": 2.94644, "decode.acc_seg": 5.2635, "aux.loss_seg": 1.17855, "aux.acc_seg": 5.2627, "loss": 4.12499, "time": 0.48477}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00911, "memory": 18769, "data_time": 0.00735, "decode.loss_seg": 2.94619, "decode.acc_seg": 5.26126, "aux.loss_seg": 1.1785, "aux.acc_seg": 5.26078, "loss": 4.12469, "time": 0.48655}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00899, "memory": 18769, "data_time": 0.0074, "decode.loss_seg": 2.94602, "decode.acc_seg": 5.25493, "aux.loss_seg": 1.17845, "aux.acc_seg": 5.26411, "loss": 4.12447, "time": 0.48648}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00888, "memory": 18769, "data_time": 0.00742, "decode.loss_seg": 2.94584, "decode.acc_seg": 5.26586, "aux.loss_seg": 1.17841, "aux.acc_seg": 5.26101, "loss": 4.12425, "time": 0.48518}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00877, "memory": 18769, "data_time": 0.00745, "decode.loss_seg": 2.94571, "decode.acc_seg": 5.2609, "aux.loss_seg": 1.17837, "aux.acc_seg": 5.26365, "loss": 4.12409, "time": 0.48469}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00866, "memory": 18769, "data_time": 0.00751, "decode.loss_seg": 2.9456, "decode.acc_seg": 5.26181, "aux.loss_seg": 1.17835, "aux.acc_seg": 5.26161, "loss": 4.12394, "time": 0.48347}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.00854, "memory": 18769, "data_time": 0.00741, "decode.loss_seg": 2.94549, "decode.acc_seg": 5.26587, "aux.loss_seg": 1.17831, "aux.acc_seg": 5.26426, "loss": 4.12381, "time": 0.48297}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00843, "memory": 18769, "data_time": 0.00739, "decode.loss_seg": 2.94539, "decode.acc_seg": 5.26709, "aux.loss_seg": 1.17828, "aux.acc_seg": 5.26505, "loss": 4.12368, "time": 0.48271}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.00831, "memory": 18769, "data_time": 0.0074, "decode.loss_seg": 2.94534, "decode.acc_seg": 5.26161, "aux.loss_seg": 1.17825, "aux.acc_seg": 5.26589, "loss": 4.1236, "time": 0.48326}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.0082, "memory": 18769, "data_time": 0.00737, "decode.loss_seg": 2.94524, "decode.acc_seg": 5.26409, "aux.loss_seg": 1.17824, "aux.acc_seg": 5.26285, "loss": 4.12348, "time": 0.48253}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.00809, "memory": 18769, "data_time": 0.00743, "decode.loss_seg": 2.9452, "decode.acc_seg": 5.25961, "aux.loss_seg": 1.17821, "aux.acc_seg": 5.26694, "loss": 4.12341, "time": 0.49283}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00797, "memory": 18769, "data_time": 0.0088, "decode.loss_seg": 2.94515, "decode.acc_seg": 5.26437, "aux.loss_seg": 1.17819, "aux.acc_seg": 5.26177, "loss": 4.12334, "time": 0.50105}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00786, "memory": 18769, "data_time": 0.01086, "decode.loss_seg": 2.94509, "decode.acc_seg": 5.26107, "aux.loss_seg": 1.17818, "aux.acc_seg": 5.26119, "loss": 4.12327, "time": 0.48535}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00774, "memory": 18769, "data_time": 0.0075, "decode.loss_seg": 2.94505, "decode.acc_seg": 5.25916, "aux.loss_seg": 1.17816, "aux.acc_seg": 5.26422, "loss": 4.12321, "time": 0.48195}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00763, "memory": 18769, "data_time": 0.00742, "decode.loss_seg": 2.94501, "decode.acc_seg": 5.26388, "aux.loss_seg": 1.17814, "aux.acc_seg": 5.26324, "loss": 4.12315, "time": 0.48283}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00751, "memory": 18769, "data_time": 0.00751, "decode.loss_seg": 2.94498, "decode.acc_seg": 5.26324, "aux.loss_seg": 1.17812, "aux.acc_seg": 5.26629, "loss": 4.1231, "time": 0.48226}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.0074, "memory": 18769, "data_time": 0.00743, "decode.loss_seg": 2.94493, "decode.acc_seg": 5.26405, "aux.loss_seg": 1.17811, "aux.acc_seg": 5.26398, "loss": 4.12304, "time": 0.48298}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00728, "memory": 18769, "data_time": 0.00733, "decode.loss_seg": 2.94491, "decode.acc_seg": 5.26584, "aux.loss_seg": 1.1781, "aux.acc_seg": 5.25998, "loss": 4.12301, "time": 0.48191}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00717, "memory": 18769, "data_time": 0.0075, "decode.loss_seg": 2.94489, "decode.acc_seg": 5.26004, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.26098, "loss": 4.12298, "time": 0.48182}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00705, "memory": 18769, "data_time": 0.0076, "decode.loss_seg": 2.94486, "decode.acc_seg": 5.2587, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26571, "loss": 4.12293, "time": 0.48355}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.00694, "memory": 18769, "data_time": 0.00753, "decode.loss_seg": 2.94485, "decode.acc_seg": 5.26617, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.25973, "loss": 4.12291, "time": 0.48231}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00682, "memory": 18769, "data_time": 0.00738, "decode.loss_seg": 2.94482, "decode.acc_seg": 5.26213, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26412, "loss": 4.12287, "time": 0.48256}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.0067, "memory": 18769, "data_time": 0.00895, "decode.loss_seg": 2.9448, "decode.acc_seg": 5.26572, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26673, "loss": 4.12284, "time": 0.49307}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.00659, "memory": 18769, "data_time": 0.0098, "decode.loss_seg": 2.94477, "decode.acc_seg": 5.26707, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.266, "loss": 4.1228, "time": 0.48587}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.00647, "memory": 18769, "data_time": 0.00747, "decode.loss_seg": 2.94477, "decode.acc_seg": 5.26471, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26042, "loss": 4.12279, "time": 0.4828}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.00635, "memory": 18769, "data_time": 0.00763, "decode.loss_seg": 2.94474, "decode.acc_seg": 5.26402, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26072, "loss": 4.12276, "time": 0.48471}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.00624, "memory": 18769, "data_time": 0.00744, "decode.loss_seg": 2.94474, "decode.acc_seg": 5.26659, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26042, "loss": 4.12274, "time": 0.48362}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.00612, "memory": 18769, "data_time": 0.00738, "decode.loss_seg": 2.94472, "decode.acc_seg": 5.26465, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26298, "loss": 4.12272, "time": 0.48268}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.006, "memory": 18769, "data_time": 0.00719, "decode.loss_seg": 2.94471, "decode.acc_seg": 5.26622, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26072, "loss": 4.12271, "time": 0.48296}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.00588, "memory": 18769, "data_time": 0.00782, "decode.loss_seg": 2.9447, "decode.acc_seg": 5.26897, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.2613, "loss": 4.12268, "time": 0.48283}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.00576, "memory": 18769, "data_time": 0.00738, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.25803, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26327, "loss": 4.12267, "time": 0.48255}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.00565, "memory": 18769, "data_time": 0.00722, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26738, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26317, "loss": 4.12265, "time": 0.4832}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.00553, "memory": 18769, "data_time": 0.00726, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26503, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.2658, "loss": 4.12263, "time": 0.4828}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.00541, "memory": 18769, "aAcc": 0.0526, "mIoU": 0.023, "mAcc": 0.0526, "IoU.road": 0.0286, "IoU.sidewalk": 0.0275, "IoU.building": 0.0416, "IoU.wall": 0.0234, "IoU.fence": 0.0352, "IoU.pole": 0.0106, "IoU.traffic light": 0.0338, "IoU.traffic sign": 0.0152, "IoU.vegetation": 0.0062, "IoU.terrain": 0.0249, "IoU.sky": 0.0192, "IoU.person": 0.0152, "IoU.rider": 0.0371, "IoU.car": 0.0378, "IoU.truck": 0.0235, "IoU.bus": 0.0061, "IoU.train": 0.0119, "IoU.motorcycle": 0.011, "IoU.bicycle": 0.0275, "Acc.road": 0.0591, "Acc.sidewalk": 0.0545, "Acc.building": 0.1652, "Acc.wall": 0.0407, "Acc.fence": 0.0963, "Acc.pole": 0.0131, "Acc.traffic light": 0.0861, "Acc.traffic sign": 0.0208, "Acc.vegetation": 0.007, "Acc.terrain": 0.0455, "Acc.sky": 0.0295, "Acc.person": 0.021, "Acc.rider": 0.1121, "Acc.car": 0.1179, "Acc.truck": 0.0407, "Acc.bus": 0.0069, "Acc.train": 0.0151, "Acc.motorcycle": 0.0138, "Acc.bicycle": 0.0545, "data_time": 0.00768, "decode.loss_seg": 2.94466, "decode.acc_seg": 5.26786, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26584, "loss": 4.12262, "time": 0.50174}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.00529, "memory": 18769, "data_time": 5.10162, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.25915, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.25945, "loss": 4.12261, "time": 5.57601}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.00517, "memory": 18769, "data_time": 0.0074, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.26091, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26915, "loss": 4.1226, "time": 0.48268}
{"mode": "train", "epoch": 2, "iter": 2150, "lr": 0.00505, "memory": 18769, "data_time": 0.00739, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.25875, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26127, "loss": 4.12259, "time": 0.48281}
{"mode": "train", "epoch": 2, "iter": 2200, "lr": 0.00493, "memory": 18769, "data_time": 0.00775, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26354, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26256, "loss": 4.12257, "time": 0.48311}
{"mode": "train", "epoch": 2, "iter": 2250, "lr": 0.00481, "memory": 18769, "data_time": 0.00755, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.25823, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26763, "loss": 4.12257, "time": 0.48298}
{"mode": "train", "epoch": 2, "iter": 2300, "lr": 0.00469, "memory": 18769, "data_time": 0.0075, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26907, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26001, "loss": 4.12256, "time": 0.48361}
{"mode": "train", "epoch": 2, "iter": 2350, "lr": 0.00456, "memory": 18769, "data_time": 0.00741, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26604, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26297, "loss": 4.12255, "time": 0.48272}
{"mode": "train", "epoch": 2, "iter": 2400, "lr": 0.00444, "memory": 18769, "data_time": 0.00737, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26682, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26479, "loss": 4.12254, "time": 0.48304}
{"mode": "train", "epoch": 2, "iter": 2450, "lr": 0.00432, "memory": 18769, "data_time": 0.00754, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26249, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26543, "loss": 4.12253, "time": 0.48389}
{"mode": "train", "epoch": 2, "iter": 2500, "lr": 0.0042, "memory": 18769, "data_time": 0.00765, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26766, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26656, "loss": 4.12252, "time": 0.48283}
{"mode": "train", "epoch": 2, "iter": 2550, "lr": 0.00407, "memory": 18769, "data_time": 0.00728, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26639, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26608, "loss": 4.12251, "time": 0.483}
{"mode": "train", "epoch": 2, "iter": 2600, "lr": 0.00395, "memory": 18769, "data_time": 0.0209, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.2654, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26219, "loss": 4.12251, "time": 0.55347}
{"mode": "train", "epoch": 2, "iter": 2650, "lr": 0.00383, "memory": 18769, "data_time": 0.008, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26189, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26644, "loss": 4.12251, "time": 0.63192}
{"mode": "train", "epoch": 2, "iter": 2700, "lr": 0.0037, "memory": 18769, "data_time": 0.0285, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26295, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26679, "loss": 4.1225, "time": 0.61814}
{"mode": "train", "epoch": 2, "iter": 2750, "lr": 0.00358, "memory": 18769, "data_time": 0.01082, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26386, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26499, "loss": 4.12249, "time": 0.58903}
{"mode": "train", "epoch": 2, "iter": 2800, "lr": 0.00345, "memory": 18769, "data_time": 0.00839, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26462, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26565, "loss": 4.12248, "time": 0.50548}
{"mode": "train", "epoch": 2, "iter": 2850, "lr": 0.00333, "memory": 18769, "data_time": 0.00782, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26427, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26017, "loss": 4.12248, "time": 0.48331}
{"mode": "train", "epoch": 2, "iter": 2900, "lr": 0.0032, "memory": 18769, "data_time": 0.00704, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26579, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26592, "loss": 4.12247, "time": 0.48556}
{"mode": "train", "epoch": 2, "iter": 2950, "lr": 0.00307, "memory": 18769, "data_time": 0.00735, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.27237, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26129, "loss": 4.12246, "time": 0.4832}
{"mode": "train", "epoch": 3, "iter": 3000, "lr": 0.00295, "memory": 18769, "data_time": 0.009, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26102, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26625, "loss": 4.12246, "time": 0.48487}
{"mode": "train", "epoch": 3, "iter": 3050, "lr": 0.00282, "memory": 18769, "data_time": 0.00738, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26606, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26877, "loss": 4.12246, "time": 0.48853}
{"mode": "train", "epoch": 3, "iter": 3100, "lr": 0.00269, "memory": 18769, "data_time": 0.00755, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26716, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.25932, "loss": 4.12246, "time": 0.48939}
{"mode": "train", "epoch": 3, "iter": 3150, "lr": 0.00256, "memory": 18769, "data_time": 0.00716, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.25988, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26416, "loss": 4.12246, "time": 0.48343}
{"mode": "train", "epoch": 3, "iter": 3200, "lr": 0.00243, "memory": 18769, "data_time": 0.00728, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26798, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.27133, "loss": 4.12245, "time": 0.48334}
{"mode": "train", "epoch": 3, "iter": 3250, "lr": 0.0023, "memory": 18769, "data_time": 0.00746, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26624, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26344, "loss": 4.12245, "time": 0.48324}
{"mode": "train", "epoch": 3, "iter": 3300, "lr": 0.00217, "memory": 18769, "data_time": 0.00727, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26624, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.25657, "loss": 4.12244, "time": 0.48203}
{"mode": "train", "epoch": 3, "iter": 3350, "lr": 0.00203, "memory": 18769, "data_time": 0.00745, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26858, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2621, "loss": 4.12244, "time": 0.48245}
{"mode": "train", "epoch": 3, "iter": 3400, "lr": 0.0019, "memory": 18769, "data_time": 0.00732, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.27337, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2683, "loss": 4.12244, "time": 0.48264}
{"mode": "train", "epoch": 3, "iter": 3450, "lr": 0.00176, "memory": 18769, "data_time": 0.00737, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26517, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.25791, "loss": 4.12244, "time": 0.48297}
{"mode": "train", "epoch": 3, "iter": 3500, "lr": 0.00163, "memory": 18769, "data_time": 0.0073, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26634, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26847, "loss": 4.12244, "time": 0.4827}
{"mode": "train", "epoch": 3, "iter": 3550, "lr": 0.00149, "memory": 18769, "data_time": 0.00726, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26867, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26671, "loss": 4.12243, "time": 0.4828}
{"mode": "train", "epoch": 3, "iter": 3600, "lr": 0.00135, "memory": 18769, "data_time": 0.00743, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.2617, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26258, "loss": 4.12243, "time": 0.48249}
{"mode": "train", "epoch": 3, "iter": 3650, "lr": 0.00121, "memory": 18769, "data_time": 0.00746, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.25951, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26761, "loss": 4.12243, "time": 0.48297}
{"mode": "train", "epoch": 3, "iter": 3700, "lr": 0.00106, "memory": 18769, "data_time": 0.00743, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.25938, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26618, "loss": 4.12243, "time": 0.48254}
{"mode": "train", "epoch": 3, "iter": 3750, "lr": 0.00092, "memory": 18769, "data_time": 0.00739, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.27176, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26496, "loss": 4.12242, "time": 0.48326}
{"mode": "train", "epoch": 3, "iter": 3800, "lr": 0.00077, "memory": 18769, "data_time": 0.0073, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.25981, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26611, "loss": 4.12243, "time": 0.48285}
{"mode": "train", "epoch": 3, "iter": 3850, "lr": 0.00062, "memory": 18769, "data_time": 0.00732, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26266, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26146, "loss": 4.12242, "time": 0.48249}
{"mode": "train", "epoch": 3, "iter": 3900, "lr": 0.00046, "memory": 18769, "data_time": 0.00735, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26605, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26575, "loss": 4.12242, "time": 0.48253}
{"mode": "train", "epoch": 3, "iter": 3950, "lr": 0.0003, "memory": 18769, "data_time": 0.00747, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26592, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26112, "loss": 4.12242, "time": 0.48293}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00011, "memory": 18769, "aAcc": 0.0527, "mIoU": 0.0236, "mAcc": 0.0527, "IoU.road": 0.0212, "IoU.sidewalk": 0.0257, "IoU.building": 0.0352, "IoU.wall": 0.0158, "IoU.fence": 0.0404, "IoU.pole": 0.0206, "IoU.traffic light": 0.0346, "IoU.traffic sign": 0.0231, "IoU.vegetation": 0.0058, "IoU.terrain": 0.0277, "IoU.sky": 0.018, "IoU.person": 0.0151, "IoU.rider": 0.0389, "IoU.car": 0.0349, "IoU.truck": 0.021, "IoU.bus": 0.0056, "IoU.train": 0.0143, "IoU.motorcycle": 0.022, "IoU.bicycle": 0.029, "Acc.road": 0.0344, "Acc.sidewalk": 0.0476, "Acc.building": 0.0957, "Acc.wall": 0.022, "Acc.fence": 0.1478, "Acc.pole": 0.0327, "Acc.traffic light": 0.0912, "Acc.traffic sign": 0.0395, "Acc.vegetation": 0.0065, "Acc.terrain": 0.0552, "Acc.sky": 0.0266, "Acc.person": 0.0208, "Acc.rider": 0.1305, "Acc.car": 0.094, "Acc.truck": 0.0338, "Acc.bus": 0.0062, "Acc.train": 0.0192, "Acc.motorcycle": 0.0365, "Acc.bicycle": 0.0608, "data_time": 0.00754, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26957, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26432, "loss": 4.12241, "time": 0.49599}
