{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "upernet_r50_512x1024_4k_dummy_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 1, 1),\n        strides=(1, 2, 2, 2),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='UPerHead',\n        in_channels=[256, 512, 1024, 2048],\n        in_index=[0, 1, 2, 3],\n        pool_scales=(1, 2, 3, 6),\n        channels=512,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = 'work_dirs_2node_8gpu/upernet_r50_512x1024_4k_dummy_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 19973, "data_time": 0.03256, "decode.loss_seg": 2.95265, "decode.acc_seg": 5.26355, "aux.loss_seg": 1.17914, "aux.acc_seg": 5.26393, "loss": 4.13179, "time": 1.59085}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 19973, "data_time": 0.01109, "decode.loss_seg": 2.95023, "decode.acc_seg": 5.26455, "aux.loss_seg": 1.17885, "aux.acc_seg": 5.26638, "loss": 4.12908, "time": 0.60578}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 19973, "data_time": 0.01236, "decode.loss_seg": 2.9491, "decode.acc_seg": 5.2619, "aux.loss_seg": 1.17876, "aux.acc_seg": 5.26174, "loss": 4.12787, "time": 0.55001}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 19973, "data_time": 0.01571, "decode.loss_seg": 2.94827, "decode.acc_seg": 5.26364, "aux.loss_seg": 1.17869, "aux.acc_seg": 5.26491, "loss": 4.12695, "time": 0.58538}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 19973, "data_time": 0.01113, "decode.loss_seg": 2.94762, "decode.acc_seg": 5.26318, "aux.loss_seg": 1.17862, "aux.acc_seg": 5.26437, "loss": 4.12624, "time": 0.67942}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 19973, "data_time": 0.0114, "decode.loss_seg": 2.94714, "decode.acc_seg": 5.26209, "aux.loss_seg": 1.17856, "aux.acc_seg": 5.26456, "loss": 4.1257, "time": 0.67354}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 19973, "data_time": 0.02212, "decode.loss_seg": 2.94671, "decode.acc_seg": 5.26347, "aux.loss_seg": 1.17851, "aux.acc_seg": 5.26222, "loss": 4.12521, "time": 0.63459}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 19973, "data_time": 0.01445, "decode.loss_seg": 2.94637, "decode.acc_seg": 5.26389, "aux.loss_seg": 1.17846, "aux.acc_seg": 5.26357, "loss": 4.12483, "time": 0.65651}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 19973, "data_time": 0.01133, "decode.loss_seg": 2.94609, "decode.acc_seg": 5.2648, "aux.loss_seg": 1.17841, "aux.acc_seg": 5.26271, "loss": 4.12451, "time": 0.58409}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 19973, "data_time": 0.01209, "decode.loss_seg": 2.94587, "decode.acc_seg": 5.26341, "aux.loss_seg": 1.17837, "aux.acc_seg": 5.26367, "loss": 4.12423, "time": 0.6428}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 19973, "data_time": 0.01213, "decode.loss_seg": 2.94567, "decode.acc_seg": 5.26385, "aux.loss_seg": 1.17833, "aux.acc_seg": 5.26579, "loss": 4.124, "time": 0.5843}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 19973, "data_time": 0.01454, "decode.loss_seg": 2.94551, "decode.acc_seg": 5.26243, "aux.loss_seg": 1.17829, "aux.acc_seg": 5.26405, "loss": 4.1238, "time": 0.66674}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 19973, "data_time": 0.0113, "decode.loss_seg": 2.94537, "decode.acc_seg": 5.26304, "aux.loss_seg": 1.17826, "aux.acc_seg": 5.26417, "loss": 4.12363, "time": 0.55573}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 19973, "data_time": 0.01499, "decode.loss_seg": 2.94525, "decode.acc_seg": 5.26253, "aux.loss_seg": 1.17823, "aux.acc_seg": 5.26509, "loss": 4.12348, "time": 0.61375}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 19973, "data_time": 0.01358, "decode.loss_seg": 2.94515, "decode.acc_seg": 5.26323, "aux.loss_seg": 1.1782, "aux.acc_seg": 5.26309, "loss": 4.12335, "time": 0.60397}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 19973, "data_time": 0.02296, "decode.loss_seg": 2.94507, "decode.acc_seg": 5.26417, "aux.loss_seg": 1.17818, "aux.acc_seg": 5.26242, "loss": 4.12325, "time": 0.56869}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 19973, "data_time": 0.0114, "decode.loss_seg": 2.945, "decode.acc_seg": 5.26379, "aux.loss_seg": 1.17816, "aux.acc_seg": 5.26371, "loss": 4.12316, "time": 0.62196}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 19973, "data_time": 0.01189, "decode.loss_seg": 2.94495, "decode.acc_seg": 5.264, "aux.loss_seg": 1.17814, "aux.acc_seg": 5.26393, "loss": 4.12309, "time": 0.56712}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 19973, "data_time": 0.01563, "decode.loss_seg": 2.9449, "decode.acc_seg": 5.26212, "aux.loss_seg": 1.17812, "aux.acc_seg": 5.26455, "loss": 4.12302, "time": 0.59206}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 19973, "data_time": 0.01225, "decode.loss_seg": 2.94486, "decode.acc_seg": 5.26251, "aux.loss_seg": 1.17811, "aux.acc_seg": 5.26268, "loss": 4.12297, "time": 0.62682}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 19973, "data_time": 0.01139, "decode.loss_seg": 2.94483, "decode.acc_seg": 5.26306, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.26312, "loss": 4.12292, "time": 0.59706}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 19973, "data_time": 0.01229, "decode.loss_seg": 2.94479, "decode.acc_seg": 5.26304, "aux.loss_seg": 1.17808, "aux.acc_seg": 5.26319, "loss": 4.12287, "time": 0.6833}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 19973, "data_time": 0.01404, "decode.loss_seg": 2.94477, "decode.acc_seg": 5.26323, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26351, "loss": 4.12283, "time": 0.70368}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 19973, "data_time": 0.01193, "decode.loss_seg": 2.94474, "decode.acc_seg": 5.26354, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26227, "loss": 4.1228, "time": 0.60854}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 19973, "data_time": 0.01218, "decode.loss_seg": 2.94472, "decode.acc_seg": 5.26236, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26196, "loss": 4.12277, "time": 0.61574}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 19973, "data_time": 0.01345, "decode.loss_seg": 2.9447, "decode.acc_seg": 5.26154, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.2626, "loss": 4.12274, "time": 0.57178}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 19973, "data_time": 0.01349, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26374, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26239, "loss": 4.12271, "time": 0.60555}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 19973, "data_time": 0.01235, "decode.loss_seg": 2.94466, "decode.acc_seg": 5.26325, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26301, "loss": 4.12268, "time": 0.53303}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 19973, "data_time": 0.01181, "decode.loss_seg": 2.94466, "decode.acc_seg": 5.26466, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26256, "loss": 4.12266, "time": 0.62259}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 19973, "data_time": 0.01578, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26424, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26087, "loss": 4.12265, "time": 0.64623}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 19973, "data_time": 0.01134, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26476, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26195, "loss": 4.12262, "time": 0.52812}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 19973, "data_time": 0.01178, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26342, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26196, "loss": 4.12261, "time": 0.63468}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 19973, "data_time": 0.01214, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.2631, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26414, "loss": 4.12259, "time": 0.58966}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 19973, "data_time": 0.01607, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26069, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26348, "loss": 4.12257, "time": 0.61025}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 19973, "data_time": 0.01128, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26317, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26427, "loss": 4.12257, "time": 0.59306}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 19973, "data_time": 0.01188, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26421, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26146, "loss": 4.12255, "time": 0.6685}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 19973, "data_time": 0.01214, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26314, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26294, "loss": 4.12254, "time": 0.72683}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 19973, "data_time": 0.01544, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26345, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26054, "loss": 4.12253, "time": 0.5944}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 19973, "data_time": 0.01156, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26415, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26344, "loss": 4.12252, "time": 0.59395}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 19973, "aAcc": 0.0527, "mIoU": 0.0265, "mAcc": 0.0527, "IoU.road": 0.0286, "IoU.sidewalk": 0.0179, "IoU.building": 0.025, "IoU.wall": 0.0269, "IoU.fence": 0.024, "IoU.pole": 0.0252, "IoU.traffic light": 0.023, "IoU.traffic sign": 0.0334, "IoU.vegetation": 0.0244, "IoU.terrain": 0.0316, "IoU.sky": 0.0286, "IoU.person": 0.0299, "IoU.rider": 0.0338, "IoU.car": 0.0277, "IoU.truck": 0.0246, "IoU.bus": 0.0272, "IoU.train": 0.0237, "IoU.motorcycle": 0.0238, "IoU.bicycle": 0.0251, "Acc.road": 0.0587, "Acc.sidewalk": 0.0265, "Acc.building": 0.0455, "Acc.wall": 0.0523, "Acc.fence": 0.0423, "Acc.pole": 0.0463, "Acc.traffic light": 0.0393, "Acc.traffic sign": 0.0833, "Acc.vegetation": 0.0434, "Acc.terrain": 0.0731, "Acc.sky": 0.0588, "Acc.person": 0.0642, "Acc.rider": 0.0863, "Acc.car": 0.055, "Acc.truck": 0.044, "Acc.bus": 0.0532, "Acc.train": 0.0413, "Acc.motorcycle": 0.0416, "Acc.bicycle": 0.0457, "data_time": 0.01231, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26224, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26304, "loss": 4.12251, "time": 0.72191}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 19973, "data_time": 2.07303, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26255, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26308, "loss": 4.1225, "time": 2.67094}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 19973, "data_time": 0.01333, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26171, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26336, "loss": 4.12249, "time": 0.55196}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 19973, "data_time": 0.01185, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26249, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26353, "loss": 4.12248, "time": 0.52896}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 19973, "data_time": 0.01153, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26382, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26519, "loss": 4.12248, "time": 0.62023}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 19973, "data_time": 0.03142, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26682, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26334, "loss": 4.12247, "time": 0.63634}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 19973, "data_time": 0.02033, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26366, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26466, "loss": 4.12246, "time": 0.57756}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 19973, "data_time": 0.01259, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26496, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26059, "loss": 4.12246, "time": 0.61714}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 19973, "data_time": 0.01191, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.2623, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26246, "loss": 4.12245, "time": 0.5783}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 19973, "data_time": 0.01487, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26363, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.264, "loss": 4.12245, "time": 0.61016}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 19973, "data_time": 0.0113, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26361, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26203, "loss": 4.12244, "time": 0.59729}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 19973, "data_time": 0.01109, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2644, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26235, "loss": 4.12243, "time": 0.60252}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 19973, "data_time": 0.01198, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26307, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26235, "loss": 4.12243, "time": 0.59088}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 19973, "data_time": 0.01681, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26396, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26157, "loss": 4.12243, "time": 0.64612}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 19973, "data_time": 0.01496, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26237, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26208, "loss": 4.12242, "time": 0.5598}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 19973, "data_time": 0.01071, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26549, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26272, "loss": 4.12242, "time": 0.66758}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 19973, "data_time": 0.01735, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2637, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26411, "loss": 4.12242, "time": 0.61071}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 19973, "data_time": 0.01136, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26302, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26424, "loss": 4.12241, "time": 0.59076}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 19973, "data_time": 0.01163, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26328, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.2625, "loss": 4.12241, "time": 0.57838}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 19973, "data_time": 0.01216, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.2636, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26467, "loss": 4.12241, "time": 0.54822}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 19973, "data_time": 0.01573, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26453, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26209, "loss": 4.1224, "time": 0.60391}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 19973, "data_time": 0.01329, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26309, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26127, "loss": 4.1224, "time": 0.66087}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 19973, "data_time": 0.01149, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26158, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26388, "loss": 4.1224, "time": 0.56329}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 19973, "data_time": 0.01185, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.2631, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26508, "loss": 4.1224, "time": 0.67989}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 19973, "data_time": 0.01566, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26227, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26268, "loss": 4.1224, "time": 0.6229}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 19973, "data_time": 0.01171, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26462, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2622, "loss": 4.1224, "time": 0.5533}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 19973, "data_time": 0.01134, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26369, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26472, "loss": 4.12239, "time": 0.50777}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 19973, "data_time": 0.01505, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.2613, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26329, "loss": 4.12239, "time": 0.62468}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 19973, "data_time": 0.01157, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26207, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26202, "loss": 4.12239, "time": 0.57683}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 19973, "data_time": 0.01205, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26309, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26232, "loss": 4.12239, "time": 0.61513}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 19973, "data_time": 0.01139, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26481, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26288, "loss": 4.12238, "time": 0.56896}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 19973, "data_time": 0.01816, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26236, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26385, "loss": 4.12238, "time": 0.58271}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 19973, "data_time": 0.0122, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26514, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26361, "loss": 4.12238, "time": 0.68117}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 19973, "data_time": 0.01193, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26332, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26177, "loss": 4.12238, "time": 0.57882}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 19973, "data_time": 0.01192, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26137, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26404, "loss": 4.12238, "time": 0.62891}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 19973, "data_time": 0.01357, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26194, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26346, "loss": 4.12238, "time": 0.58713}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 19973, "data_time": 0.01122, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26409, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2645, "loss": 4.12238, "time": 0.52881}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 19973, "data_time": 0.01223, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26441, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26346, "loss": 4.12238, "time": 0.64097}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 19973, "data_time": 0.01146, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26425, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26393, "loss": 4.12237, "time": 0.56358}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 19973, "data_time": 0.01552, "decode.loss_seg": 2.94449, "decode.acc_seg": 5.26504, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2633, "loss": 4.12238, "time": 0.59509}
