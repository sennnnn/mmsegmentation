{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='DepthwiseSeparableASPPHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        dilations=(1, 12, 24, 36),\n        c1_in_channels=256,\n        c1_channels=48,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = 'work_dirs_2node_8gpu/deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18770, "data_time": 0.01549, "decode.loss_seg": 2.95092, "decode.acc_seg": 5.26418, "aux.loss_seg": 1.17926, "aux.acc_seg": 5.265, "loss": 4.13018, "time": 1.0295}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18770, "data_time": 0.01322, "decode.loss_seg": 2.94896, "decode.acc_seg": 5.26427, "aux.loss_seg": 1.17895, "aux.acc_seg": 5.26405, "loss": 4.12791, "time": 0.64316}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18770, "data_time": 0.01306, "decode.loss_seg": 2.94807, "decode.acc_seg": 5.26252, "aux.loss_seg": 1.17885, "aux.acc_seg": 5.26316, "loss": 4.12691, "time": 0.65139}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 18770, "data_time": 0.01376, "decode.loss_seg": 2.94745, "decode.acc_seg": 5.26412, "aux.loss_seg": 1.17876, "aux.acc_seg": 5.26222, "loss": 4.12621, "time": 0.72551}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 18770, "data_time": 0.01291, "decode.loss_seg": 2.94699, "decode.acc_seg": 5.26433, "aux.loss_seg": 1.17868, "aux.acc_seg": 5.26401, "loss": 4.12568, "time": 0.74414}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 18770, "data_time": 0.01114, "decode.loss_seg": 2.94664, "decode.acc_seg": 5.26308, "aux.loss_seg": 1.17862, "aux.acc_seg": 5.26265, "loss": 4.12526, "time": 0.72577}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 18770, "data_time": 0.01154, "decode.loss_seg": 2.94636, "decode.acc_seg": 5.26237, "aux.loss_seg": 1.17857, "aux.acc_seg": 5.2629, "loss": 4.12493, "time": 0.63314}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 18770, "data_time": 0.01439, "decode.loss_seg": 2.94614, "decode.acc_seg": 5.26201, "aux.loss_seg": 1.17851, "aux.acc_seg": 5.26395, "loss": 4.12465, "time": 0.67785}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 18770, "data_time": 0.01161, "decode.loss_seg": 2.94595, "decode.acc_seg": 5.26455, "aux.loss_seg": 1.17846, "aux.acc_seg": 5.26254, "loss": 4.12442, "time": 0.64978}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 18770, "data_time": 0.01149, "decode.loss_seg": 2.94579, "decode.acc_seg": 5.26265, "aux.loss_seg": 1.17842, "aux.acc_seg": 5.26241, "loss": 4.12422, "time": 0.75488}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 18770, "data_time": 0.01133, "decode.loss_seg": 2.94566, "decode.acc_seg": 5.26344, "aux.loss_seg": 1.17838, "aux.acc_seg": 5.26366, "loss": 4.12404, "time": 0.67095}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 18770, "data_time": 0.01371, "decode.loss_seg": 2.94555, "decode.acc_seg": 5.26383, "aux.loss_seg": 1.17834, "aux.acc_seg": 5.26445, "loss": 4.1239, "time": 0.7002}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 18770, "data_time": 0.01159, "decode.loss_seg": 2.94545, "decode.acc_seg": 5.2644, "aux.loss_seg": 1.17831, "aux.acc_seg": 5.26437, "loss": 4.12376, "time": 0.74612}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 18770, "data_time": 0.01538, "decode.loss_seg": 2.94537, "decode.acc_seg": 5.26269, "aux.loss_seg": 1.17829, "aux.acc_seg": 5.26344, "loss": 4.12365, "time": 0.76775}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 18770, "data_time": 0.01497, "decode.loss_seg": 2.94529, "decode.acc_seg": 5.26249, "aux.loss_seg": 1.17826, "aux.acc_seg": 5.2631, "loss": 4.12355, "time": 0.66483}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 18770, "data_time": 0.01405, "decode.loss_seg": 2.94522, "decode.acc_seg": 5.26467, "aux.loss_seg": 1.17823, "aux.acc_seg": 5.26436, "loss": 4.12345, "time": 0.66481}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 18770, "data_time": 0.01201, "decode.loss_seg": 2.94517, "decode.acc_seg": 5.26159, "aux.loss_seg": 1.17821, "aux.acc_seg": 5.26499, "loss": 4.12337, "time": 0.6478}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 18770, "data_time": 0.01119, "decode.loss_seg": 2.94511, "decode.acc_seg": 5.26288, "aux.loss_seg": 1.17818, "aux.acc_seg": 5.2639, "loss": 4.12329, "time": 0.63651}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 18770, "data_time": 0.01464, "decode.loss_seg": 2.94507, "decode.acc_seg": 5.26261, "aux.loss_seg": 1.17816, "aux.acc_seg": 5.26342, "loss": 4.12323, "time": 0.74864}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 18770, "data_time": 0.01412, "decode.loss_seg": 2.94502, "decode.acc_seg": 5.2631, "aux.loss_seg": 1.17815, "aux.acc_seg": 5.26342, "loss": 4.12317, "time": 0.67705}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 18770, "data_time": 0.01185, "decode.loss_seg": 2.94499, "decode.acc_seg": 5.2641, "aux.loss_seg": 1.17813, "aux.acc_seg": 5.26368, "loss": 4.12311, "time": 0.70374}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 18770, "data_time": 0.01168, "decode.loss_seg": 2.94495, "decode.acc_seg": 5.26444, "aux.loss_seg": 1.17811, "aux.acc_seg": 5.26299, "loss": 4.12306, "time": 0.68724}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 18770, "data_time": 0.01499, "decode.loss_seg": 2.94492, "decode.acc_seg": 5.26351, "aux.loss_seg": 1.1781, "aux.acc_seg": 5.2644, "loss": 4.12302, "time": 0.71542}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 18770, "data_time": 0.0102, "decode.loss_seg": 2.94489, "decode.acc_seg": 5.26226, "aux.loss_seg": 1.17808, "aux.acc_seg": 5.26241, "loss": 4.12298, "time": 0.70098}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 18770, "data_time": 0.01049, "decode.loss_seg": 2.94487, "decode.acc_seg": 5.26354, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26342, "loss": 4.12293, "time": 0.68645}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 18770, "data_time": 0.01151, "decode.loss_seg": 2.94484, "decode.acc_seg": 5.26316, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26409, "loss": 4.1229, "time": 0.68225}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 18770, "data_time": 0.01448, "decode.loss_seg": 2.94482, "decode.acc_seg": 5.26329, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26303, "loss": 4.12287, "time": 0.74715}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 18770, "data_time": 0.01057, "decode.loss_seg": 2.9448, "decode.acc_seg": 5.26343, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26233, "loss": 4.12283, "time": 0.80677}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 18770, "data_time": 0.01119, "decode.loss_seg": 2.94478, "decode.acc_seg": 5.26208, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26372, "loss": 4.1228, "time": 0.75123}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 18770, "data_time": 0.01396, "decode.loss_seg": 2.94476, "decode.acc_seg": 5.26566, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.2624, "loss": 4.12278, "time": 0.68532}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 18770, "data_time": 0.01055, "decode.loss_seg": 2.94475, "decode.acc_seg": 5.26404, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26363, "loss": 4.12275, "time": 0.70869}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 18770, "data_time": 0.01056, "decode.loss_seg": 2.94473, "decode.acc_seg": 5.26442, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26432, "loss": 4.12273, "time": 0.68387}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 18770, "data_time": 0.01499, "decode.loss_seg": 2.94472, "decode.acc_seg": 5.26473, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26431, "loss": 4.12271, "time": 0.70255}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 18770, "data_time": 0.06888, "decode.loss_seg": 2.94471, "decode.acc_seg": 5.26383, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26398, "loss": 4.12269, "time": 0.86999}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 18770, "data_time": 0.01546, "decode.loss_seg": 2.9447, "decode.acc_seg": 5.26242, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26393, "loss": 4.12268, "time": 0.65521}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 18770, "data_time": 0.01047, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.2648, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26233, "loss": 4.12266, "time": 0.72595}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 18770, "data_time": 0.01131, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26135, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.2632, "loss": 4.12264, "time": 0.703}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 18770, "data_time": 0.01489, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26346, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26374, "loss": 4.12263, "time": 0.71263}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 18770, "data_time": 0.01091, "decode.loss_seg": 2.94466, "decode.acc_seg": 5.26421, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26306, "loss": 4.12261, "time": 0.71396}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 18770, "aAcc": 0.0526, "mIoU": 0.0266, "mAcc": 0.0526, "IoU.road": 0.0233, "IoU.sidewalk": 0.0166, "IoU.building": 0.0223, "IoU.wall": 0.0244, "IoU.fence": 0.0248, "IoU.pole": 0.0343, "IoU.traffic light": 0.0276, "IoU.traffic sign": 0.0304, "IoU.vegetation": 0.0273, "IoU.terrain": 0.0295, "IoU.sky": 0.0284, "IoU.person": 0.0275, "IoU.rider": 0.0286, "IoU.car": 0.0244, "IoU.truck": 0.0297, "IoU.bus": 0.0274, "IoU.train": 0.0247, "IoU.motorcycle": 0.0272, "IoU.bicycle": 0.0269, "Acc.road": 0.0401, "Acc.sidewalk": 0.0237, "Acc.building": 0.0372, "Acc.wall": 0.0435, "Acc.fence": 0.0448, "Acc.pole": 0.0895, "Acc.traffic light": 0.0547, "Acc.traffic sign": 0.0674, "Acc.vegetation": 0.0538, "Acc.terrain": 0.0624, "Acc.sky": 0.0584, "Acc.person": 0.0544, "Acc.rider": 0.0592, "Acc.car": 0.0435, "Acc.truck": 0.0638, "Acc.bus": 0.0541, "Acc.train": 0.0442, "Acc.motorcycle": 0.0534, "Acc.bicycle": 0.0523, "data_time": 0.01332, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.26413, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.2647, "loss": 4.12259, "time": 0.75968}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 18770, "data_time": 2.16705, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26332, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26251, "loss": 4.12259, "time": 2.87281}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 18770, "data_time": 0.01155, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26455, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26481, "loss": 4.12257, "time": 0.65862}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 18770, "data_time": 0.01214, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26347, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26285, "loss": 4.12256, "time": 0.68757}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 18770, "data_time": 0.01177, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26369, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26327, "loss": 4.12255, "time": 0.71538}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 18770, "data_time": 0.01362, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26352, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26478, "loss": 4.12254, "time": 0.6573}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 18770, "data_time": 0.01054, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26366, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26467, "loss": 4.12253, "time": 0.7442}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 18770, "data_time": 0.01118, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26461, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26619, "loss": 4.12253, "time": 0.76136}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 18770, "data_time": 0.01121, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26367, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26319, "loss": 4.12252, "time": 0.74366}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 18770, "data_time": 0.01404, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26311, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26424, "loss": 4.12251, "time": 0.71589}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 18770, "data_time": 0.01501, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26227, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26341, "loss": 4.12251, "time": 0.76457}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 18770, "data_time": 0.01109, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26236, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26478, "loss": 4.1225, "time": 0.63708}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 18770, "data_time": 0.01073, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26367, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26495, "loss": 4.12249, "time": 0.66179}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 18770, "data_time": 0.01429, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26346, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.2631, "loss": 4.12248, "time": 0.66388}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 18770, "data_time": 0.0112, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26344, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26326, "loss": 4.12248, "time": 0.684}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 18770, "data_time": 0.01207, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26262, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.2619, "loss": 4.12247, "time": 0.66942}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 18770, "data_time": 0.0134, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26159, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26218, "loss": 4.12247, "time": 0.70392}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 18770, "data_time": 0.01204, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26172, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26425, "loss": 4.12246, "time": 0.68939}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 18770, "data_time": 0.01066, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26246, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26306, "loss": 4.12246, "time": 0.68657}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 18770, "data_time": 0.01052, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26222, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.264, "loss": 4.12246, "time": 0.63456}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 18770, "data_time": 0.01214, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26208, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26341, "loss": 4.12245, "time": 0.64013}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 18770, "data_time": 0.01081, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26463, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26368, "loss": 4.12245, "time": 0.74003}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 18770, "data_time": 0.01028, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26251, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26398, "loss": 4.12244, "time": 0.76245}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 18770, "data_time": 0.01098, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26348, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2644, "loss": 4.12244, "time": 0.74014}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 18770, "data_time": 0.01393, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26143, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2623, "loss": 4.12244, "time": 0.62328}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 18770, "data_time": 0.01091, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26161, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26392, "loss": 4.12243, "time": 0.74208}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 18770, "data_time": 0.01047, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26307, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26296, "loss": 4.12243, "time": 0.69268}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 18770, "data_time": 0.01433, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26347, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26264, "loss": 4.12243, "time": 0.74223}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 18770, "data_time": 0.0117, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26269, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26459, "loss": 4.12243, "time": 0.73737}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 18770, "data_time": 0.0111, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.2636, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26427, "loss": 4.12243, "time": 0.67328}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 18770, "data_time": 0.0105, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.2649, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26382, "loss": 4.12242, "time": 0.76604}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 18770, "data_time": 0.01362, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26217, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26374, "loss": 4.12242, "time": 0.76288}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 18770, "data_time": 0.01155, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26216, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26341, "loss": 4.12242, "time": 0.77456}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 18770, "data_time": 0.01059, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26348, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2631, "loss": 4.12242, "time": 0.77102}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 18770, "data_time": 0.01161, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.2642, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26321, "loss": 4.12242, "time": 0.70228}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 18770, "data_time": 0.01509, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26323, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26254, "loss": 4.12242, "time": 0.7855}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 18770, "data_time": 0.01066, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26086, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26312, "loss": 4.12242, "time": 0.76516}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 18770, "data_time": 0.01058, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26369, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26346, "loss": 4.12242, "time": 0.67836}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 18770, "data_time": 0.01025, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26404, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26346, "loss": 4.12241, "time": 0.7739}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 18770, "data_time": 0.01298, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26481, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.2622, "loss": 4.12241, "time": 0.75437}
