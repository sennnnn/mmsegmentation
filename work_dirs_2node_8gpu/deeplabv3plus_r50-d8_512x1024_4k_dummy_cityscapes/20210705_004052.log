2021-07-05 00:40:54,780 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3: Tesla V100-SXM2-32GB
CUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5
NVCC: Cuda compilation tools, release 10.1, V10.1.243
GCC: gcc (GCC) 5.4.0
PyTorch: 1.8.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON,

TorchVision: 0.9.0
OpenCV: 4.5.1
MMCV: 1.3.8
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.1
MMSegmentation: 0.14.1+9988853
------------------------------------------------------------

2021-07-05 00:40:55,171 - mmseg - INFO - Distributed training: True
2021-07-05 00:40:55,779 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained='open-mmlab://resnet50_v1c',
    backbone=dict(
        type='ResNetV1c',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        dilations=(1, 1, 2, 4),
        strides=(1, 2, 1, 1),
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        style='pytorch',
        contract_dilation=True),
    decode_head=dict(
        type='DepthwiseSeparableASPPHead',
        in_channels=2048,
        in_index=3,
        channels=512,
        dilations=(1, 12, 24, 36),
        c1_in_channels=256,
        c1_channels=48,
        dropout_ratio=0.1,
        num_classes=19,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        in_channels=1024,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=19,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'DummyCityscapes'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (512, 1024)
train_pipeline = [
    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 1024),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='DummyCityscapes',
        pipeline=[
            dict(
                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='DummyCityscapes',
        pipeline=[
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='DummyCityscapes',
        pipeline=[
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 1024),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
runner = dict(type='IterBasedRunner', max_iters=4000)
checkpoint_config = dict(by_epoch=False, interval=2000)
evaluation = dict(interval=2000, metric='mIoU')
work_dir = 'work_dirs_2node_8gpu/deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes'
gpu_ids = range(0, 1)

2021-07-05 00:41:05,728 - mmseg - INFO - EncoderDecoder(
  (backbone): ResNetV1c(
    (stem): Sequential(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (7): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace=True)
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Pretrained', 'checkpoint': 'open-mmlab://resnet50_v1c'}
  (decode_head): DepthwiseSeparableASPPHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss()
    (conv_seg): Conv2d(512, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (image_pool): Sequential(
      (0): AdaptiveAvgPool2d(output_size=1)
      (1): ConvModule(
        (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (aspp_modules): DepthwiseSeparableASPPModule(
      (0): ConvModule(
        (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (2): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(24, 24), dilation=(24, 24), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (3): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(36, 36), dilation=(36, 36), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    (bottleneck): ConvModule(
      (conv): Conv2d(2560, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (c1_bottleneck): ConvModule(
      (conv): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): SyncBatchNorm(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (sep_bottleneck): Sequential(
      (0): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(560, 560, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=560, bias=False)
          (bn): SyncBatchNorm(560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(560, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (1): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): CrossEntropyLoss()
    (conv_seg): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
)
2021-07-05 00:41:07,990 - mmseg - INFO - Start running, host: chengzesen@SH-IDC1-10-198-4-71, work_dir: /mnt/cache/chengzesen/workspace/mmsegmentation/work_dirs_2node_8gpu/deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes
2021-07-05 00:41:07,990 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook
(NORMAL      ) CheckpointHook
(NORMAL      ) DistEvalHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook
(NORMAL      ) IterTimerHook
(NORMAL      ) DistEvalHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook
(NORMAL      ) IterTimerHook
(NORMAL      ) DistEvalHook
 --------------------
after_train_iter:
(ABOVE_NORMAL) OptimizerHook
(NORMAL      ) CheckpointHook
(NORMAL      ) IterTimerHook
(NORMAL      ) DistEvalHook
(VERY_LOW    ) TextLoggerHook
 --------------------
after_train_epoch:
(NORMAL      ) CheckpointHook
(NORMAL      ) DistEvalHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_val_epoch:
(NORMAL      ) IterTimerHook
(VERY_LOW    ) TextLoggerHook
 --------------------
before_val_iter:
(NORMAL      ) IterTimerHook
 --------------------
after_val_iter:
(NORMAL      ) IterTimerHook
 --------------------
after_val_epoch:
(VERY_LOW    ) TextLoggerHook
 --------------------
2021-07-05 00:41:07,991 - mmseg - INFO - workflow: [('train', 1)], max: 4000 iters
2021-07-05 00:42:47,909 - mmseg - INFO - Iter [50/4000]	lr: 9.891e-03, eta: 1:07:46, time: 1.029, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9509, decode.acc_seg: 5.2642, aux.loss_seg: 1.1793, aux.acc_seg: 5.2650, loss: 4.1302
2021-07-05 00:43:20,037 - mmseg - INFO - Iter [100/4000]	lr: 9.779e-03, eta: 0:54:21, time: 0.643, data_time: 0.013, memory: 18770, decode.loss_seg: 2.9490, decode.acc_seg: 5.2643, aux.loss_seg: 1.1789, aux.acc_seg: 5.2640, loss: 4.1279
2021-07-05 00:43:52,616 - mmseg - INFO - Iter [150/4000]	lr: 9.667e-03, eta: 0:49:42, time: 0.651, data_time: 0.013, memory: 18770, decode.loss_seg: 2.9481, decode.acc_seg: 5.2625, aux.loss_seg: 1.1788, aux.acc_seg: 5.2632, loss: 4.1269
2021-07-05 00:44:28,896 - mmseg - INFO - Iter [200/4000]	lr: 9.556e-03, eta: 0:48:17, time: 0.726, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9474, decode.acc_seg: 5.2641, aux.loss_seg: 1.1788, aux.acc_seg: 5.2622, loss: 4.1262
2021-07-05 00:45:06,106 - mmseg - INFO - Iter [250/4000]	lr: 9.444e-03, eta: 0:47:25, time: 0.744, data_time: 0.013, memory: 18770, decode.loss_seg: 2.9470, decode.acc_seg: 5.2643, aux.loss_seg: 1.1787, aux.acc_seg: 5.2640, loss: 4.1257
2021-07-05 00:45:42,398 - mmseg - INFO - Iter [300/4000]	lr: 9.331e-03, eta: 0:46:27, time: 0.726, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9466, decode.acc_seg: 5.2631, aux.loss_seg: 1.1786, aux.acc_seg: 5.2627, loss: 4.1253
2021-07-05 00:46:14,060 - mmseg - INFO - Iter [350/4000]	lr: 9.219e-03, eta: 0:44:46, time: 0.633, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9464, decode.acc_seg: 5.2624, aux.loss_seg: 1.1786, aux.acc_seg: 5.2629, loss: 4.1249
2021-07-05 00:46:47,956 - mmseg - INFO - Iter [400/4000]	lr: 9.107e-03, eta: 0:43:43, time: 0.678, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9461, decode.acc_seg: 5.2620, aux.loss_seg: 1.1785, aux.acc_seg: 5.2639, loss: 4.1247
2021-07-05 00:47:20,435 - mmseg - INFO - Iter [450/4000]	lr: 8.994e-03, eta: 0:42:36, time: 0.650, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9460, decode.acc_seg: 5.2646, aux.loss_seg: 1.1785, aux.acc_seg: 5.2625, loss: 4.1244
2021-07-05 00:47:58,163 - mmseg - INFO - Iter [500/4000]	lr: 8.881e-03, eta: 0:42:12, time: 0.755, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9458, decode.acc_seg: 5.2627, aux.loss_seg: 1.1784, aux.acc_seg: 5.2624, loss: 4.1242
2021-07-05 00:48:31,714 - mmseg - INFO - Iter [550/4000]	lr: 8.768e-03, eta: 0:41:19, time: 0.671, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9457, decode.acc_seg: 5.2634, aux.loss_seg: 1.1784, aux.acc_seg: 5.2637, loss: 4.1240
2021-07-05 00:49:06,747 - mmseg - INFO - Iter [600/4000]	lr: 8.655e-03, eta: 0:40:38, time: 0.700, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9456, decode.acc_seg: 5.2638, aux.loss_seg: 1.1783, aux.acc_seg: 5.2644, loss: 4.1239
2021-07-05 00:49:44,040 - mmseg - INFO - Iter [650/4000]	lr: 8.542e-03, eta: 0:40:10, time: 0.746, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9454, decode.acc_seg: 5.2644, aux.loss_seg: 1.1783, aux.acc_seg: 5.2644, loss: 4.1238
2021-07-05 00:50:22,430 - mmseg - INFO - Iter [700/4000]	lr: 8.428e-03, eta: 0:39:45, time: 0.768, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9454, decode.acc_seg: 5.2627, aux.loss_seg: 1.1783, aux.acc_seg: 5.2634, loss: 4.1237
2021-07-05 00:50:55,811 - mmseg - INFO - Iter [750/4000]	lr: 8.315e-03, eta: 0:38:56, time: 0.665, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9453, decode.acc_seg: 5.2625, aux.loss_seg: 1.1783, aux.acc_seg: 5.2631, loss: 4.1235
2021-07-05 00:51:28,916 - mmseg - INFO - Iter [800/4000]	lr: 8.201e-03, eta: 0:38:09, time: 0.665, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9452, decode.acc_seg: 5.2647, aux.loss_seg: 1.1782, aux.acc_seg: 5.2644, loss: 4.1235
2021-07-05 00:52:01,306 - mmseg - INFO - Iter [850/4000]	lr: 8.087e-03, eta: 0:37:21, time: 0.648, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9452, decode.acc_seg: 5.2616, aux.loss_seg: 1.1782, aux.acc_seg: 5.2650, loss: 4.1234
2021-07-05 00:52:33,153 - mmseg - INFO - Iter [900/4000]	lr: 7.973e-03, eta: 0:36:33, time: 0.637, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9451, decode.acc_seg: 5.2629, aux.loss_seg: 1.1782, aux.acc_seg: 5.2639, loss: 4.1233
2021-07-05 00:53:10,551 - mmseg - INFO - Iter [950/4000]	lr: 7.859e-03, eta: 0:36:04, time: 0.749, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9451, decode.acc_seg: 5.2626, aux.loss_seg: 1.1782, aux.acc_seg: 5.2634, loss: 4.1232
2021-07-05 00:53:44,419 - mmseg - INFO - Exp name: deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py
2021-07-05 00:53:44,421 - mmseg - INFO - Iter [1000/4000]	lr: 7.744e-03, eta: 0:35:23, time: 0.677, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9450, decode.acc_seg: 5.2631, aux.loss_seg: 1.1781, aux.acc_seg: 5.2634, loss: 4.1232
2021-07-05 00:54:19,588 - mmseg - INFO - Iter [1050/4000]	lr: 7.629e-03, eta: 0:34:47, time: 0.704, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9450, decode.acc_seg: 5.2641, aux.loss_seg: 1.1781, aux.acc_seg: 5.2637, loss: 4.1231
2021-07-05 00:54:53,973 - mmseg - INFO - Iter [1100/4000]	lr: 7.514e-03, eta: 0:34:09, time: 0.687, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9450, decode.acc_seg: 5.2644, aux.loss_seg: 1.1781, aux.acc_seg: 5.2630, loss: 4.1231
2021-07-05 00:55:29,746 - mmseg - INFO - Iter [1150/4000]	lr: 7.399e-03, eta: 0:33:35, time: 0.715, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9449, decode.acc_seg: 5.2635, aux.loss_seg: 1.1781, aux.acc_seg: 5.2644, loss: 4.1230
2021-07-05 00:56:04,772 - mmseg - INFO - Iter [1200/4000]	lr: 7.284e-03, eta: 0:32:59, time: 0.701, data_time: 0.010, memory: 18770, decode.loss_seg: 2.9449, decode.acc_seg: 5.2623, aux.loss_seg: 1.1781, aux.acc_seg: 5.2624, loss: 4.1230
2021-07-05 00:56:39,105 - mmseg - INFO - Iter [1250/4000]	lr: 7.168e-03, eta: 0:32:21, time: 0.686, data_time: 0.010, memory: 18770, decode.loss_seg: 2.9449, decode.acc_seg: 5.2635, aux.loss_seg: 1.1781, aux.acc_seg: 5.2634, loss: 4.1229
2021-07-05 00:57:13,256 - mmseg - INFO - Iter [1300/4000]	lr: 7.053e-03, eta: 0:31:44, time: 0.682, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9448, decode.acc_seg: 5.2632, aux.loss_seg: 1.1781, aux.acc_seg: 5.2641, loss: 4.1229
2021-07-05 00:57:50,583 - mmseg - INFO - Iter [1350/4000]	lr: 6.937e-03, eta: 0:31:12, time: 0.747, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9448, decode.acc_seg: 5.2633, aux.loss_seg: 1.1780, aux.acc_seg: 5.2630, loss: 4.1229
2021-07-05 00:58:30,926 - mmseg - INFO - Iter [1400/4000]	lr: 6.821e-03, eta: 0:30:46, time: 0.807, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9448, decode.acc_seg: 5.2634, aux.loss_seg: 1.1780, aux.acc_seg: 5.2623, loss: 4.1228
2021-07-05 00:59:08,467 - mmseg - INFO - Iter [1450/4000]	lr: 6.704e-03, eta: 0:30:14, time: 0.751, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9448, decode.acc_seg: 5.2621, aux.loss_seg: 1.1780, aux.acc_seg: 5.2637, loss: 4.1228
2021-07-05 00:59:42,744 - mmseg - INFO - Iter [1500/4000]	lr: 6.588e-03, eta: 0:29:37, time: 0.685, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9448, decode.acc_seg: 5.2657, aux.loss_seg: 1.1780, aux.acc_seg: 5.2624, loss: 4.1228
2021-07-05 01:00:18,184 - mmseg - INFO - Iter [1550/4000]	lr: 6.471e-03, eta: 0:29:01, time: 0.709, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2640, aux.loss_seg: 1.1780, aux.acc_seg: 5.2636, loss: 4.1228
2021-07-05 01:00:52,377 - mmseg - INFO - Iter [1600/4000]	lr: 6.354e-03, eta: 0:28:23, time: 0.684, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2644, aux.loss_seg: 1.1780, aux.acc_seg: 5.2643, loss: 4.1227
2021-07-05 01:01:27,504 - mmseg - INFO - Iter [1650/4000]	lr: 6.236e-03, eta: 0:27:47, time: 0.703, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2647, aux.loss_seg: 1.1780, aux.acc_seg: 5.2643, loss: 4.1227
2021-07-05 01:02:11,012 - mmseg - INFO - Iter [1700/4000]	lr: 6.119e-03, eta: 0:27:23, time: 0.870, data_time: 0.069, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2638, aux.loss_seg: 1.1780, aux.acc_seg: 5.2640, loss: 4.1227
2021-07-05 01:02:43,765 - mmseg - INFO - Iter [1750/4000]	lr: 6.001e-03, eta: 0:26:43, time: 0.655, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2624, aux.loss_seg: 1.1780, aux.acc_seg: 5.2639, loss: 4.1227
2021-07-05 01:03:20,050 - mmseg - INFO - Iter [1800/4000]	lr: 5.883e-03, eta: 0:26:08, time: 0.726, data_time: 0.010, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2648, aux.loss_seg: 1.1780, aux.acc_seg: 5.2623, loss: 4.1227
2021-07-05 01:03:55,221 - mmseg - INFO - Iter [1850/4000]	lr: 5.764e-03, eta: 0:25:32, time: 0.703, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2613, aux.loss_seg: 1.1780, aux.acc_seg: 5.2632, loss: 4.1226
2021-07-05 01:04:30,846 - mmseg - INFO - Iter [1900/4000]	lr: 5.646e-03, eta: 0:24:56, time: 0.713, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2635, aux.loss_seg: 1.1780, aux.acc_seg: 5.2637, loss: 4.1226
2021-07-05 01:05:06,675 - mmseg - INFO - Iter [1950/4000]	lr: 5.527e-03, eta: 0:24:21, time: 0.714, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9447, decode.acc_seg: 5.2642, aux.loss_seg: 1.1780, aux.acc_seg: 5.2631, loss: 4.1226
2021-07-05 01:05:43,710 - mmseg - INFO - Saving checkpoint at 2000 iterations
2021-07-05 01:07:32,107 - mmseg - INFO - per class results:
2021-07-05 01:07:32,135 - mmseg - INFO -
+---------------+------+------+
|     Class     | IoU  | Acc  |
+---------------+------+------+
|      road     | 2.33 | 4.01 |
|    sidewalk   | 1.66 | 2.37 |
|    building   | 2.23 | 3.72 |
|      wall     | 2.44 | 4.35 |
|     fence     | 2.48 | 4.48 |
|      pole     | 3.43 | 8.95 |
| traffic light | 2.76 | 5.47 |
|  traffic sign | 3.04 | 6.74 |
|   vegetation  | 2.73 | 5.38 |
|    terrain    | 2.95 | 6.24 |
|      sky      | 2.84 | 5.84 |
|     person    | 2.75 | 5.44 |
|     rider     | 2.86 | 5.92 |
|      car      | 2.44 | 4.35 |
|     truck     | 2.97 | 6.38 |
|      bus      | 2.74 | 5.41 |
|     train     | 2.47 | 4.42 |
|   motorcycle  | 2.72 | 5.34 |
|    bicycle    | 2.69 | 5.23 |
+---------------+------+------+
2021-07-05 01:07:32,135 - mmseg - INFO - Summary:
2021-07-05 01:07:32,135 - mmseg - INFO -
+------+------+------+
| aAcc | mIoU | mAcc |
+------+------+------+
| 5.26 | 2.66 | 5.26 |
+------+------+------+
2021-07-05 01:07:32,204 - mmseg - INFO - Exp name: deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py
2021-07-05 01:07:32,205 - mmseg - INFO - Iter [63/4000]	lr: 5.408e-03, eta: 0:23:48, time: 0.760, data_time: 0.013, memory: 18770, aAcc: 0.0526, mIoU: 0.0266, mAcc: 0.0526, IoU.road: 0.0233, IoU.sidewalk: 0.0166, IoU.building: 0.0223, IoU.wall: 0.0244, IoU.fence: 0.0248, IoU.pole: 0.0343, IoU.traffic light: 0.0276, IoU.traffic sign: 0.0304, IoU.vegetation: 0.0273, IoU.terrain: 0.0295, IoU.sky: 0.0284, IoU.person: 0.0275, IoU.rider: 0.0286, IoU.car: 0.0244, IoU.truck: 0.0297, IoU.bus: 0.0274, IoU.train: 0.0247, IoU.motorcycle: 0.0272, IoU.bicycle: 0.0269, Acc.road: 0.0401, Acc.sidewalk: 0.0237, Acc.building: 0.0372, Acc.wall: 0.0435, Acc.fence: 0.0448, Acc.pole: 0.0895, Acc.traffic light: 0.0547, Acc.traffic sign: 0.0674, Acc.vegetation: 0.0538, Acc.terrain: 0.0624, Acc.sky: 0.0584, Acc.person: 0.0544, Acc.rider: 0.0592, Acc.car: 0.0435, Acc.truck: 0.0638, Acc.bus: 0.0541, Acc.train: 0.0442, Acc.motorcycle: 0.0534, Acc.bicycle: 0.0523, decode.loss_seg: 2.9446, decode.acc_seg: 5.2641, aux.loss_seg: 1.1779, aux.acc_seg: 5.2647, loss: 4.1226
2021-07-05 01:08:08,164 - mmseg - INFO - Iter [2050/4000]	lr: 5.288e-03, eta: 0:24:55, time: 2.873, data_time: 2.167, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2633, aux.loss_seg: 1.1779, aux.acc_seg: 5.2625, loss: 4.1226
2021-07-05 01:08:41,106 - mmseg - INFO - Iter [2100/4000]	lr: 5.168e-03, eta: 0:24:11, time: 0.659, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2645, aux.loss_seg: 1.1779, aux.acc_seg: 5.2648, loss: 4.1226
2021-07-05 01:09:15,488 - mmseg - INFO - Iter [2150/4000]	lr: 5.048e-03, eta: 0:23:30, time: 0.688, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2635, aux.loss_seg: 1.1779, aux.acc_seg: 5.2628, loss: 4.1226
2021-07-05 01:09:51,252 - mmseg - INFO - Iter [2200/4000]	lr: 4.928e-03, eta: 0:22:50, time: 0.715, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2637, aux.loss_seg: 1.1779, aux.acc_seg: 5.2633, loss: 4.1226
2021-07-05 01:10:24,117 - mmseg - INFO - Iter [2250/4000]	lr: 4.807e-03, eta: 0:22:08, time: 0.657, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2635, aux.loss_seg: 1.1779, aux.acc_seg: 5.2648, loss: 4.1225
2021-07-05 01:11:01,311 - mmseg - INFO - Iter [2300/4000]	lr: 4.686e-03, eta: 0:21:29, time: 0.744, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2637, aux.loss_seg: 1.1779, aux.acc_seg: 5.2647, loss: 4.1225
2021-07-05 01:11:39,387 - mmseg - INFO - Iter [2350/4000]	lr: 4.564e-03, eta: 0:20:51, time: 0.761, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2646, aux.loss_seg: 1.1779, aux.acc_seg: 5.2662, loss: 4.1225
2021-07-05 01:12:16,579 - mmseg - INFO - Iter [2400/4000]	lr: 4.442e-03, eta: 0:20:13, time: 0.744, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2637, aux.loss_seg: 1.1779, aux.acc_seg: 5.2632, loss: 4.1225
2021-07-05 01:12:52,385 - mmseg - INFO - Iter [2450/4000]	lr: 4.320e-03, eta: 0:19:34, time: 0.716, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2631, aux.loss_seg: 1.1779, aux.acc_seg: 5.2642, loss: 4.1225
2021-07-05 01:13:30,615 - mmseg - INFO - Iter [2500/4000]	lr: 4.198e-03, eta: 0:18:56, time: 0.765, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2623, aux.loss_seg: 1.1779, aux.acc_seg: 5.2634, loss: 4.1225
2021-07-05 01:14:02,459 - mmseg - INFO - Iter [2550/4000]	lr: 4.074e-03, eta: 0:18:15, time: 0.637, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2624, aux.loss_seg: 1.1779, aux.acc_seg: 5.2648, loss: 4.1225
2021-07-05 01:14:35,548 - mmseg - INFO - Iter [2600/4000]	lr: 3.951e-03, eta: 0:17:34, time: 0.662, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2637, aux.loss_seg: 1.1779, aux.acc_seg: 5.2650, loss: 4.1225
2021-07-05 01:15:08,741 - mmseg - INFO - Iter [2650/4000]	lr: 3.827e-03, eta: 0:16:54, time: 0.664, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2635, aux.loss_seg: 1.1779, aux.acc_seg: 5.2631, loss: 4.1225
2021-07-05 01:15:42,960 - mmseg - INFO - Iter [2700/4000]	lr: 3.703e-03, eta: 0:16:15, time: 0.684, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2634, aux.loss_seg: 1.1779, aux.acc_seg: 5.2633, loss: 4.1225
2021-07-05 01:16:16,414 - mmseg - INFO - Iter [2750/4000]	lr: 3.578e-03, eta: 0:15:36, time: 0.669, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2626, aux.loss_seg: 1.1779, aux.acc_seg: 5.2619, loss: 4.1225
2021-07-05 01:16:51,617 - mmseg - INFO - Iter [2800/4000]	lr: 3.453e-03, eta: 0:14:57, time: 0.704, data_time: 0.013, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2616, aux.loss_seg: 1.1779, aux.acc_seg: 5.2622, loss: 4.1225
2021-07-05 01:17:26,076 - mmseg - INFO - Iter [2850/4000]	lr: 3.327e-03, eta: 0:14:19, time: 0.689, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2617, aux.loss_seg: 1.1779, aux.acc_seg: 5.2643, loss: 4.1225
2021-07-05 01:18:00,412 - mmseg - INFO - Iter [2900/4000]	lr: 3.200e-03, eta: 0:13:40, time: 0.687, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2625, aux.loss_seg: 1.1779, aux.acc_seg: 5.2631, loss: 4.1225
2021-07-05 01:18:32,121 - mmseg - INFO - Iter [2950/4000]	lr: 3.073e-03, eta: 0:13:01, time: 0.635, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2622, aux.loss_seg: 1.1779, aux.acc_seg: 5.2640, loss: 4.1225
2021-07-05 01:19:04,142 - mmseg - INFO - Exp name: deeplabv3plus_r50-d8_512x1024_4k_dummy_cityscapes.py
2021-07-05 01:19:04,151 - mmseg - INFO - Iter [3000/4000]	lr: 2.946e-03, eta: 0:12:22, time: 0.640, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2621, aux.loss_seg: 1.1779, aux.acc_seg: 5.2634, loss: 4.1224
2021-07-05 01:19:41,129 - mmseg - INFO - Iter [3050/4000]	lr: 2.817e-03, eta: 0:11:45, time: 0.740, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2646, aux.loss_seg: 1.1779, aux.acc_seg: 5.2637, loss: 4.1224
2021-07-05 01:20:19,275 - mmseg - INFO - Iter [3100/4000]	lr: 2.688e-03, eta: 0:11:08, time: 0.762, data_time: 0.010, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2625, aux.loss_seg: 1.1779, aux.acc_seg: 5.2640, loss: 4.1224
2021-07-05 01:20:56,280 - mmseg - INFO - Iter [3150/4000]	lr: 2.559e-03, eta: 0:10:31, time: 0.740, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2635, aux.loss_seg: 1.1779, aux.acc_seg: 5.2644, loss: 4.1224
2021-07-05 01:21:27,426 - mmseg - INFO - Iter [3200/4000]	lr: 2.428e-03, eta: 0:09:52, time: 0.623, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9446, decode.acc_seg: 5.2614, aux.loss_seg: 1.1779, aux.acc_seg: 5.2623, loss: 4.1224
2021-07-05 01:22:04,531 - mmseg - INFO - Iter [3250/4000]	lr: 2.297e-03, eta: 0:09:15, time: 0.742, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2616, aux.loss_seg: 1.1779, aux.acc_seg: 5.2639, loss: 4.1224
2021-07-05 01:22:39,199 - mmseg - INFO - Iter [3300/4000]	lr: 2.165e-03, eta: 0:08:38, time: 0.693, data_time: 0.010, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2631, aux.loss_seg: 1.1779, aux.acc_seg: 5.2630, loss: 4.1224
2021-07-05 01:23:16,290 - mmseg - INFO - Iter [3350/4000]	lr: 2.032e-03, eta: 0:08:01, time: 0.742, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2635, aux.loss_seg: 1.1779, aux.acc_seg: 5.2626, loss: 4.1224
2021-07-05 01:23:53,157 - mmseg - INFO - Iter [3400/4000]	lr: 1.898e-03, eta: 0:07:24, time: 0.737, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2627, aux.loss_seg: 1.1779, aux.acc_seg: 5.2646, loss: 4.1224
2021-07-05 01:24:26,823 - mmseg - INFO - Iter [3450/4000]	lr: 1.763e-03, eta: 0:06:46, time: 0.673, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2636, aux.loss_seg: 1.1779, aux.acc_seg: 5.2643, loss: 4.1224
2021-07-05 01:25:05,131 - mmseg - INFO - Iter [3500/4000]	lr: 1.626e-03, eta: 0:06:09, time: 0.766, data_time: 0.010, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2649, aux.loss_seg: 1.1779, aux.acc_seg: 5.2638, loss: 4.1224
2021-07-05 01:25:43,288 - mmseg - INFO - Iter [3550/4000]	lr: 1.488e-03, eta: 0:05:32, time: 0.763, data_time: 0.014, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2622, aux.loss_seg: 1.1779, aux.acc_seg: 5.2637, loss: 4.1224
2021-07-05 01:26:22,008 - mmseg - INFO - Iter [3600/4000]	lr: 1.349e-03, eta: 0:04:56, time: 0.775, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2622, aux.loss_seg: 1.1779, aux.acc_seg: 5.2634, loss: 4.1224
2021-07-05 01:27:00,562 - mmseg - INFO - Iter [3650/4000]	lr: 1.208e-03, eta: 0:04:19, time: 0.771, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2635, aux.loss_seg: 1.1779, aux.acc_seg: 5.2631, loss: 4.1224
2021-07-05 01:27:35,666 - mmseg - INFO - Iter [3700/4000]	lr: 1.065e-03, eta: 0:03:42, time: 0.702, data_time: 0.012, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2642, aux.loss_seg: 1.1779, aux.acc_seg: 5.2632, loss: 4.1224
2021-07-05 01:28:14,943 - mmseg - INFO - Iter [3750/4000]	lr: 9.194e-04, eta: 0:03:05, time: 0.785, data_time: 0.015, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2632, aux.loss_seg: 1.1779, aux.acc_seg: 5.2625, loss: 4.1224
2021-07-05 01:28:53,200 - mmseg - INFO - Iter [3800/4000]	lr: 7.709e-04, eta: 0:02:28, time: 0.765, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2609, aux.loss_seg: 1.1779, aux.acc_seg: 5.2631, loss: 4.1224
2021-07-05 01:29:27,116 - mmseg - INFO - Iter [3850/4000]	lr: 6.186e-04, eta: 0:01:51, time: 0.678, data_time: 0.011, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2637, aux.loss_seg: 1.1779, aux.acc_seg: 5.2635, loss: 4.1224
2021-07-05 01:30:05,817 - mmseg - INFO - Iter [3900/4000]	lr: 4.611e-04, eta: 0:01:14, time: 0.774, data_time: 0.010, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2640, aux.loss_seg: 1.1779, aux.acc_seg: 5.2635, loss: 4.1224
2021-07-05 01:30:43,533 - mmseg - INFO - Iter [3950/4000]	lr: 2.953e-04, eta: 0:00:37, time: 0.754, data_time: 0.013, memory: 18770, decode.loss_seg: 2.9445, decode.acc_seg: 5.2648, aux.loss_seg: 1.1779, aux.acc_seg: 5.2622, loss: 4.1224
2021-07-05 01:31:20,070 - mmseg - INFO - Saving checkpoint at 4000 iterations
2021-07-05 01:31:48,749 - mmseg - INFO - per class results:
2021-07-05 01:31:48,775 - mmseg - INFO -
+---------------+------+------+
|     Class     | IoU  | Acc  |
+---------------+------+------+
|      road     | 2.92 | 6.17 |
|    sidewalk   | 1.64 | 2.33 |
|    building   | 2.18 | 3.58 |
|      wall     | 2.41 | 4.28 |
|     fence     | 2.84 | 5.79 |
|      pole     | 3.19 | 7.52 |
| traffic light | 3.03 | 6.67 |
|  traffic sign | 3.0  | 6.52 |
|   vegetation  | 2.4  | 4.24 |
|    terrain    | 2.63 | 4.99 |
|      sky      | 2.61 | 4.94 |
|     person    | 2.98 | 6.4  |
|     rider     | 2.94 | 6.23 |
|      car      | 2.76 | 5.47 |
|     truck     | 3.09 | 6.94 |
|      bus      | 2.53 | 4.64 |
|     train     | 2.13 | 3.45 |
|   motorcycle  | 2.37 | 4.13 |
|    bicycle    | 2.81 | 5.7  |
+---------------+------+------+
2021-07-05 01:31:48,775 - mmseg - INFO - Summary:
2021-07-05 01:31:48,775 - mmseg - INFO -
+------+------+------+
| aAcc | mIoU | mAcc |
+------+------+------+
| 5.26 | 2.66 | 5.26 |
+------+------+------+
