{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "pspnet_r50-d8_512x1024_4k_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='PSPHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        pool_scales=(1, 2, 3, 6),\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = 'work_dirs_2node_8gpu/pspnet_r50-d8_512x1024_4k_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18766, "data_time": 0.0212, "decode.loss_seg": 2.95096, "decode.acc_seg": 5.2629, "aux.loss_seg": 1.17909, "aux.acc_seg": 5.2638, "loss": 4.13005, "time": 0.91886}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18766, "data_time": 0.02942, "decode.loss_seg": 2.94934, "decode.acc_seg": 5.26237, "aux.loss_seg": 1.17887, "aux.acc_seg": 5.26363, "loss": 4.12821, "time": 0.80404}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18766, "data_time": 0.01095, "decode.loss_seg": 2.94856, "decode.acc_seg": 5.2635, "aux.loss_seg": 1.17878, "aux.acc_seg": 5.26308, "loss": 4.12735, "time": 0.65855}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 18766, "data_time": 0.01636, "decode.loss_seg": 2.94798, "decode.acc_seg": 5.2644, "aux.loss_seg": 1.1787, "aux.acc_seg": 5.26406, "loss": 4.12668, "time": 0.63103}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 18766, "data_time": 0.01292, "decode.loss_seg": 2.94749, "decode.acc_seg": 5.26089, "aux.loss_seg": 1.17863, "aux.acc_seg": 5.26131, "loss": 4.12613, "time": 0.66341}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 18766, "data_time": 0.01091, "decode.loss_seg": 2.94711, "decode.acc_seg": 5.26154, "aux.loss_seg": 1.17857, "aux.acc_seg": 5.26516, "loss": 4.12568, "time": 0.66484}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 18766, "data_time": 0.0124, "decode.loss_seg": 2.94679, "decode.acc_seg": 5.26206, "aux.loss_seg": 1.17851, "aux.acc_seg": 5.26374, "loss": 4.1253, "time": 0.70586}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 18766, "data_time": 0.01448, "decode.loss_seg": 2.94651, "decode.acc_seg": 5.26371, "aux.loss_seg": 1.17846, "aux.acc_seg": 5.26231, "loss": 4.12497, "time": 0.69238}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 18766, "data_time": 0.01158, "decode.loss_seg": 2.94624, "decode.acc_seg": 5.26346, "aux.loss_seg": 1.17841, "aux.acc_seg": 5.26404, "loss": 4.12466, "time": 0.62046}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 18766, "data_time": 0.02318, "decode.loss_seg": 2.94604, "decode.acc_seg": 5.2625, "aux.loss_seg": 1.17838, "aux.acc_seg": 5.26136, "loss": 4.12441, "time": 0.71878}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 18766, "data_time": 0.02295, "decode.loss_seg": 2.94584, "decode.acc_seg": 5.26363, "aux.loss_seg": 1.17833, "aux.acc_seg": 5.26297, "loss": 4.12418, "time": 0.91455}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 18766, "data_time": 0.03691, "decode.loss_seg": 2.94563, "decode.acc_seg": 5.26469, "aux.loss_seg": 1.17829, "aux.acc_seg": 5.26463, "loss": 4.12393, "time": 0.74327}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 18766, "data_time": 0.0251, "decode.loss_seg": 2.94545, "decode.acc_seg": 5.263, "aux.loss_seg": 1.17826, "aux.acc_seg": 5.26177, "loss": 4.12371, "time": 0.81232}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 18766, "data_time": 0.02964, "decode.loss_seg": 2.9453, "decode.acc_seg": 5.26284, "aux.loss_seg": 1.17823, "aux.acc_seg": 5.26247, "loss": 4.12353, "time": 0.83559}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 18766, "data_time": 0.0429, "decode.loss_seg": 2.94515, "decode.acc_seg": 5.26226, "aux.loss_seg": 1.1782, "aux.acc_seg": 5.26325, "loss": 4.12335, "time": 0.73289}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 18766, "data_time": 0.01865, "decode.loss_seg": 2.94505, "decode.acc_seg": 5.26246, "aux.loss_seg": 1.17817, "aux.acc_seg": 5.26416, "loss": 4.12322, "time": 0.76121}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 18766, "data_time": 0.01446, "decode.loss_seg": 2.94498, "decode.acc_seg": 5.26449, "aux.loss_seg": 1.17815, "aux.acc_seg": 5.26281, "loss": 4.12313, "time": 0.68029}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 18766, "data_time": 0.01159, "decode.loss_seg": 2.94492, "decode.acc_seg": 5.26226, "aux.loss_seg": 1.17813, "aux.acc_seg": 5.26296, "loss": 4.12305, "time": 0.7272}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 18766, "data_time": 0.01639, "decode.loss_seg": 2.94487, "decode.acc_seg": 5.26503, "aux.loss_seg": 1.17811, "aux.acc_seg": 5.26206, "loss": 4.12298, "time": 0.66131}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 18766, "data_time": 0.01019, "decode.loss_seg": 2.94482, "decode.acc_seg": 5.26435, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.26202, "loss": 4.12291, "time": 0.74925}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 18766, "data_time": 0.01003, "decode.loss_seg": 2.9448, "decode.acc_seg": 5.2639, "aux.loss_seg": 1.17808, "aux.acc_seg": 5.26285, "loss": 4.12287, "time": 0.66296}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 18766, "data_time": 0.00974, "decode.loss_seg": 2.94476, "decode.acc_seg": 5.26287, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.26351, "loss": 4.12283, "time": 0.70965}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 18766, "data_time": 0.01256, "decode.loss_seg": 2.94474, "decode.acc_seg": 5.26149, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26369, "loss": 4.12279, "time": 0.61355}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 18766, "data_time": 0.00961, "decode.loss_seg": 2.94472, "decode.acc_seg": 5.26302, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26437, "loss": 4.12276, "time": 0.66408}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 18766, "data_time": 0.0105, "decode.loss_seg": 2.94471, "decode.acc_seg": 5.26303, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.26425, "loss": 4.12273, "time": 0.72368}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 18766, "data_time": 0.00942, "decode.loss_seg": 2.94469, "decode.acc_seg": 5.26327, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26375, "loss": 4.12271, "time": 0.5949}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 18766, "data_time": 0.01233, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26213, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26394, "loss": 4.12269, "time": 0.63058}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 18766, "data_time": 0.01032, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26301, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26398, "loss": 4.12267, "time": 0.62396}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 18766, "data_time": 0.01063, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.26452, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26349, "loss": 4.12264, "time": 0.72962}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 18766, "data_time": 0.01218, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26159, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26319, "loss": 4.12263, "time": 0.66156}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 18766, "data_time": 0.00963, "decode.loss_seg": 2.94463, "decode.acc_seg": 5.26465, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26117, "loss": 4.12261, "time": 0.67406}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 18766, "data_time": 0.03392, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26404, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26274, "loss": 4.1226, "time": 0.75338}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 18766, "data_time": 0.01009, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26275, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26242, "loss": 4.12258, "time": 0.63903}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 18766, "data_time": 0.01177, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26233, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26306, "loss": 4.12257, "time": 0.67845}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 18766, "data_time": 0.01133, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26204, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.2624, "loss": 4.12256, "time": 0.6332}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 18766, "data_time": 0.01044, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26454, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26372, "loss": 4.12255, "time": 0.71858}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 18766, "data_time": 0.01039, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26224, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.2637, "loss": 4.12253, "time": 0.66023}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 18766, "data_time": 0.01338, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.2635, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26264, "loss": 4.12253, "time": 0.66944}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 18766, "data_time": 0.01054, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.2622, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26272, "loss": 4.12252, "time": 0.74341}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 18766, "aAcc": 0.0526, "mIoU": 0.0225, "mAcc": 0.0526, "IoU.road": 0.0025, "IoU.sidewalk": 0.0281, "IoU.building": 0.0165, "IoU.wall": 0.0413, "IoU.fence": 0.0336, "IoU.pole": 0.0274, "IoU.traffic light": 0.006, "IoU.traffic sign": 0.023, "IoU.vegetation": 0.0077, "IoU.terrain": 0.0096, "IoU.sky": 0.0201, "IoU.person": 0.0402, "IoU.rider": 0.0145, "IoU.car": 0.0164, "IoU.truck": 0.0394, "IoU.bus": 0.0184, "IoU.train": 0.0283, "IoU.motorcycle": 0.0269, "IoU.bicycle": 0.028, "Acc.road": 0.0026, "Acc.sidewalk": 0.0568, "Acc.building": 0.0235, "Acc.wall": 0.1608, "Acc.fence": 0.0854, "Acc.pole": 0.054, "Acc.traffic light": 0.0068, "Acc.traffic sign": 0.0391, "Acc.vegetation": 0.009, "Acc.terrain": 0.0116, "Acc.sky": 0.0315, "Acc.person": 0.1462, "Acc.rider": 0.0197, "Acc.car": 0.0233, "Acc.truck": 0.1356, "Acc.bus": 0.0275, "Acc.train": 0.0577, "Acc.motorcycle": 0.0522, "Acc.bicycle": 0.0566, "data_time": 0.0106, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26218, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26366, "loss": 4.12252, "time": 0.73177}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 18766, "data_time": 2.12751, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26189, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.2634, "loss": 4.1225, "time": 2.7488}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 18766, "data_time": 0.01165, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26411, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26175, "loss": 4.1225, "time": 0.63529}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 18766, "data_time": 0.01162, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26207, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26188, "loss": 4.12249, "time": 0.73368}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 18766, "data_time": 0.01185, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26423, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.2642, "loss": 4.12248, "time": 0.66515}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 18766, "data_time": 0.02249, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26403, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26091, "loss": 4.12247, "time": 0.86956}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 18766, "data_time": 0.03078, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26307, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26277, "loss": 4.12247, "time": 0.91505}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 18766, "data_time": 0.02962, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26277, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26188, "loss": 4.12246, "time": 0.72891}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 18766, "data_time": 0.0124, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26364, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26217, "loss": 4.12246, "time": 0.7641}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 18766, "data_time": 0.02321, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.2646, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26483, "loss": 4.12245, "time": 0.68812}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 18766, "data_time": 0.01166, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26107, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26116, "loss": 4.12245, "time": 0.72048}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 18766, "data_time": 0.01159, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26527, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26395, "loss": 4.12244, "time": 0.66571}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 18766, "data_time": 0.01166, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26199, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26485, "loss": 4.12243, "time": 0.73872}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 18766, "data_time": 0.01429, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26285, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26133, "loss": 4.12244, "time": 0.58854}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 18766, "data_time": 0.01199, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26371, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26311, "loss": 4.12243, "time": 0.62296}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 18766, "data_time": 0.01248, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26348, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26487, "loss": 4.12243, "time": 0.57953}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 18766, "data_time": 0.0154, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26236, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2627, "loss": 4.12242, "time": 0.6337}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 18766, "data_time": 0.01164, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26365, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26441, "loss": 4.12242, "time": 0.70407}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 18766, "data_time": 0.01318, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26366, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26176, "loss": 4.12242, "time": 0.59703}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 18766, "data_time": 0.0125, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26494, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26313, "loss": 4.12241, "time": 0.59949}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 18766, "data_time": 0.01432, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26312, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26157, "loss": 4.12241, "time": 0.72147}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 18766, "data_time": 0.01226, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.2637, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26324, "loss": 4.12241, "time": 0.63991}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 18766, "data_time": 0.01251, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26292, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26497, "loss": 4.12241, "time": 0.6362}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 18766, "data_time": 0.01284, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26382, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26438, "loss": 4.12241, "time": 0.69502}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 18766, "data_time": 0.01448, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26273, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26338, "loss": 4.1224, "time": 0.64614}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 18766, "data_time": 0.01322, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2625, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26319, "loss": 4.1224, "time": 0.62456}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 18766, "data_time": 0.01272, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26297, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26437, "loss": 4.1224, "time": 0.62767}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 18766, "data_time": 0.01362, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26383, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26417, "loss": 4.1224, "time": 0.71891}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 18766, "data_time": 0.01238, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26298, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26402, "loss": 4.1224, "time": 0.58972}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 18766, "data_time": 0.01281, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26296, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26379, "loss": 4.12239, "time": 0.66857}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 18766, "data_time": 0.01339, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26229, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26085, "loss": 4.12239, "time": 0.64897}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 18766, "data_time": 0.01527, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26101, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.2642, "loss": 4.12239, "time": 0.6585}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 18766, "data_time": 0.01287, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26102, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26284, "loss": 4.12239, "time": 0.60392}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 18766, "data_time": 0.0127, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26284, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26491, "loss": 4.12239, "time": 0.6822}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 18766, "data_time": 0.01201, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.25999, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26263, "loss": 4.12239, "time": 0.63219}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 18766, "data_time": 0.0147, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26409, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26123, "loss": 4.12239, "time": 0.64404}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 18766, "data_time": 0.0124, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26423, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26502, "loss": 4.12239, "time": 0.5746}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 18766, "data_time": 0.01316, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26409, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26363, "loss": 4.12238, "time": 0.62725}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 18766, "data_time": 0.01648, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26179, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26163, "loss": 4.12239, "time": 0.6051}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 18766, "data_time": 0.01536, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26392, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.2629, "loss": 4.12239, "time": 0.58486}
