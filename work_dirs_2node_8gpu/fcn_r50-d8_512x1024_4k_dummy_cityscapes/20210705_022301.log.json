{"env_info": "sys.platform: linux\nPython: 3.7.10 (default, Feb 26 2021, 18:47:35) [GCC 7.3.0]\nCUDA available: True\nGPU 0,1,2,3: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-10.1-cudnn7.6.5\nNVCC: Cuda compilation tools, release 10.1, V10.1.243\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.3\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.1\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.1\nMMSegmentation: 0.14.1+9988853", "seed": null, "exp_name": "fcn_r50-d8_512x1024_4k_dummy_cityscapes.py", "mmseg_version": "0.14.1+9988853", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained='open-mmlab://resnet50_v1c',\n    backbone=dict(\n        type='ResNetV1c',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        dilations=(1, 1, 2, 4),\n        strides=(1, 2, 1, 1),\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        norm_eval=False,\n        style='pytorch',\n        contract_dilation=True,\n        pretrained='open-mmlab://resnet50_v1c'),\n    decode_head=dict(\n        type='FCNHead',\n        in_channels=2048,\n        in_index=3,\n        channels=512,\n        num_convs=2,\n        concat_input=True,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=1024,\n        in_index=2,\n        channels=256,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'DummyCityscapes'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='DummyCityscapes',\n        pipeline=[\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=4000)\ncheckpoint_config = dict(by_epoch=False, interval=2000)\nevaluation = dict(interval=2000, metric='mIoU')\nwork_dir = 'work_dirs_2node_8gpu/fcn_r50-d8_512x1024_4k_dummy_cityscapes'\ngpu_ids = range(0, 1)\nseed = None\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00989, "memory": 18774, "data_time": 0.0263, "decode.loss_seg": 2.95037, "decode.acc_seg": 5.26427, "aux.loss_seg": 1.17923, "aux.acc_seg": 5.26475, "loss": 4.1296, "time": 1.14905}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00978, "memory": 18774, "data_time": 0.01222, "decode.loss_seg": 2.949, "decode.acc_seg": 5.26278, "aux.loss_seg": 1.17893, "aux.acc_seg": 5.26345, "loss": 4.12794, "time": 0.61251}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00967, "memory": 18774, "data_time": 0.02833, "decode.loss_seg": 2.94833, "decode.acc_seg": 5.26276, "aux.loss_seg": 1.17883, "aux.acc_seg": 5.26415, "loss": 4.12716, "time": 0.71022}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00956, "memory": 18774, "data_time": 0.02225, "decode.loss_seg": 2.94778, "decode.acc_seg": 5.26133, "aux.loss_seg": 1.17875, "aux.acc_seg": 5.26406, "loss": 4.12654, "time": 0.65181}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00944, "memory": 18774, "data_time": 0.01453, "decode.loss_seg": 2.94736, "decode.acc_seg": 5.26388, "aux.loss_seg": 1.17868, "aux.acc_seg": 5.26127, "loss": 4.12605, "time": 0.63792}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00933, "memory": 18774, "data_time": 0.01216, "decode.loss_seg": 2.94699, "decode.acc_seg": 5.2637, "aux.loss_seg": 1.17862, "aux.acc_seg": 5.26392, "loss": 4.12561, "time": 0.66051}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.00922, "memory": 18774, "data_time": 0.01683, "decode.loss_seg": 2.94669, "decode.acc_seg": 5.2646, "aux.loss_seg": 1.17856, "aux.acc_seg": 5.26523, "loss": 4.12525, "time": 0.6254}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.00911, "memory": 18774, "data_time": 0.03745, "decode.loss_seg": 2.94643, "decode.acc_seg": 5.26339, "aux.loss_seg": 1.17851, "aux.acc_seg": 5.26409, "loss": 4.12494, "time": 0.73349}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.00899, "memory": 18774, "data_time": 0.01695, "decode.loss_seg": 2.9462, "decode.acc_seg": 5.26279, "aux.loss_seg": 1.17846, "aux.acc_seg": 5.262, "loss": 4.12466, "time": 0.6135}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.00888, "memory": 18774, "data_time": 0.01929, "decode.loss_seg": 2.94601, "decode.acc_seg": 5.26341, "aux.loss_seg": 1.17842, "aux.acc_seg": 5.26458, "loss": 4.12443, "time": 0.58723}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.00877, "memory": 18774, "data_time": 0.01594, "decode.loss_seg": 2.94584, "decode.acc_seg": 5.26418, "aux.loss_seg": 1.17838, "aux.acc_seg": 5.26413, "loss": 4.12422, "time": 0.62081}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.00866, "memory": 18774, "data_time": 0.02354, "decode.loss_seg": 2.94569, "decode.acc_seg": 5.26467, "aux.loss_seg": 1.17834, "aux.acc_seg": 5.2622, "loss": 4.12403, "time": 0.69733}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.00854, "memory": 18774, "data_time": 0.02397, "decode.loss_seg": 2.94555, "decode.acc_seg": 5.264, "aux.loss_seg": 1.17831, "aux.acc_seg": 5.26315, "loss": 4.12386, "time": 0.58227}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.00843, "memory": 18774, "data_time": 0.03235, "decode.loss_seg": 2.94541, "decode.acc_seg": 5.26255, "aux.loss_seg": 1.17827, "aux.acc_seg": 5.26524, "loss": 4.12369, "time": 0.64473}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.00831, "memory": 18774, "data_time": 0.02312, "decode.loss_seg": 2.9453, "decode.acc_seg": 5.26331, "aux.loss_seg": 1.17825, "aux.acc_seg": 5.26171, "loss": 4.12355, "time": 0.60156}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0082, "memory": 18774, "data_time": 0.03371, "decode.loss_seg": 2.9452, "decode.acc_seg": 5.26173, "aux.loss_seg": 1.17822, "aux.acc_seg": 5.26482, "loss": 4.12341, "time": 0.7148}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.00809, "memory": 18774, "data_time": 0.01392, "decode.loss_seg": 2.94509, "decode.acc_seg": 5.26259, "aux.loss_seg": 1.17819, "aux.acc_seg": 5.26217, "loss": 4.12328, "time": 0.60609}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.00797, "memory": 18774, "data_time": 0.02268, "decode.loss_seg": 2.94501, "decode.acc_seg": 5.2627, "aux.loss_seg": 1.17817, "aux.acc_seg": 5.26245, "loss": 4.12317, "time": 0.60039}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 0.00786, "memory": 18774, "data_time": 0.01567, "decode.loss_seg": 2.94494, "decode.acc_seg": 5.26231, "aux.loss_seg": 1.17814, "aux.acc_seg": 5.26406, "loss": 4.12308, "time": 0.53616}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 0.00774, "memory": 18774, "data_time": 0.01258, "decode.loss_seg": 2.94487, "decode.acc_seg": 5.26189, "aux.loss_seg": 1.17812, "aux.acc_seg": 5.26255, "loss": 4.12299, "time": 0.6194}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 0.00763, "memory": 18774, "data_time": 0.01371, "decode.loss_seg": 2.94483, "decode.acc_seg": 5.26369, "aux.loss_seg": 1.1781, "aux.acc_seg": 5.26489, "loss": 4.12293, "time": 0.58186}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 0.00751, "memory": 18774, "data_time": 0.02142, "decode.loss_seg": 2.94478, "decode.acc_seg": 5.26316, "aux.loss_seg": 1.17809, "aux.acc_seg": 5.26509, "loss": 4.12286, "time": 0.7039}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 0.0074, "memory": 18774, "data_time": 0.03017, "decode.loss_seg": 2.94475, "decode.acc_seg": 5.26361, "aux.loss_seg": 1.17807, "aux.acc_seg": 5.26347, "loss": 4.12282, "time": 0.65921}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 0.00728, "memory": 18774, "data_time": 0.01544, "decode.loss_seg": 2.94473, "decode.acc_seg": 5.26338, "aux.loss_seg": 1.17806, "aux.acc_seg": 5.2623, "loss": 4.12279, "time": 0.62251}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 0.00717, "memory": 18774, "data_time": 0.01514, "decode.loss_seg": 2.9447, "decode.acc_seg": 5.26401, "aux.loss_seg": 1.17805, "aux.acc_seg": 5.26309, "loss": 4.12275, "time": 0.55698}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 0.00705, "memory": 18774, "data_time": 0.0147, "decode.loss_seg": 2.94468, "decode.acc_seg": 5.26287, "aux.loss_seg": 1.17804, "aux.acc_seg": 5.26319, "loss": 4.12272, "time": 0.53822}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 0.00694, "memory": 18774, "data_time": 0.01562, "decode.loss_seg": 2.94467, "decode.acc_seg": 5.26262, "aux.loss_seg": 1.17803, "aux.acc_seg": 5.26252, "loss": 4.1227, "time": 0.60153}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 0.00682, "memory": 18774, "data_time": 0.01305, "decode.loss_seg": 2.94465, "decode.acc_seg": 5.26208, "aux.loss_seg": 1.17802, "aux.acc_seg": 5.26308, "loss": 4.12267, "time": 0.69318}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 0.0067, "memory": 18774, "data_time": 0.01902, "decode.loss_seg": 2.94464, "decode.acc_seg": 5.26369, "aux.loss_seg": 1.17801, "aux.acc_seg": 5.26329, "loss": 4.12264, "time": 0.63996}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.00659, "memory": 18774, "data_time": 0.03248, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26204, "aux.loss_seg": 1.178, "aux.acc_seg": 5.26291, "loss": 4.12262, "time": 0.64857}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.00647, "memory": 18774, "data_time": 0.01365, "decode.loss_seg": 2.94462, "decode.acc_seg": 5.26133, "aux.loss_seg": 1.17799, "aux.acc_seg": 5.26163, "loss": 4.12261, "time": 0.59082}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.00635, "memory": 18774, "data_time": 0.02312, "decode.loss_seg": 2.94461, "decode.acc_seg": 5.26428, "aux.loss_seg": 1.17798, "aux.acc_seg": 5.26372, "loss": 4.12259, "time": 0.78835}
{"mode": "train", "epoch": 9, "iter": 1650, "lr": 0.00624, "memory": 18774, "data_time": 0.01788, "decode.loss_seg": 2.9446, "decode.acc_seg": 5.26291, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26355, "loss": 4.12257, "time": 0.75824}
{"mode": "train", "epoch": 10, "iter": 1700, "lr": 0.00612, "memory": 18774, "data_time": 0.02913, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26284, "aux.loss_seg": 1.17797, "aux.acc_seg": 5.26363, "loss": 4.12256, "time": 0.66271}
{"mode": "train", "epoch": 10, "iter": 1750, "lr": 0.006, "memory": 18774, "data_time": 0.0252, "decode.loss_seg": 2.94459, "decode.acc_seg": 5.26251, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26356, "loss": 4.12255, "time": 0.62212}
{"mode": "train", "epoch": 10, "iter": 1800, "lr": 0.00588, "memory": 18774, "data_time": 0.03637, "decode.loss_seg": 2.94458, "decode.acc_seg": 5.26066, "aux.loss_seg": 1.17796, "aux.acc_seg": 5.26525, "loss": 4.12254, "time": 0.72771}
{"mode": "train", "epoch": 10, "iter": 1850, "lr": 0.00576, "memory": 18774, "data_time": 0.01522, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26422, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26504, "loss": 4.12253, "time": 0.66019}
{"mode": "train", "epoch": 11, "iter": 1900, "lr": 0.00565, "memory": 18774, "data_time": 0.02997, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.2634, "aux.loss_seg": 1.17795, "aux.acc_seg": 5.26256, "loss": 4.12252, "time": 0.69654}
{"mode": "train", "epoch": 11, "iter": 1950, "lr": 0.00553, "memory": 18774, "data_time": 0.01777, "decode.loss_seg": 2.94457, "decode.acc_seg": 5.26336, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26398, "loss": 4.12251, "time": 0.69014}
{"mode": "train", "epoch": 11, "iter": 63, "lr": 0.00541, "memory": 18774, "aAcc": 0.0526, "mIoU": 0.0262, "mAcc": 0.0526, "IoU.road": 0.0296, "IoU.sidewalk": 0.0145, "IoU.building": 0.0284, "IoU.wall": 0.0304, "IoU.fence": 0.0244, "IoU.pole": 0.0188, "IoU.traffic light": 0.035, "IoU.traffic sign": 0.0244, "IoU.vegetation": 0.0278, "IoU.terrain": 0.0273, "IoU.sky": 0.0189, "IoU.person": 0.0269, "IoU.rider": 0.0226, "IoU.car": 0.031, "IoU.truck": 0.0257, "IoU.bus": 0.025, "IoU.train": 0.0285, "IoU.motorcycle": 0.0339, "IoU.bicycle": 0.0243, "Acc.road": 0.0635, "Acc.sidewalk": 0.0196, "Acc.building": 0.0583, "Acc.wall": 0.0673, "Acc.fence": 0.0435, "Acc.pole": 0.0284, "Acc.traffic light": 0.0951, "Acc.traffic sign": 0.0435, "Acc.vegetation": 0.0558, "Acc.terrain": 0.0538, "Acc.sky": 0.0288, "Acc.person": 0.0523, "Acc.rider": 0.0381, "Acc.car": 0.0702, "Acc.truck": 0.0476, "Acc.bus": 0.0454, "Acc.train": 0.0584, "Acc.motorcycle": 0.0872, "Acc.bicycle": 0.043, "data_time": 0.01834, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26213, "aux.loss_seg": 1.17794, "aux.acc_seg": 5.26271, "loss": 4.12249, "time": 0.66332}
{"mode": "train", "epoch": 12, "iter": 2050, "lr": 0.00529, "memory": 18774, "data_time": 1.99558, "decode.loss_seg": 2.94456, "decode.acc_seg": 5.26113, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26293, "loss": 4.12249, "time": 2.61862}
{"mode": "train", "epoch": 12, "iter": 2100, "lr": 0.00517, "memory": 18774, "data_time": 0.02742, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26297, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26445, "loss": 4.12248, "time": 0.71841}
{"mode": "train", "epoch": 12, "iter": 2150, "lr": 0.00505, "memory": 18774, "data_time": 0.01361, "decode.loss_seg": 2.94455, "decode.acc_seg": 5.26243, "aux.loss_seg": 1.17793, "aux.acc_seg": 5.26172, "loss": 4.12248, "time": 0.60479}
{"mode": "train", "epoch": 12, "iter": 2200, "lr": 0.00493, "memory": 18774, "data_time": 0.01532, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26178, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26401, "loss": 4.12247, "time": 0.75029}
{"mode": "train", "epoch": 13, "iter": 2250, "lr": 0.00481, "memory": 18774, "data_time": 0.01829, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26299, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.26482, "loss": 4.12246, "time": 0.58544}
{"mode": "train", "epoch": 13, "iter": 2300, "lr": 0.00469, "memory": 18774, "data_time": 0.0129, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26381, "aux.loss_seg": 1.17792, "aux.acc_seg": 5.2636, "loss": 4.12245, "time": 0.60879}
{"mode": "train", "epoch": 13, "iter": 2350, "lr": 0.00456, "memory": 18774, "data_time": 0.01343, "decode.loss_seg": 2.94454, "decode.acc_seg": 5.26299, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26255, "loss": 4.12245, "time": 0.68931}
{"mode": "train", "epoch": 13, "iter": 2400, "lr": 0.00444, "memory": 18774, "data_time": 0.01468, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26485, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26381, "loss": 4.12244, "time": 0.5457}
{"mode": "train", "epoch": 14, "iter": 2450, "lr": 0.00432, "memory": 18774, "data_time": 0.03194, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26378, "aux.loss_seg": 1.17791, "aux.acc_seg": 5.26344, "loss": 4.12244, "time": 0.72313}
{"mode": "train", "epoch": 14, "iter": 2500, "lr": 0.0042, "memory": 18774, "data_time": 0.0187, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26412, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26471, "loss": 4.12244, "time": 0.65123}
{"mode": "train", "epoch": 14, "iter": 2550, "lr": 0.00407, "memory": 18774, "data_time": 0.01544, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26299, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26456, "loss": 4.12243, "time": 0.63211}
{"mode": "train", "epoch": 14, "iter": 2600, "lr": 0.00395, "memory": 18774, "data_time": 0.01219, "decode.loss_seg": 2.94453, "decode.acc_seg": 5.26313, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26441, "loss": 4.12243, "time": 0.66369}
{"mode": "train", "epoch": 15, "iter": 2650, "lr": 0.00383, "memory": 18774, "data_time": 0.03404, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26301, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.2619, "loss": 4.12242, "time": 0.67715}
{"mode": "train", "epoch": 15, "iter": 2700, "lr": 0.0037, "memory": 18774, "data_time": 0.02521, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26444, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26267, "loss": 4.12242, "time": 0.67474}
{"mode": "train", "epoch": 15, "iter": 2750, "lr": 0.00358, "memory": 18774, "data_time": 0.01939, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26274, "aux.loss_seg": 1.1779, "aux.acc_seg": 5.26264, "loss": 4.12242, "time": 0.63452}
{"mode": "train", "epoch": 16, "iter": 2800, "lr": 0.00345, "memory": 18774, "data_time": 0.02582, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26253, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26412, "loss": 4.12241, "time": 0.65799}
{"mode": "train", "epoch": 16, "iter": 2850, "lr": 0.00333, "memory": 18774, "data_time": 0.01548, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2641, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26197, "loss": 4.12241, "time": 0.70657}
{"mode": "train", "epoch": 16, "iter": 2900, "lr": 0.0032, "memory": 18774, "data_time": 0.02171, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.2647, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2634, "loss": 4.12241, "time": 0.64462}
{"mode": "train", "epoch": 16, "iter": 2950, "lr": 0.00307, "memory": 18774, "data_time": 0.01351, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26262, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.2642, "loss": 4.1224, "time": 0.61329}
{"mode": "train", "epoch": 17, "iter": 3000, "lr": 0.00295, "memory": 18774, "data_time": 0.02121, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26323, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26283, "loss": 4.1224, "time": 0.76127}
{"mode": "train", "epoch": 17, "iter": 3050, "lr": 0.00282, "memory": 18774, "data_time": 0.01355, "decode.loss_seg": 2.94452, "decode.acc_seg": 5.26242, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26369, "loss": 4.1224, "time": 0.6158}
{"mode": "train", "epoch": 17, "iter": 3100, "lr": 0.00269, "memory": 18774, "data_time": 0.02465, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26473, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26491, "loss": 4.12239, "time": 0.74527}
{"mode": "train", "epoch": 17, "iter": 3150, "lr": 0.00256, "memory": 18774, "data_time": 0.02355, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26426, "aux.loss_seg": 1.17789, "aux.acc_seg": 5.26185, "loss": 4.1224, "time": 0.78968}
{"mode": "train", "epoch": 18, "iter": 3200, "lr": 0.00243, "memory": 18774, "data_time": 0.02187, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26321, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26269, "loss": 4.12239, "time": 0.70164}
{"mode": "train", "epoch": 18, "iter": 3250, "lr": 0.0023, "memory": 18774, "data_time": 0.02335, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26278, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26206, "loss": 4.12239, "time": 0.744}
{"mode": "train", "epoch": 18, "iter": 3300, "lr": 0.00217, "memory": 18774, "data_time": 0.02671, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26307, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26434, "loss": 4.12239, "time": 0.6368}
{"mode": "train", "epoch": 19, "iter": 3350, "lr": 0.00203, "memory": 18774, "data_time": 0.01883, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26353, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26287, "loss": 4.12239, "time": 0.73842}
{"mode": "train", "epoch": 19, "iter": 3400, "lr": 0.0019, "memory": 18774, "data_time": 0.0216, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26258, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26466, "loss": 4.12238, "time": 0.63069}
{"mode": "train", "epoch": 19, "iter": 3450, "lr": 0.00176, "memory": 18774, "data_time": 0.01715, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26349, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26344, "loss": 4.12238, "time": 0.68759}
{"mode": "train", "epoch": 19, "iter": 3500, "lr": 0.00163, "memory": 18774, "data_time": 0.02265, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26113, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26474, "loss": 4.12238, "time": 0.70373}
{"mode": "train", "epoch": 20, "iter": 3550, "lr": 0.00149, "memory": 18774, "data_time": 0.03018, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26314, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26297, "loss": 4.12238, "time": 0.57766}
{"mode": "train", "epoch": 20, "iter": 3600, "lr": 0.00135, "memory": 18774, "data_time": 0.02025, "decode.loss_seg": 2.94451, "decode.acc_seg": 5.26293, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26463, "loss": 4.12238, "time": 0.67898}
{"mode": "train", "epoch": 20, "iter": 3650, "lr": 0.00121, "memory": 18774, "data_time": 0.01447, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26466, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26542, "loss": 4.12238, "time": 0.56377}
{"mode": "train", "epoch": 20, "iter": 3700, "lr": 0.00106, "memory": 18774, "data_time": 0.0242, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26204, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26394, "loss": 4.12238, "time": 0.77003}
{"mode": "train", "epoch": 21, "iter": 3750, "lr": 0.00092, "memory": 18774, "data_time": 0.01744, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26348, "aux.loss_seg": 1.17788, "aux.acc_seg": 5.26369, "loss": 4.12238, "time": 0.65593}
{"mode": "train", "epoch": 21, "iter": 3800, "lr": 0.00077, "memory": 18774, "data_time": 0.01701, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26253, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26333, "loss": 4.12238, "time": 0.59578}
{"mode": "train", "epoch": 21, "iter": 3850, "lr": 0.00062, "memory": 18774, "data_time": 0.01596, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.2643, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26277, "loss": 4.12238, "time": 0.67689}
{"mode": "train", "epoch": 21, "iter": 3900, "lr": 0.00046, "memory": 18774, "data_time": 0.01898, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26304, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26332, "loss": 4.12238, "time": 0.55539}
{"mode": "train", "epoch": 22, "iter": 3950, "lr": 0.0003, "memory": 18774, "data_time": 0.02633, "decode.loss_seg": 2.9445, "decode.acc_seg": 5.26269, "aux.loss_seg": 1.17787, "aux.acc_seg": 5.26491, "loss": 4.12238, "time": 0.70192}
